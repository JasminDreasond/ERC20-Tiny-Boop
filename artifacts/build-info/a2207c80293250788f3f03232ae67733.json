{
	"id": "a2207c80293250788f3f03232ae67733",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"tiny_boop.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\n/*\n\n    Boop Contract made by Yasmin Seidel (JasminDreasond)\n    WARNING! This contract is designed to be fun! Don't try to use boops as a financial system!!\n\n    This is a better version from the BSC version (made by me too).\n    The original version url is here:\n\n    https://bscscan.com/token/0x00343061bdbc79ad64018fb4b3aed2e1701b0e24#code\n\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ERC20 is Context {\n    \n    // User Balances\n    mapping(address => uint256) private _balances;\n\n    // Boop Pair Balance\n    mapping (string => uint256) private _balances_pair;\n\n    // Tiny Data\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    // Event\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // Constructor\n    constructor() {\n        _name = 'Tiny Boop';\n        _symbol = 'Boop';\n    }\n\n    // Information\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return 1;\n    }\n\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    // Boop Pair\n    function balancePairOf(address sender, address receiver) external view returns (uint256) {\n\n        // Detect Address.\n        require(sender != address(0), \"Boop Sender address invalid\");\n        require(receiver != address(0), \"Boop Receiver address invalid\");\n\n        // Base Values\n        string memory _string_sender;\n        string memory _string_to;\n        string memory _pair_value;\n\n        // Convert to String\n        _string_sender = Strings.toHexString(sender);\n        _string_to = Strings.toHexString(receiver);\n\n        _pair_value = string(abi.encodePacked(_string_sender,'__'));\n        _pair_value = string(abi.encodePacked(_pair_value,_string_to));\n\n        return _balances_pair[_pair_value];\n    \n    }\n\n    // Token Viewer\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    // Transfer and boop alias\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n\n        // Validator\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        // You can only send 3 boops.\n        require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\");\n        require(amount >= 1, \"Calm your crazy paw! Boop Value must be between 1 to 3\");\n        require(amount <= 3, \"Calm your crazy paw! Boop Value must be between 1 to 3\");\n\n        // Base Values\n        string memory _string_sender;\n        string memory _string_to;\n        string memory _pair_value;\n\n        // Pair Value\n        _string_sender = Strings.toHexString(msg.sender);\n        _string_to = Strings.toHexString(to);\n        _pair_value = string(abi.encodePacked(_string_sender,'__'));\n        _pair_value = string(abi.encodePacked(_pair_value,_string_to));\n\n        // Execute\n        unchecked {\n            _totalSupply += amount;\n            _balances[to] += amount;\n            _balances_pair[_pair_value] += amount;\n        }\n\n        // Emit\n        emit Transfer(from, to, amount);\n\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP4 EXP CALLVALUE DUP10 0xB1 DUP7 0xCB 0x22 PUSH2 0x2417 MSTORE8 NUMBER 0xA7 DUP6 0x29 0xBC 0xC2 0xD2 0xE5 JUMPDEST SWAP6 0xE7 PUSH17 0xB81F1D26F6039764736F6C634300081200 CALLER ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP4 EXP CALLVALUE DUP10 0xB1 DUP7 0xCB 0x22 PUSH2 0x2417 MSTORE8 NUMBER 0xA7 DUP6 0x29 0xBC 0xC2 0xD2 0xE5 JUMPDEST SWAP6 0xE7 PUSH17 0xB81F1D26F6039764736F6C634300081200 CALLER ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE0 0xD7 0xCA 0xF8 0xB5 CALLDATASIZE PUSH15 0xD2E6EA208CB596A40B3CCD2C7E9FC PUSH2 0xD4D 0xE6 XOR JUMP STATICCALL PUSH7 0xA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE0 0xD7 0xCA 0xF8 0xB5 CALLDATASIZE PUSH15 0xD2E6EA208CB596A40B3CCD2C7E9FC PUSH2 0xD4D 0xE6 XOR JUMP STATICCALL PUSH7 0xA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tiny_boop.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "balancePairOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n  mstore(0x40, 0x80)\n    /* \"tiny_boop.sol\":993:1069  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"tiny_boop.sol\":1017:1036  _name = 'Tiny Boop' */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x09\n  dup2\n  mstore\n  shl(0xbc, 0x054696e7920426f6f7)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"tiny_boop.sol\":1017:1022  _name */\n  0x03\n  swap1\n    /* \"tiny_boop.sol\":1017:1036  _name = 'Tiny Boop' */\n  tag_4\n  swap1\n    /* \"tiny_boop.sol\":1017:1022  _name */\n  dup3\n    /* \"tiny_boop.sol\":1017:1036  _name = 'Tiny Boop' */\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"tiny_boop.sol\":1046:1062  _symbol = 'Boop' */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe4, 0x0426f6f7)\n  0x20\n  dup4\n  add\n  mstore\n  swap1\n  tag_6\n  swap1\n  dup3\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n  jump(tag_13)\n    /* \"#utility.yul\":14:141   */\ntag_8:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_9:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_16:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_17\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_17:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_11:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_21\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_21:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_22:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_22)\ntag_24:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_20:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_5:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1582:1679   */\n  tag_29\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_30\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_9\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_11\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_32\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_33:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_24)\n    /* \"#utility.yul\":1810:2473   */\ntag_32:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_36:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_39:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_13:\n    /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xeb55bc6b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tiny_boop.sol\":1094:1183  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1376:1473  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n        /* \"tiny_boop.sol\":1454:1466  _totalSupply */\n      sload(0x02)\n        /* \"tiny_boop.sol\":1376:1473  function totalSupply() public view virtual returns (uint256) {... */\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":816:841   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":804:806   */\n      0x20\n        /* \"#utility.yul\":789:807   */\n      add\n        /* \"tiny_boop.sol\":1376:1473  function totalSupply() public view virtual returns (uint256) {... */\n      tag_13\n        /* \"#utility.yul\":670:847   */\n      jump\n        /* \"tiny_boop.sol\":1289:1370  function decimals() public view virtual returns (uint8) {... */\n    tag_5:\n      mload(0x40)\n        /* \"tiny_boop.sol\":1362:1363  1 */\n      0x01\n        /* \"#utility.yul\":994:1030   */\n      dup2\n      mstore\n        /* \"#utility.yul\":982:984   */\n      0x20\n        /* \"#utility.yul\":967:985   */\n      add\n        /* \"tiny_boop.sol\":1289:1370  function decimals() public view virtual returns (uint8) {... */\n      tag_13\n        /* \"#utility.yul\":852:1036   */\n      jump\n        /* \"tiny_boop.sol\":2249:2365  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_6:\n      tag_15\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":2340:2358  _balances[account] */\n      and\n        /* \"tiny_boop.sol\":2314:2321  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":2340:2358  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"tiny_boop.sol\":2249:2365  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"tiny_boop.sol\":1190:1283  function symbol() public view virtual returns (string memory) {... */\n    tag_7:\n      tag_11\n      tag_29\n      jump\t// in\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1834:1848   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1827:1849   */\n      iszero\n        /* \"#utility.yul\":1809:1850   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1797:1799   */\n      0x20\n        /* \"#utility.yul\":1782:1800   */\n      add\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      tag_13\n        /* \"#utility.yul\":1669:1856   */\n      jump\n        /* \"tiny_boop.sol\":1496:2223  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n    tag_9:\n      tag_15\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"tiny_boop.sol\":1094:1183  function name() public view virtual returns (string memory) {... */\n    tag_12:\n        /* \"tiny_boop.sol\":1139:1152  string memory */\n      0x60\n        /* \"tiny_boop.sol\":1171:1176  _name */\n      0x03\n        /* \"tiny_boop.sol\":1164:1176  return _name */\n      dup1\n      sload\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_45\n      swap1\n      tag_44\n      jump\t// in\n    tag_45:\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_47\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_46)\n    tag_47:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_48:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_48\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1094:1183  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":1190:1283  function symbol() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"tiny_boop.sol\":1237:1250  string memory */\n      0x60\n        /* \"tiny_boop.sol\":1269:1276  _symbol */\n      0x04\n        /* \"tiny_boop.sol\":1262:1276  return _symbol */\n      dup1\n      sload\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_34:\n        /* \"tiny_boop.sol\":2472:2476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"tiny_boop.sol\":2526:2554  _transfer(owner, to, amount) */\n      tag_61\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"tiny_boop.sol\":2543:2545  to */\n      dup6\n        /* \"tiny_boop.sol\":2547:2553  amount */\n      dup6\n        /* \"tiny_boop.sol\":2526:2535  _transfer */\n      tag_62\n        /* \"tiny_boop.sol\":2526:2554  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_61:\n        /* \"tiny_boop.sol\":2571:2575  true */\n      0x01\n        /* \"tiny_boop.sol\":2564:2575  return true */\n      swap2\n      pop\n      pop\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_58:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"tiny_boop.sol\":1496:2223  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n    tag_40:\n        /* \"tiny_boop.sol\":1576:1583  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":1631:1651  sender != address(0) */\n      dup4\n      and\n        /* \"tiny_boop.sol\":1623:1683  require(sender != address(0), \"Boop Sender address invalid\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2713:2715   */\n      0x20\n        /* \"tiny_boop.sol\":1623:1683  require(sender != address(0), \"Boop Sender address invalid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2695:2716   */\n      mstore\n        /* \"#utility.yul\":2752:2754   */\n      0x1b\n        /* \"#utility.yul\":2732:2750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2725:2755   */\n      mstore\n        /* \"#utility.yul\":2791:2820   */\n      0x426f6f702053656e646572206164647265737320696e76616c69640000000000\n        /* \"#utility.yul\":2771:2789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2764:2821   */\n      mstore\n        /* \"#utility.yul\":2838:2856   */\n      0x64\n      add\n        /* \"tiny_boop.sol\":1623:1683  require(sender != address(0), \"Boop Sender address invalid\") */\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":1701:1723  receiver != address(0) */\n      dup3\n      and\n        /* \"tiny_boop.sol\":1693:1757  require(receiver != address(0), \"Boop Receiver address invalid\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3069:3071   */\n      0x20\n        /* \"tiny_boop.sol\":1693:1757  require(receiver != address(0), \"Boop Receiver address invalid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3051:3072   */\n      mstore\n        /* \"#utility.yul\":3108:3110   */\n      0x1d\n        /* \"#utility.yul\":3088:3106   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3081:3111   */\n      mstore\n        /* \"#utility.yul\":3147:3178   */\n      0x426f6f70205265636569766572206164647265737320696e76616c6964000000\n        /* \"#utility.yul\":3127:3145   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3120:3179   */\n      mstore\n        /* \"#utility.yul\":3196:3214   */\n      0x64\n      add\n        /* \"tiny_boop.sol\":1693:1757  require(receiver != address(0), \"Boop Receiver address invalid\") */\n      tag_65\n        /* \"#utility.yul\":2867:3220   */\n      jump\n        /* \"tiny_boop.sol\":1693:1757  require(receiver != address(0), \"Boop Receiver address invalid\") */\n    tag_67:\n        /* \"tiny_boop.sol\":1791:1819  string memory _string_sender */\n      0x60\n        /* \"tiny_boop.sol\":1829:1853  string memory _string_to */\n      dup1\n        /* \"tiny_boop.sol\":1863:1888  string memory _pair_value */\n      0x60\n        /* \"tiny_boop.sol\":1945:1972  Strings.toHexString(sender) */\n      tag_70\n        /* \"tiny_boop.sol\":1965:1971  sender */\n      dup7\n        /* \"tiny_boop.sol\":1945:1964  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":1945:1972  Strings.toHexString(sender) */\n      jump\t// in\n    tag_70:\n        /* \"tiny_boop.sol\":1928:1972  _string_sender = Strings.toHexString(sender) */\n      swap3\n      pop\n        /* \"tiny_boop.sol\":1995:2024  Strings.toHexString(receiver) */\n      tag_72\n        /* \"tiny_boop.sol\":2015:2023  receiver */\n      dup6\n        /* \"tiny_boop.sol\":1995:2014  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":1995:2024  Strings.toHexString(receiver) */\n      jump\t// in\n    tag_72:\n        /* \"tiny_boop.sol\":1982:2024  _string_to = Strings.toHexString(receiver) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":2073:2087  _string_sender */\n      dup3\n        /* \"tiny_boop.sol\":2056:2093  abi.encodePacked(_string_sender,'__') */\n      add(0x20, mload(0x40))\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":2035:2094  _pair_value = string(abi.encodePacked(_string_sender,'__')) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2142:2153  _pair_value */\n      dup1\n        /* \"tiny_boop.sol\":2154:2164  _string_to */\n      dup3\n        /* \"tiny_boop.sol\":2125:2165  abi.encodePacked(_pair_value,_string_to) */\n      add(0x20, mload(0x40))\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":2104:2166  _pair_value = string(abi.encodePacked(_pair_value,_string_to)) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2184:2198  _balances_pair */\n      0x01\n        /* \"tiny_boop.sol\":2199:2210  _pair_value */\n      dup2\n        /* \"tiny_boop.sol\":2184:2211  _balances_pair[_pair_value] */\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"tiny_boop.sol\":2177:2211  return _balances_pair[_pair_value] */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"tiny_boop.sol\":1496:2223  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"tiny_boop.sol\":2588:3812  function _transfer(... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":2736:2754  from != address(0) */\n      dup4\n      and\n        /* \"tiny_boop.sol\":2728:2796  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4680:4682   */\n      0x20\n        /* \"tiny_boop.sol\":2728:2796  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4662:4683   */\n      mstore\n        /* \"#utility.yul\":4719:4721   */\n      0x25\n        /* \"#utility.yul\":4699:4717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4692:4722   */\n      mstore\n        /* \"#utility.yul\":4758:4792   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4738:4756   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4731:4793   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4809:4827   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4802:4837   */\n      mstore\n        /* \"#utility.yul\":4854:4873   */\n      0x84\n      add\n        /* \"tiny_boop.sol\":2728:2796  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_65\n        /* \"#utility.yul\":4478:4879   */\n      jump\n        /* \"tiny_boop.sol\":2728:2796  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":2814:2830  to != address(0) */\n      dup3\n      and\n        /* \"tiny_boop.sol\":2806:2870  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"tiny_boop.sol\":2806:2870  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5068:5089   */\n      mstore\n        /* \"#utility.yul\":5125:5127   */\n      0x23\n        /* \"#utility.yul\":5105:5123   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5098:5128   */\n      mstore\n        /* \"#utility.yul\":5164:5198   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5144:5162   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5137:5199   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5215:5233   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5208:5241   */\n      mstore\n        /* \"#utility.yul\":5258:5277   */\n      0x84\n      add\n        /* \"tiny_boop.sol\":2806:2870  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_65\n        /* \"#utility.yul\":4884:5283   */\n      jump\n        /* \"tiny_boop.sol\":2806:2870  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_84:\n        /* \"tiny_boop.sol\":2941:2951  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":2927:2952  to != address(msg.sender) */\n      dup4\n      and\n      sub\n        /* \"tiny_boop.sol\":2919:2997  require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5490:5492   */\n      0x20\n        /* \"tiny_boop.sol\":2919:2997  require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5472:5493   */\n      mstore\n        /* \"#utility.yul\":5529:5531   */\n      0x28\n        /* \"#utility.yul\":5509:5527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5502:5532   */\n      mstore\n        /* \"#utility.yul\":5568:5602   */\n      0x4865792120596f752063616e27742074727920746f20626f6f7020796f757273\n        /* \"#utility.yul\":5548:5566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5541:5603   */\n      mstore\n      shl(0xc0, 0x656c6621203e3a63)\n        /* \"#utility.yul\":5619:5637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5612:5650   */\n      mstore\n        /* \"#utility.yul\":5667:5686   */\n      0x84\n      add\n        /* \"tiny_boop.sol\":2919:2997  require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\") */\n      tag_65\n        /* \"#utility.yul\":5288:5692   */\n      jump\n        /* \"tiny_boop.sol\":2919:2997  require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\") */\n    tag_87:\n        /* \"tiny_boop.sol\":3025:3026  1 */\n      0x01\n        /* \"tiny_boop.sol\":3015:3021  amount */\n      dup2\n        /* \"tiny_boop.sol\":3015:3026  amount >= 1 */\n      lt\n      iszero\n        /* \"tiny_boop.sol\":3007:3085  require(amount >= 1, \"Calm your crazy paw! Boop Value must be between 1 to 3\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_92\n      jump\t// in\n    tag_90:\n        /* \"tiny_boop.sol\":3113:3114  3 */\n      0x03\n        /* \"tiny_boop.sol\":3103:3109  amount */\n      dup2\n        /* \"tiny_boop.sol\":3103:3114  amount <= 3 */\n      gt\n      iszero\n        /* \"tiny_boop.sol\":3095:3173  require(amount <= 3, \"Calm your crazy paw! Boop Value must be between 1 to 3\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n        /* \"tiny_boop.sol\":3207:3235  string memory _string_sender */\n      0x60\n        /* \"tiny_boop.sol\":3245:3269  string memory _string_to */\n      dup1\n        /* \"tiny_boop.sol\":3279:3304  string memory _pair_value */\n      0x60\n        /* \"tiny_boop.sol\":3354:3385  Strings.toHexString(msg.sender) */\n      tag_95\n        /* \"tiny_boop.sol\":3374:3384  msg.sender */\n      caller\n        /* \"tiny_boop.sol\":3354:3373  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":3354:3385  Strings.toHexString(msg.sender) */\n      jump\t// in\n    tag_95:\n        /* \"tiny_boop.sol\":3337:3385  _string_sender = Strings.toHexString(msg.sender) */\n      swap3\n      pop\n        /* \"tiny_boop.sol\":3408:3431  Strings.toHexString(to) */\n      tag_96\n        /* \"tiny_boop.sol\":3428:3430  to */\n      dup6\n        /* \"tiny_boop.sol\":3408:3427  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":3408:3431  Strings.toHexString(to) */\n      jump\t// in\n    tag_96:\n        /* \"tiny_boop.sol\":3395:3431  _string_to = Strings.toHexString(to) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":3479:3493  _string_sender */\n      dup3\n        /* \"tiny_boop.sol\":3462:3499  abi.encodePacked(_string_sender,'__') */\n      add(0x20, mload(0x40))\n      tag_97\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":3441:3500  _pair_value = string(abi.encodePacked(_string_sender,'__')) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":3548:3559  _pair_value */\n      dup1\n        /* \"tiny_boop.sol\":3560:3570  _string_to */\n      dup3\n        /* \"tiny_boop.sol\":3531:3571  abi.encodePacked(_pair_value,_string_to) */\n      add(0x20, mload(0x40))\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_98:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"tiny_boop.sol\":3626:3638  _totalSupply */\n      0x02\n        /* \"tiny_boop.sol\":3626:3648  _totalSupply += amount */\n      dup1\n      sload\n      dup9\n      add\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":3662:3675  _balances[to] */\n      dup9\n      and\n        /* \"tiny_boop.sol\":3626:3638  _totalSupply */\n      0x00\n        /* \"tiny_boop.sol\":3662:3675  _balances[to] */\n      swap1\n      dup2\n      mstore\n        /* \"tiny_boop.sol\":3531:3571  abi.encodePacked(_pair_value,_string_to) */\n      0x20\n        /* \"tiny_boop.sol\":3662:3675  _balances[to] */\n      dup2\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"tiny_boop.sol\":3662:3685  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"tiny_boop.sol\":3531:3571  abi.encodePacked(_pair_value,_string_to) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":3642:3648  amount */\n      dup5\n      swap1\n      0x01\n      swap1\n        /* \"tiny_boop.sol\":3699:3726  _balances_pair[_pair_value] */\n      tag_99\n      swap1\n        /* \"tiny_boop.sol\":3531:3571  abi.encodePacked(_pair_value,_string_to) */\n      dup5\n      swap1\n        /* \"tiny_boop.sol\":3699:3726  _balances_pair[_pair_value] */\n      tag_78\n      jump\t// in\n    tag_99:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      0x20\n      swap2\n      dup2\n      swap1\n      sub\n      dup3\n      add\n      dup2\n      keccak256\n        /* \"tiny_boop.sol\":3699:3736  _balances_pair[_pair_value] += amount */\n      dup1\n      sload\n      swap4\n      swap1\n      swap4\n      add\n      swap1\n      swap3\n      sstore\n        /* \"#utility.yul\":816:841   */\n      dup6\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"tiny_boop.sol\":3778:3804  Transfer(from, to, amount) */\n      dup8\n      dup2\n      and\n      swap3\n      swap1\n      dup10\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":789:807   */\n      add\n        /* \"tiny_boop.sol\":3778:3804  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"tiny_boop.sol\":2696:3812  {... */\n      pop\n      pop\n      pop\n        /* \"tiny_boop.sol\":2588:3812  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_58\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_105\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_107\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_112:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_117\n      tag_115\n      jump\t// in\n    tag_117:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_121\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_106\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_122\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_108\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_119\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_124\n      tag_115\n      jump\t// in\n    tag_124:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_115\n      jump\t// in\n    tag_126:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      tag_127\n      dup2\n      tag_128\n      jump\t// in\n    tag_127:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_118)\n    tag_119:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7162:7164   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7144:7165   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7181:7199   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7174:7204   */\n      mstore\n        /* \"#utility.yul\":7240:7274   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":7220:7238   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7213:7275   */\n      mstore\n        /* \"#utility.yul\":7292:7310   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_65\n        /* \"#utility.yul\":6960:7316   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_132:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_137:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_137)\n    tag_139:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_14:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_141\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_132\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1041:1214   */\n    tag_133:\n        /* \"#utility.yul\":1109:1129   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1158:1189   */\n      dup2\n      and\n        /* \"#utility.yul\":1148:1190   */\n      dup2\n      eq\n        /* \"#utility.yul\":1138:1208   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1204:1205   */\n      0x00\n        /* \"#utility.yul\":1201:1202   */\n      dup1\n        /* \"#utility.yul\":1194:1206   */\n      revert\n        /* \"#utility.yul\":1138:1208   */\n    tag_145:\n        /* \"#utility.yul\":1041:1214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1219:1405   */\n    tag_25:\n        /* \"#utility.yul\":1278:1284   */\n      0x00\n        /* \"#utility.yul\":1331:1333   */\n      0x20\n        /* \"#utility.yul\":1319:1328   */\n      dup3\n        /* \"#utility.yul\":1310:1317   */\n      dup5\n        /* \"#utility.yul\":1306:1329   */\n      sub\n        /* \"#utility.yul\":1302:1334   */\n      slt\n        /* \"#utility.yul\":1299:1351   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1347:1348   */\n      0x00\n        /* \"#utility.yul\":1344:1345   */\n      dup1\n        /* \"#utility.yul\":1337:1349   */\n      revert\n        /* \"#utility.yul\":1299:1351   */\n    tag_147:\n        /* \"#utility.yul\":1370:1399   */\n      tag_129\n        /* \"#utility.yul\":1389:1398   */\n      dup3\n        /* \"#utility.yul\":1370:1399   */\n      tag_133\n      jump\t// in\n        /* \"#utility.yul\":1410:1664   */\n    tag_33:\n        /* \"#utility.yul\":1478:1484   */\n      0x00\n        /* \"#utility.yul\":1486:1492   */\n      dup1\n        /* \"#utility.yul\":1539:1541   */\n      0x40\n        /* \"#utility.yul\":1527:1536   */\n      dup4\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1514:1537   */\n      sub\n        /* \"#utility.yul\":1510:1542   */\n      slt\n        /* \"#utility.yul\":1507:1559   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1507:1559   */\n    tag_150:\n        /* \"#utility.yul\":1578:1607   */\n      tag_151\n        /* \"#utility.yul\":1597:1606   */\n      dup4\n        /* \"#utility.yul\":1578:1607   */\n      tag_133\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1568:1607   */\n      swap5\n        /* \"#utility.yul\":1654:1656   */\n      0x20\n        /* \"#utility.yul\":1639:1657   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1626:1658   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1410:1664   */\n      jump\t// out\n        /* \"#utility.yul\":1861:2121   */\n    tag_39:\n        /* \"#utility.yul\":1929:1935   */\n      0x00\n        /* \"#utility.yul\":1937:1943   */\n      dup1\n        /* \"#utility.yul\":1990:1992   */\n      0x40\n        /* \"#utility.yul\":1978:1987   */\n      dup4\n        /* \"#utility.yul\":1969:1976   */\n      dup6\n        /* \"#utility.yul\":1965:1988   */\n      sub\n        /* \"#utility.yul\":1961:1993   */\n      slt\n        /* \"#utility.yul\":1958:2010   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2006:2007   */\n      0x00\n        /* \"#utility.yul\":2003:2004   */\n      dup1\n        /* \"#utility.yul\":1996:2008   */\n      revert\n        /* \"#utility.yul\":1958:2010   */\n    tag_154:\n        /* \"#utility.yul\":2029:2058   */\n      tag_155\n        /* \"#utility.yul\":2048:2057   */\n      dup4\n        /* \"#utility.yul\":2029:2058   */\n      tag_133\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2019:2058   */\n      swap2\n      pop\n        /* \"#utility.yul\":2077:2115   */\n      tag_156\n        /* \"#utility.yul\":2111:2113   */\n      0x20\n        /* \"#utility.yul\":2100:2109   */\n      dup5\n        /* \"#utility.yul\":2096:2114   */\n      add\n        /* \"#utility.yul\":2077:2115   */\n      tag_133\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2067:2115   */\n      swap1\n      pop\n        /* \"#utility.yul\":1861:2121   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2506   */\n    tag_44:\n        /* \"#utility.yul\":2205:2206   */\n      0x01\n        /* \"#utility.yul\":2201:2213   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2248:2260   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2269:2330   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2323:2327   */\n      0x7f\n        /* \"#utility.yul\":2315:2321   */\n      dup3\n        /* \"#utility.yul\":2311:2328   */\n      and\n        /* \"#utility.yul\":2301:2328   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2330   */\n    tag_158:\n        /* \"#utility.yul\":2376:2378   */\n      0x20\n        /* \"#utility.yul\":2368:2374   */\n      dup3\n        /* \"#utility.yul\":2365:2379   */\n      lt\n        /* \"#utility.yul\":2345:2363   */\n      dup2\n        /* \"#utility.yul\":2342:2380   */\n      sub\n        /* \"#utility.yul\":2339:2500   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2422:2432   */\n      0x4e487b71\n        /* \"#utility.yul\":2417:2420   */\n      0xe0\n        /* \"#utility.yul\":2413:2433   */\n      shl\n        /* \"#utility.yul\":2410:2411   */\n      0x00\n        /* \"#utility.yul\":2403:2434   */\n      mstore\n        /* \"#utility.yul\":2457:2461   */\n      0x22\n        /* \"#utility.yul\":2454:2455   */\n      0x04\n        /* \"#utility.yul\":2447:2462   */\n      mstore\n        /* \"#utility.yul\":2485:2489   */\n      0x24\n        /* \"#utility.yul\":2482:2483   */\n      0x00\n        /* \"#utility.yul\":2475:2490   */\n      revert\n        /* \"#utility.yul\":2339:2500   */\n    tag_159:\n      pop\n        /* \"#utility.yul\":2126:2506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3225:3678   */\n    tag_74:\n        /* \"#utility.yul\":3457:3460   */\n      0x00\n        /* \"#utility.yul\":3495:3501   */\n      dup3\n        /* \"#utility.yul\":3489:3502   */\n      mload\n        /* \"#utility.yul\":3511:3577   */\n      tag_163\n        /* \"#utility.yul\":3570:3576   */\n      dup2\n        /* \"#utility.yul\":3565:3568   */\n      dup5\n        /* \"#utility.yul\":3558:3562   */\n      0x20\n        /* \"#utility.yul\":3550:3556   */\n      dup8\n        /* \"#utility.yul\":3546:3563   */\n      add\n        /* \"#utility.yul\":3511:3577   */\n      tag_132\n      jump\t// in\n    tag_163:\n      shl(0xf0, 0x5f5f)\n        /* \"#utility.yul\":3599:3615   */\n      swap3\n      add\n        /* \"#utility.yul\":3624:3643   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":3670:3671   */\n      0x02\n        /* \"#utility.yul\":3659:3672   */\n      add\n      swap2\n        /* \"#utility.yul\":3225:3678   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:4179   */\n    tag_76:\n        /* \"#utility.yul\":3862:3865   */\n      0x00\n        /* \"#utility.yul\":3900:3906   */\n      dup4\n        /* \"#utility.yul\":3894:3907   */\n      mload\n        /* \"#utility.yul\":3916:3982   */\n      tag_165\n        /* \"#utility.yul\":3975:3981   */\n      dup2\n        /* \"#utility.yul\":3970:3973   */\n      dup5\n        /* \"#utility.yul\":3963:3967   */\n      0x20\n        /* \"#utility.yul\":3955:3961   */\n      dup9\n        /* \"#utility.yul\":3951:3968   */\n      add\n        /* \"#utility.yul\":3916:3982   */\n      tag_132\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4045:4058   */\n      dup4\n      mload\n        /* \"#utility.yul\":4004:4020   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4067:4137   */\n      tag_166\n        /* \"#utility.yul\":4045:4058   */\n      dup2\n        /* \"#utility.yul\":4004:4020   */\n      dup4\n        /* \"#utility.yul\":4114:4118   */\n      0x20\n        /* \"#utility.yul\":4102:4119   */\n      dup9\n      add\n        /* \"#utility.yul\":4067:4137   */\n      tag_132\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4153:4173   */\n      add\n      swap5\n        /* \"#utility.yul\":3683:4179   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4184:4473   */\n    tag_78:\n        /* \"#utility.yul\":4315:4318   */\n      0x00\n        /* \"#utility.yul\":4353:4359   */\n      dup3\n        /* \"#utility.yul\":4347:4360   */\n      mload\n        /* \"#utility.yul\":4369:4435   */\n      tag_168\n        /* \"#utility.yul\":4428:4434   */\n      dup2\n        /* \"#utility.yul\":4423:4426   */\n      dup5\n        /* \"#utility.yul\":4416:4420   */\n      0x20\n        /* \"#utility.yul\":4408:4414   */\n      dup8\n        /* \"#utility.yul\":4404:4421   */\n      add\n        /* \"#utility.yul\":4369:4435   */\n      tag_132\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4451:4467   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":4184:4473   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6115   */\n    tag_92:\n        /* \"#utility.yul\":5899:5901   */\n      0x20\n        /* \"#utility.yul\":5881:5902   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5938:5940   */\n      0x36\n        /* \"#utility.yul\":5918:5936   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5911:5941   */\n      mstore\n        /* \"#utility.yul\":5977:6011   */\n      0x43616c6d20796f7572206372617a79207061772120426f6f702056616c756520\n        /* \"#utility.yul\":5972:5974   */\n      0x40\n        /* \"#utility.yul\":5957:5975   */\n      dup3\n      add\n        /* \"#utility.yul\":5950:6012   */\n      mstore\n      shl(0x50, 0x6d757374206265206265747765656e203120746f2033)\n        /* \"#utility.yul\":6043:6045   */\n      0x60\n        /* \"#utility.yul\":6028:6046   */\n      dup3\n      add\n        /* \"#utility.yul\":6021:6073   */\n      mstore\n        /* \"#utility.yul\":6105:6108   */\n      0x80\n        /* \"#utility.yul\":6090:6109   */\n      add\n      swap1\n        /* \"#utility.yul\":5697:6115   */\n      jump\t// out\n        /* \"#utility.yul\":6120:6247   */\n    tag_134:\n        /* \"#utility.yul\":6181:6191   */\n      0x4e487b71\n        /* \"#utility.yul\":6176:6179   */\n      0xe0\n        /* \"#utility.yul\":6172:6192   */\n      shl\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6193   */\n      mstore\n        /* \"#utility.yul\":6212:6216   */\n      0x11\n        /* \"#utility.yul\":6209:6210   */\n      0x04\n        /* \"#utility.yul\":6202:6217   */\n      mstore\n        /* \"#utility.yul\":6236:6240   */\n      0x24\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6226:6241   */\n      revert\n        /* \"#utility.yul\":6252:6420   */\n    tag_106:\n        /* \"#utility.yul\":6325:6334   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6356:6365   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6373:6388   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6367:6389   */\n      dup5\n      eq\n        /* \"#utility.yul\":6353:6390   */\n      or\n        /* \"#utility.yul\":6343:6414   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":6394:6412   */\n      tag_58\n      tag_134\n      jump\t// in\n        /* \"#utility.yul\":6425:6550   */\n    tag_108:\n        /* \"#utility.yul\":6490:6499   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6511:6521   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6508:6544   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":6524:6542   */\n      tag_58\n      tag_134\n      jump\t// in\n        /* \"#utility.yul\":6555:6682   */\n    tag_111:\n        /* \"#utility.yul\":6616:6626   */\n      0x4e487b71\n        /* \"#utility.yul\":6611:6614   */\n      0xe0\n        /* \"#utility.yul\":6607:6627   */\n      shl\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6597:6628   */\n      mstore\n        /* \"#utility.yul\":6647:6651   */\n      0x41\n        /* \"#utility.yul\":6644:6645   */\n      0x04\n        /* \"#utility.yul\":6637:6652   */\n      mstore\n        /* \"#utility.yul\":6671:6675   */\n      0x24\n        /* \"#utility.yul\":6668:6669   */\n      0x00\n        /* \"#utility.yul\":6661:6676   */\n      revert\n        /* \"#utility.yul\":6687:6814   */\n    tag_115:\n        /* \"#utility.yul\":6748:6758   */\n      0x4e487b71\n        /* \"#utility.yul\":6743:6746   */\n      0xe0\n        /* \"#utility.yul\":6739:6759   */\n      shl\n        /* \"#utility.yul\":6736:6737   */\n      0x00\n        /* \"#utility.yul\":6729:6760   */\n      mstore\n        /* \"#utility.yul\":6779:6783   */\n      0x32\n        /* \"#utility.yul\":6776:6777   */\n      0x04\n        /* \"#utility.yul\":6769:6784   */\n      mstore\n        /* \"#utility.yul\":6803:6807   */\n      0x24\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6793:6808   */\n      revert\n        /* \"#utility.yul\":6819:6955   */\n    tag_128:\n        /* \"#utility.yul\":6858:6861   */\n      0x00\n        /* \"#utility.yul\":6886:6891   */\n      dup2\n        /* \"#utility.yul\":6876:6915   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":6895:6913   */\n      tag_184\n      tag_134\n      jump\t// in\n    tag_184:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":6931:6949   */\n      add\n      swap1\n        /* \"#utility.yul\":6819:6955   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200dec7150305bdea4d750c57702de9459650a3c42dabfd97708566b91aa1f35b664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1261": {
									"entryPoint": null,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:5"
															},
															"nodeType": "YulIf",
															"src": "289:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:5"
															},
															"nodeType": "YulIf",
															"src": "359:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													}
												],
												"src": "146:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:5",
														"type": ""
													}
												],
												"src": "531:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:5",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:5"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:5"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:5",
																			"statements": []
																		},
																		"src": "1104:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:5"
															},
															"nodeType": "YulIf",
															"src": "748:448:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:5",
														"type": ""
													}
												],
												"src": "657:545:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:5",
														"type": ""
													}
												],
												"src": "1207:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:5"
															},
															"nodeType": "YulIf",
															"src": "1517:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:5"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:5",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:5"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:5"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:5"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:5"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:5",
																					"statements": []
																				},
																				"src": "1964:236:5"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:5",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:5"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:5"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:5"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:5"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:5"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:5"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:5"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:5",
														"type": ""
													}
												],
												"src": "1378:1352:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604080518082019091526009815268054696e7920426f6f760bc1b602082015260039061003e908261010b565b50604080518082019091526004808252630426f6f760e41b602083015290610066908261010b565b506101ca565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009657607f821691505b6020821081036100b657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010657600081815260208120601f850160051c810160208610156100e35750805b601f850160051c820191505b81811015610102578281556001016100ef565b5050505b505050565b81516001600160401b038111156101245761012461006c565b610138816101328454610082565b846100bc565b602080601f83116001811461016d57600084156101555750858301515b600019600386901b1c1916600185901b178555610102565b600085815260208120601f198616915b8281101561019c5788860151825594840194600190910190840161017d565b50858210156101ba5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109e280620001da6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806370a082311161005b57806370a08231146100c157806395d89b41146100ea578063a9059cbb146100f2578063eb55bc6b1461011557600080fd5b806306fdde031461008257806318160ddd146100a0578063313ce567146100b2575b600080fd5b61008a610128565b6040516100979190610761565b60405180910390f35b6002545b604051908152602001610097565b60405160018152602001610097565b6100a46100cf3660046107b0565b6001600160a01b031660009081526020819052604090205490565b61008a6101ba565b6101056101003660046107cb565b6101c9565b6040519015158152602001610097565b6100a46101233660046107f5565b6101e3565b60606003805461013790610828565b80601f016020809104026020016040519081016040528092919081815260200182805461016390610828565b80156101b05780601f10610185576101008083540402835291602001916101b0565b820191906000526020600020905b81548152906001019060200180831161019357829003601f168201915b5050505050905090565b60606004805461013790610828565b6000336101d7818585610321565b60019150505b92915050565b60006001600160a01b0383166102405760405162461bcd60e51b815260206004820152601b60248201527f426f6f702053656e646572206164647265737320696e76616c6964000000000060448201526064015b60405180910390fd5b6001600160a01b0382166102965760405162461bcd60e51b815260206004820152601d60248201527f426f6f70205265636569766572206164647265737320696e76616c69640000006044820152606401610237565b60608060606102a486610589565b92506102af85610589565b9150826040516020016102c29190610862565b604051602081830303815290604052905080826040516020016102e6929190610888565b604051602081830303815290604052905060018160405161030791906108b7565b908152602001604051809103902054935050505092915050565b6001600160a01b0383166103855760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610237565b6001600160a01b0382166103e75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610237565b336001600160a01b038316036104505760405162461bcd60e51b815260206004820152602860248201527f4865792120596f752063616e27742074727920746f20626f6f7020796f757273604482015267656c6621203e3a6360c01b6064820152608401610237565b60018110156104715760405162461bcd60e51b8152600401610237906108d3565b60038111156104925760405162461bcd60e51b8152600401610237906108d3565b60608060606104a033610589565b92506104ab85610589565b9150826040516020016104be9190610862565b604051602081830303815290604052905080826040516020016104e2929190610888565b60408051601f1981840301815282825260028054880190556001600160a01b03881660009081526020819052919091208054870190559150849060019061052a9084906108b7565b908152604051602091819003820181208054939093019092558582526001600160a01b0387811692908916917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050505050565b60606101dd6001600160a01b0383166014606060006105a983600261093f565b6105b4906002610956565b67ffffffffffffffff8111156105cc576105cc610969565b6040519080825280601f01601f1916602001820160405280156105f6576020820181803683370190505b509050600360fc1b816000815181106106115761061161097f565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106405761064061097f565b60200101906001600160f81b031916908160001a905350600061066484600261093f565b61066f906001610956565b90505b60018111156106e7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106106a3576106a361097f565b1a60f81b8282815181106106b9576106b961097f565b60200101906001600160f81b031916908160001a90535060049490941c936106e081610995565b9050610672565b5083156107365760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610237565b9392505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b602081526000825180602084015261078081604085016020870161073d565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146107ab57600080fd5b919050565b6000602082840312156107c257600080fd5b61073682610794565b600080604083850312156107de57600080fd5b6107e783610794565b946020939093013593505050565b6000806040838503121561080857600080fd5b61081183610794565b915061081f60208401610794565b90509250929050565b600181811c9082168061083c57607f821691505b60208210810361085c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161087481846020870161073d565b615f5f60f01b920191825250600201919050565b6000835161089a81846020880161073d565b8351908301906108ae81836020880161073d565b01949350505050565b600082516108c981846020870161073d565b9190910192915050565b60208082526036908201527f43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206040820152756d757374206265206265747765656e203120746f203360501b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101dd576101dd610929565b808201808211156101dd576101dd610929565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816109a4576109a4610929565b50600019019056fea26469706673582212200dec7150305bdea4d750c57702de9459650a3c42dabfd97708566b91aa1f35b664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x54696E7920426F6F7 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 PUSH2 0x3E SWAP1 DUP3 PUSH2 0x10B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x426F6F7 PUSH1 0xE4 SHL PUSH1 0x20 DUP4 ADD MSTORE SWAP1 PUSH2 0x66 SWAP1 DUP3 PUSH2 0x10B JUMP JUMPDEST POP PUSH2 0x1CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xE3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x102 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xEF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x124 JUMPI PUSH2 0x124 PUSH2 0x6C JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x132 DUP5 SLOAD PUSH2 0x82 JUMP JUMPDEST DUP5 PUSH2 0xBC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x155 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x102 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x17D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x9E2 DUP1 PUSH3 0x1DA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEB55BC6B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8A PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x137 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x163 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x185 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x193 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x137 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1D7 DUP2 DUP6 DUP6 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6F702053656E646572206164647265737320696E76616C69640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6F70205265636569766572206164647265737320696E76616C6964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x2A4 DUP7 PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x2AF DUP6 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E6 SWAP3 SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865792120596F752063616E27742074727920746F20626F6F7020796F757273 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x656C6621203E3A63 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x4A0 CALLER PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x4AB DUP6 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP3 SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP2 POP DUP5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x52A SWAP1 DUP5 SWAP1 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP1 SWAP4 ADD SWAP1 SWAP3 SSTORE DUP6 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP3 SWAP1 DUP10 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 PUSH1 0x60 PUSH1 0x0 PUSH2 0x5A9 DUP4 PUSH1 0x2 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x5B4 SWAP1 PUSH1 0x2 PUSH2 0x956 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5CC JUMPI PUSH2 0x5CC PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x640 JUMPI PUSH2 0x640 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x664 DUP5 PUSH1 0x2 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x66F SWAP1 PUSH1 0x1 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6E7 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x97F JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH2 0x6B9 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x6E0 DUP2 PUSH2 0x995 JUMP JUMPDEST SWAP1 POP PUSH2 0x672 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x237 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x780 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x736 DUP3 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E7 DUP4 PUSH2 0x794 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP4 PUSH2 0x794 JUMP JUMPDEST SWAP2 POP PUSH2 0x81F PUSH1 0x20 DUP5 ADD PUSH2 0x794 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x83C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x85C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x874 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST PUSH2 0x5F5F PUSH1 0xF0 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x89A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x73D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x8AE DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x73D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x8C9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6D20796F7572206372617A79207061772120426F6F702056616C756520 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x6D757374206265206265747765656E203120746F2033 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1DD JUMPI PUSH2 0x1DD PUSH2 0x929 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DD PUSH2 0x929 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x9A4 JUMPI PUSH2 0x9A4 PUSH2 0x929 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEC PUSH18 0x50305BDEA4D750C57702DE9459650A3C42DA 0xBF 0xD9 PUSH24 0x8566B91AA1F35B664736F6C634300081200330000000000 ",
							"sourceMap": "584:3231:4:-:0;;;993:76;;;;;;;;;-1:-1:-1;1017:19:4;;;;;;;;;;;;-1:-1:-1;;;1017:19:4;;;;:5;;:19;;:5;:19;:::i;:::-;-1:-1:-1;1046:16:4;;;;;;;;;;;;;-1:-1:-1;;;1046:16:4;;;;;;;;;:::i;:::-;;584:3231;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:5;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:5;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:5;;;2580:26;2531:89;-1:-1:-1;;1335:1:5;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:5;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:5;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:5;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:5:o;:::-;584:3231:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1531": {
									"entryPoint": 801,
									"id": 1531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOf_1384": {
									"entryPoint": null,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balancePairOf_1372": {
									"entryPoint": 483,
									"id": 1372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_1285": {
									"entryPoint": null,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_1269": {
									"entryPoint": 296,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_1277": {
									"entryPoint": 442,
									"id": 1277,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_204": {
									"entryPoint": null,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_224": {
									"entryPoint": 1417,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1293": {
									"entryPoint": null,
									"id": 1293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transfer_1407": {
									"entryPoint": 457,
									"id": 1407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7318:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:5",
																"statements": []
															},
															"src": "109:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													}
												],
												"src": "14:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "390:275:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "434:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "488:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "466:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "556:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:79:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:79:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "640:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "649:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "656:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "359:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "370:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "381:4:5",
														"type": ""
													}
												],
												"src": "269:396:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "781:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "793:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "804:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "789:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "789:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "781:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "823:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "834:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "816:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "740:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "751:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "762:4:5",
														"type": ""
													}
												],
												"src": "670:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "971:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "982:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "967:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "959:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1001:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1016:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1024:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1012:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1012:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "994:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "994:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "918:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "929:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "940:4:5",
														"type": ""
													}
												],
												"src": "852:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1100:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1122:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1109:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1100:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1192:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1201:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1194:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1194:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1194:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1151:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1162:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1177:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1182:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1173:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1173:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1186:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1169:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1169:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1158:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1158:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1148:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1148:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1141:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:50:5"
															},
															"nodeType": "YulIf",
															"src": "1138:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1069:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1080:5:5",
														"type": ""
													}
												],
												"src": "1041:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1289:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1335:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1310:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1319:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1306:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1306:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:32:5"
															},
															"nodeType": "YulIf",
															"src": "1299:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1360:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1389:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1370:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1255:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1266:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1278:6:5",
														"type": ""
													}
												],
												"src": "1219:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1543:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1552:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1555:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1545:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1545:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1514:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1514:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1510:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:32:5"
															},
															"nodeType": "YulIf",
															"src": "1507:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1568:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1578:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1654:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1639:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1639:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1626:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1455:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1466:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1478:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1486:6:5",
														"type": ""
													}
												],
												"src": "1410:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1774:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1786:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1797:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1774:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1816:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1841:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1834:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1834:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1827:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1809:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1733:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1744:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1755:4:5",
														"type": ""
													}
												],
												"src": "1669:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1948:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1994:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2003:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2006:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1996:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1996:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1969:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1978:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:32:5"
															},
															"nodeType": "YulIf",
															"src": "1958:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2019:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2048:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2029:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2067:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2100:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2111:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2096:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2077:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1906:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1917:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1929:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1937:6:5",
														"type": ""
													}
												],
												"src": "1861:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2191:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2208:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2222:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2252:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2226:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2299:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2301:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2315:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2323:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2311:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2311:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2301:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2279:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:26:5"
															},
															"nodeType": "YulIf",
															"src": "2269:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2389:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2410:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2417:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2422:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2413:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2413:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2403:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2403:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2403:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2482:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2485:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2475:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2475:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2475:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2345:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2376:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2365:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2342:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:38:5"
															},
															"nodeType": "YulIf",
															"src": "2339:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2161:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2170:6:5",
														"type": ""
													}
												],
												"src": "2126:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2685:177:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2702:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2736:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2725:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2775:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2786:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:18:5"
																	},
																	{
																		"hexValue": "426f6f702053656e646572206164647265737320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2791:29:5",
																		"type": "",
																		"value": "Boop Sender address invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2764:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2764:57:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2830:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2842:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2853:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2830:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2662:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2676:4:5",
														"type": ""
													}
												],
												"src": "2511:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3041:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3058:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3051:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3051:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3092:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3103:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3088:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3088:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3108:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3081:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3142:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3127:18:5"
																	},
																	{
																		"hexValue": "426f6f70205265636569766572206164647265737320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3147:31:5",
																		"type": "",
																		"value": "Boop Receiver address invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3120:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3188:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3200:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3211:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3188:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3018:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3032:4:5",
														"type": ""
													}
												],
												"src": "2867:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:213:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3475:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3489:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3489:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3479:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3558:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3546:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3565:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3570:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3511:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3511:66:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3586:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3603:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3608:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3590:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "3631:5:5"
																	},
																	{
																		"hexValue": "5f5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3638:4:5",
																		"type": "",
																		"value": "__"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3624:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3652:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3659:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3652:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3441:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3446:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3457:3:5",
														"type": ""
													}
												],
												"src": "3225:453:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3870:309:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3880:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3900:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3894:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3884:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3955:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3963:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3970:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3975:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3916:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3916:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3916:66:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3991:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4008:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4013:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4004:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3995:5:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4029:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4051:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4045:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4033:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4114:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:5"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4121:5:5"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4128:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4067:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:70:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4146:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4157:5:5"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4164:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4153:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4146:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3838:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3843:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3851:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3862:3:5",
														"type": ""
													}
												],
												"src": "3683:496:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4323:150:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4333:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4353:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4347:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4337:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4408:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4416:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4423:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4369:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4369:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4369:66:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4444:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4455:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4460:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4451:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4444:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4299:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4304:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4315:3:5",
														"type": ""
													}
												],
												"src": "4184:289:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4652:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4669:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4662:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4662:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4703:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4714:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4699:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4699:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4719:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4692:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4692:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4742:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4753:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4738:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4758:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4731:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4731:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4731:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4813:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4824:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4829:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4802:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4802:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4846:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4858:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4869:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4854:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4846:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4629:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4643:4:5",
														"type": ""
													}
												],
												"src": "4478:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5058:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5098:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5148:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5159:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5164:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5137:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5219:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5230:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5215:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5215:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5235:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5208:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5208:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5208:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5250:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5262:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5273:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5258:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5250:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5035:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5049:4:5",
														"type": ""
													}
												],
												"src": "4884:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:230:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5479:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5490:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5472:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5472:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5529:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5502:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5552:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5563:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5548:18:5"
																	},
																	{
																		"hexValue": "4865792120596f752063616e27742074727920746f20626f6f7020796f757273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5568:34:5",
																		"type": "",
																		"value": "Hey! You can't try to boop yours"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5623:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5634:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5619:18:5"
																	},
																	{
																		"hexValue": "656c6621203e3a63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5639:10:5",
																		"type": "",
																		"value": "elf! >:c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5612:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5612:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5612:38:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5659:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5671:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5659:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5439:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5453:4:5",
														"type": ""
													}
												],
												"src": "5288:404:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5871:244:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5888:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5899:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5881:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5922:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:5",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5972:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:18:5"
																	},
																	{
																		"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c756520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5977:34:5",
																		"type": "",
																		"value": "Calm your crazy paw! Boop Value "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5950:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:18:5"
																	},
																	{
																		"hexValue": "6d757374206265206265747765656e203120746f2033",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6048:24:5",
																		"type": "",
																		"value": "must be between 1 to 3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6082:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5848:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5862:4:5",
														"type": ""
													}
												],
												"src": "5697:418:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6152:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6176:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6172:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6202:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6202:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6202:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6236:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6226:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6226:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6120:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6304:116:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6314:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6329:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6332:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6325:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6314:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6392:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6394:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6394:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6394:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6363:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6356:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6356:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6370:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6377:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6386:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6373:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6373:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6367:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6367:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6353:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6353:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6346:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6346:45:5"
															},
															"nodeType": "YulIf",
															"src": "6343:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6283:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6286:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6292:7:5",
														"type": ""
													}
												],
												"src": "6252:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6473:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6483:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6494:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6497:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6490:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6522:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6524:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6524:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6524:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6514:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6517:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6511:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:10:5"
															},
															"nodeType": "YulIf",
															"src": "6508:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6456:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6459:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6465:3:5",
														"type": ""
													}
												],
												"src": "6425:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6587:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6611:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6616:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6607:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6607:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6647:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6637:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6637:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6637:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6668:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6661:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6661:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6555:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6719:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6736:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6743:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6748:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6739:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6739:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6729:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6776:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6779:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6769:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6769:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6803:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6793:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6793:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6687:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6866:89:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6893:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6895:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6895:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6895:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6886:5:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:13:5"
															},
															"nodeType": "YulIf",
															"src": "6876:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6924:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6935:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6946:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6942:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6942:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:18:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6848:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6858:3:5",
														"type": ""
													}
												],
												"src": "6819:136:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7134:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7151:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7162:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7144:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7185:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7196:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7181:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7181:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7201:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7174:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7174:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7224:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7235:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7220:18:5"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7240:34:5",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7213:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7213:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7284:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7296:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7307:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7292:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7284:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7111:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7125:4:5",
														"type": ""
													}
												],
												"src": "6960:356:5"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Boop Sender address invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Boop Receiver address invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"__\")\n        end := add(end_1, 2)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Hey! You can't try to boop yours\")\n        mstore(add(headStart, 96), \"elf! >:c\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Calm your crazy paw! Boop Value \")\n        mstore(add(headStart, 96), \"must be between 1 to 3\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806370a082311161005b57806370a08231146100c157806395d89b41146100ea578063a9059cbb146100f2578063eb55bc6b1461011557600080fd5b806306fdde031461008257806318160ddd146100a0578063313ce567146100b2575b600080fd5b61008a610128565b6040516100979190610761565b60405180910390f35b6002545b604051908152602001610097565b60405160018152602001610097565b6100a46100cf3660046107b0565b6001600160a01b031660009081526020819052604090205490565b61008a6101ba565b6101056101003660046107cb565b6101c9565b6040519015158152602001610097565b6100a46101233660046107f5565b6101e3565b60606003805461013790610828565b80601f016020809104026020016040519081016040528092919081815260200182805461016390610828565b80156101b05780601f10610185576101008083540402835291602001916101b0565b820191906000526020600020905b81548152906001019060200180831161019357829003601f168201915b5050505050905090565b60606004805461013790610828565b6000336101d7818585610321565b60019150505b92915050565b60006001600160a01b0383166102405760405162461bcd60e51b815260206004820152601b60248201527f426f6f702053656e646572206164647265737320696e76616c6964000000000060448201526064015b60405180910390fd5b6001600160a01b0382166102965760405162461bcd60e51b815260206004820152601d60248201527f426f6f70205265636569766572206164647265737320696e76616c69640000006044820152606401610237565b60608060606102a486610589565b92506102af85610589565b9150826040516020016102c29190610862565b604051602081830303815290604052905080826040516020016102e6929190610888565b604051602081830303815290604052905060018160405161030791906108b7565b908152602001604051809103902054935050505092915050565b6001600160a01b0383166103855760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610237565b6001600160a01b0382166103e75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610237565b336001600160a01b038316036104505760405162461bcd60e51b815260206004820152602860248201527f4865792120596f752063616e27742074727920746f20626f6f7020796f757273604482015267656c6621203e3a6360c01b6064820152608401610237565b60018110156104715760405162461bcd60e51b8152600401610237906108d3565b60038111156104925760405162461bcd60e51b8152600401610237906108d3565b60608060606104a033610589565b92506104ab85610589565b9150826040516020016104be9190610862565b604051602081830303815290604052905080826040516020016104e2929190610888565b60408051601f1981840301815282825260028054880190556001600160a01b03881660009081526020819052919091208054870190559150849060019061052a9084906108b7565b908152604051602091819003820181208054939093019092558582526001600160a01b0387811692908916917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050505050565b60606101dd6001600160a01b0383166014606060006105a983600261093f565b6105b4906002610956565b67ffffffffffffffff8111156105cc576105cc610969565b6040519080825280601f01601f1916602001820160405280156105f6576020820181803683370190505b509050600360fc1b816000815181106106115761061161097f565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106405761064061097f565b60200101906001600160f81b031916908160001a905350600061066484600261093f565b61066f906001610956565b90505b60018111156106e7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106106a3576106a361097f565b1a60f81b8282815181106106b9576106b961097f565b60200101906001600160f81b031916908160001a90535060049490941c936106e081610995565b9050610672565b5083156107365760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610237565b9392505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b602081526000825180602084015261078081604085016020870161073d565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146107ab57600080fd5b919050565b6000602082840312156107c257600080fd5b61073682610794565b600080604083850312156107de57600080fd5b6107e783610794565b946020939093013593505050565b6000806040838503121561080857600080fd5b61081183610794565b915061081f60208401610794565b90509250929050565b600181811c9082168061083c57607f821691505b60208210810361085c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161087481846020870161073d565b615f5f60f01b920191825250600201919050565b6000835161089a81846020880161073d565b8351908301906108ae81836020880161073d565b01949350505050565b600082516108c981846020870161073d565b9190910192915050565b60208082526036908201527f43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206040820152756d757374206265206265747765656e203120746f203360501b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101dd576101dd610929565b808201808211156101dd576101dd610929565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816109a4576109a4610929565b50600019019056fea26469706673582212200dec7150305bdea4d750c57702de9459650a3c42dabfd97708566b91aa1f35b664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEB55BC6B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8A PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x137 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x163 SWAP1 PUSH2 0x828 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x185 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x193 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x137 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1D7 DUP2 DUP6 DUP6 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6F702053656E646572206164647265737320696E76616C69640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F6F70205265636569766572206164647265737320696E76616C6964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x2A4 DUP7 PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x2AF DUP6 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E6 SWAP3 SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865792120596F752063616E27742074727920746F20626F6F7020796F757273 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x656C6621203E3A63 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x4A0 CALLER PUSH2 0x589 JUMP JUMPDEST SWAP3 POP PUSH2 0x4AB DUP6 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP3 SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP2 POP DUP5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x52A SWAP1 DUP5 SWAP1 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 DUP2 SWAP1 SUB DUP3 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP1 SWAP4 ADD SWAP1 SWAP3 SSTORE DUP6 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP3 SWAP1 DUP10 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 PUSH1 0x60 PUSH1 0x0 PUSH2 0x5A9 DUP4 PUSH1 0x2 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x5B4 SWAP1 PUSH1 0x2 PUSH2 0x956 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5CC JUMPI PUSH2 0x5CC PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x640 JUMPI PUSH2 0x640 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x664 DUP5 PUSH1 0x2 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x66F SWAP1 PUSH1 0x1 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6E7 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x97F JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B9 JUMPI PUSH2 0x6B9 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x6E0 DUP2 PUSH2 0x995 JUMP JUMPDEST SWAP1 POP PUSH2 0x672 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x237 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x780 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x736 DUP3 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E7 DUP4 PUSH2 0x794 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP4 PUSH2 0x794 JUMP JUMPDEST SWAP2 POP PUSH2 0x81F PUSH1 0x20 DUP5 ADD PUSH2 0x794 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x83C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x85C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x874 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST PUSH2 0x5F5F PUSH1 0xF0 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x89A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x73D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x8AE DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x73D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x8C9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6D20796F7572206372617A79207061772120426F6F702056616C756520 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x6D757374206265206265747765656E203120746F2033 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1DD JUMPI PUSH2 0x1DD PUSH2 0x929 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DD PUSH2 0x929 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x9A4 JUMPI PUSH2 0x9A4 PUSH2 0x929 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEC PUSH18 0x50305BDEA4D750C57702DE9459650A3C42DA 0xBF 0xD9 PUSH24 0x8566B91AA1F35B664736F6C634300081200330000000000 ",
							"sourceMap": "584:3231:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1376:97;1454:12;;1376:97;;;816:25:5;;;804:2;789:18;1376:97:4;670:177:5;1289:81:4;;;1362:1;994:36:5;;982:2;967:18;1289:81:4;852:184:5;2249:116:4;;;;;;:::i;:::-;-1:-1:-1;;;;;2340:18:4;2314:7;2340:18;;;;;;;;;;;;2249:116;1190:93;;;:::i;2402:180::-;;;;;;:::i;:::-;;:::i;:::-;;;1834:14:5;;1827:22;1809:41;;1797:2;1782:18;2402:180:4;1669:187:5;1496:727:4;;;;;;:::i;:::-;;:::i;1094:89::-;1139:13;1171:5;1164:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:89;:::o;1190:93::-;1237:13;1269:7;1262:14;;;;;:::i;2402:180::-;2472:4;719:10:0;2526:28:4;719:10:0;2543:2:4;2547:6;2526:9;:28::i;:::-;2571:4;2564:11;;;2402:180;;;;;:::o;1496:727::-;1576:7;-1:-1:-1;;;;;1631:20:4;;1623:60;;;;-1:-1:-1;;;1623:60:4;;2713:2:5;1623:60:4;;;2695:21:5;2752:2;2732:18;;;2725:30;2791:29;2771:18;;;2764:57;2838:18;;1623:60:4;;;;;;;;;-1:-1:-1;;;;;1701:22:4;;1693:64;;;;-1:-1:-1;;;1693:64:4;;3069:2:5;1693:64:4;;;3051:21:5;3108:2;3088:18;;;3081:30;3147:31;3127:18;;;3120:59;3196:18;;1693:64:4;2867:353:5;1693:64:4;1791:28;1829:24;1863:25;1945:27;1965:6;1945:19;:27::i;:::-;1928:44;;1995:29;2015:8;1995:19;:29::i;:::-;1982:42;;2073:14;2056:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;2035:59;;2142:11;2154:10;2125:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2104:62;;2184:14;2199:11;2184:27;;;;;;:::i;:::-;;;;;;;;;;;;;;2177:34;;;;;1496:727;;;;:::o;2588:1224::-;-1:-1:-1;;;;;2736:18:4;;2728:68;;;;-1:-1:-1;;;2728:68:4;;4680:2:5;2728:68:4;;;4662:21:5;4719:2;4699:18;;;4692:30;4758:34;4738:18;;;4731:62;-1:-1:-1;;;4809:18:5;;;4802:35;4854:19;;2728:68:4;4478:401:5;2728:68:4;-1:-1:-1;;;;;2814:16:4;;2806:64;;;;-1:-1:-1;;;2806:64:4;;5086:2:5;2806:64:4;;;5068:21:5;5125:2;5105:18;;;5098:30;5164:34;5144:18;;;5137:62;-1:-1:-1;;;5215:18:5;;;5208:33;5258:19;;2806:64:4;4884:399:5;2806:64:4;2941:10;-1:-1:-1;;;;;2927:25:4;;;2919:78;;;;-1:-1:-1;;;2919:78:4;;5490:2:5;2919:78:4;;;5472:21:5;5529:2;5509:18;;;5502:30;5568:34;5548:18;;;5541:62;-1:-1:-1;;;5619:18:5;;;5612:38;5667:19;;2919:78:4;5288:404:5;2919:78:4;3025:1;3015:6;:11;;3007:78;;;;-1:-1:-1;;;3007:78:4;;;;;;;:::i;:::-;3113:1;3103:6;:11;;3095:78;;;;-1:-1:-1;;;3095:78:4;;;;;;;:::i;:::-;3207:28;3245:24;3279:25;3354:31;3374:10;3354:19;:31::i;:::-;3337:48;;3408:23;3428:2;3408:19;:23::i;:::-;3395:36;;3479:14;3462:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;3441:59;;3548:11;3560:10;3531:40;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3531:40:4;;;;;;;;;3626:12;:22;;;;;;-1:-1:-1;;;;;3662:13:4;;3626:12;3662:13;;;3531:40;3662:13;;;;;;;:23;;;;;;3531:40;-1:-1:-1;3642:6:4;;-1:-1:-1;;3699:27:4;;3531:40;;3699:27;:::i;:::-;;;;;;;;;;;;;;;:37;;;;;;;;;816:25:5;;;-1:-1:-1;;;;;3778:26:4;;;;;;;;;;789:18:5;3778:26:4;;;;;;;2696:1116;;;2588:1224;;;:::o;2407:149:1:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:1;;343:2;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:1;;1918:47;;-1:-1:-1;;;1975:6:1;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:1;;;;;;;;;-1:-1:-1;;;2000:6:1;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:1;;;;;;;;-1:-1:-1;2030:9:1;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:1;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:1;;;;;;;;-1:-1:-1;2141:1:1;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:1;;2162:55;;;;-1:-1:-1;;;2162:55:1;;7162:2:5;2162:55:1;;;7144:21:5;;;7181:18;;;7174:30;7240:34;7220:18;;;7213:62;7292:18;;2162:55:1;6960:356:5;2162:55:1;2241:6;1818:437;-1:-1:-1;;;1818:437:1:o;14:250:5:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:5;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:5;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:5:o;1041:173::-;1109:20;;-1:-1:-1;;;;;1158:31:5;;1148:42;;1138:70;;1204:1;1201;1194:12;1138:70;1041:173;;;:::o;1219:186::-;1278:6;1331:2;1319:9;1310:7;1306:23;1302:32;1299:52;;;1347:1;1344;1337:12;1299:52;1370:29;1389:9;1370:29;:::i;1410:254::-;1478:6;1486;1539:2;1527:9;1518:7;1514:23;1510:32;1507:52;;;1555:1;1552;1545:12;1507:52;1578:29;1597:9;1578:29;:::i;:::-;1568:39;1654:2;1639:18;;;;1626:32;;-1:-1:-1;;;1410:254:5:o;1861:260::-;1929:6;1937;1990:2;1978:9;1969:7;1965:23;1961:32;1958:52;;;2006:1;2003;1996:12;1958:52;2029:29;2048:9;2029:29;:::i;:::-;2019:39;;2077:38;2111:2;2100:9;2096:18;2077:38;:::i;:::-;2067:48;;1861:260;;;;;:::o;2126:380::-;2205:1;2201:12;;;;2248;;;2269:61;;2323:4;2315:6;2311:17;2301:27;;2269:61;2376:2;2368:6;2365:14;2345:18;2342:38;2339:161;;2422:10;2417:3;2413:20;2410:1;2403:31;2457:4;2454:1;2447:15;2485:4;2482:1;2475:15;2339:161;;2126:380;;;:::o;3225:453::-;3457:3;3495:6;3489:13;3511:66;3570:6;3565:3;3558:4;3550:6;3546:17;3511:66;:::i;:::-;-1:-1:-1;;;3599:16:5;;3624:19;;;-1:-1:-1;3670:1:5;3659:13;;3225:453;-1:-1:-1;3225:453:5:o;3683:496::-;3862:3;3900:6;3894:13;3916:66;3975:6;3970:3;3963:4;3955:6;3951:17;3916:66;:::i;:::-;4045:13;;4004:16;;;;4067:70;4045:13;4004:16;4114:4;4102:17;;4067:70;:::i;:::-;4153:20;;3683:496;-1:-1:-1;;;;3683:496:5:o;4184:289::-;4315:3;4353:6;4347:13;4369:66;4428:6;4423:3;4416:4;4408:6;4404:17;4369:66;:::i;:::-;4451:16;;;;;4184:289;-1:-1:-1;;4184:289:5:o;5697:418::-;5899:2;5881:21;;;5938:2;5918:18;;;5911:30;5977:34;5972:2;5957:18;;5950:62;-1:-1:-1;;;6043:2:5;6028:18;;6021:52;6105:3;6090:19;;5697:418::o;6120:127::-;6181:10;6176:3;6172:20;6169:1;6162:31;6212:4;6209:1;6202:15;6236:4;6233:1;6226:15;6252:168;6325:9;;;6356;;6373:15;;;6367:22;;6353:37;6343:71;;6394:18;;:::i;6425:125::-;6490:9;;;6511:10;;;6508:36;;;6524:18;;:::i;6555:127::-;6616:10;6611:3;6607:20;6604:1;6597:31;6647:4;6644:1;6637:15;6671:4;6668:1;6661:15;6687:127;6748:10;6743:3;6739:20;6736:1;6729:31;6779:4;6776:1;6769:15;6803:4;6800:1;6793:15;6819:136;6858:3;6886:5;6876:39;;6895:18;;:::i;:::-;-1:-1:-1;;;6931:18:5;;6819:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "506000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2540",
								"balancePairOf(address,address)": "infinite",
								"decimals()": "222",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2304",
								"transfer(address,uint256)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "54696E7920426F6F7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1017,
									"end": 1036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "426F6F7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1046,
									"end": 1062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200dec7150305bdea4d750c57702de9459650a3c42dabfd97708566b91aa1f35b664736f6c63430008120033",
									".code": [
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "EB55BC6B"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1094,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1094,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 816,
											"end": 841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 816,
											"end": 841,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 816,
											"end": 841,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 670,
											"end": 847,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 994,
											"end": 1030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 852,
											"end": 1036,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2249,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1190,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 1849,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1782,
											"end": 1800,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1669,
											"end": 1856,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1164,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1164,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1262,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2553,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2526,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2752,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "426F6F702053656E646572206164647265737320696E76616C69640000000000"
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3071,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3072,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3108,
											"end": 3110,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "426F6F70205265636569766572206164647265737320696E76616C6964000000"
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2867,
											"end": 3220,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1819,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1965,
											"end": 1971,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1945,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2015,
											"end": 2023,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1995,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2024,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1995,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 2024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 2024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2056,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2153,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2125,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2198,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2184,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 4683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4719,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4692,
											"end": 4722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4792,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4731,
											"end": 4793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4837,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4854,
											"end": 4873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4478,
											"end": 4879,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5137,
											"end": 5199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5258,
											"end": 5277,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5258,
											"end": 5277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4884,
											"end": 5283,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5492,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5502,
											"end": 5532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 5602,
											"name": "PUSH",
											"source": 5,
											"value": "4865792120596F752063616E27742074727920746F20626F6F7020796F757273"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656C6621203E3A63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5637,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5619,
											"end": 5637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5619,
											"end": 5637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5288,
											"end": 5692,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3026,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3026,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3007,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3095,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3207,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3245,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3374,
											"end": 3384,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3354,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3385,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3408,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3462,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3531,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3648,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3699,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 816,
											"end": 841,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 816,
											"end": 841,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 816,
											"end": 841,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 789,
											"end": 807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7164,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7174,
											"end": 7204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7274,
											"name": "PUSH",
											"source": 5,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 7220,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7220,
											"end": 7238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7220,
											"end": 7238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6960,
											"end": 7316,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1214,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1041,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1190,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1138,
											"end": 1208,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1202,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1208,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1138,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1405,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1219,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1317,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1334,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1370,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1664,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1410,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1542,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1578,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1607,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1658,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1658,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1410,
											"end": 1664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 1988,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1993,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2008,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1958,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2048,
											"end": 2057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2029,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2058,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2029,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2111,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2077,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 2121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2506,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2126,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2269,
											"end": 2330,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2315,
											"end": 2321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2328,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2269,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2379,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2380,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2339,
											"end": 2500,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2432,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2417,
											"end": 2420,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2413,
											"end": 2433,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2447,
											"end": 2462,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2482,
											"end": 2483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2500,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2339,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3678,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3225,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3489,
											"end": 3502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3568,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 3562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3511,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3577,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3511,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5F5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3615,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3659,
											"end": 3672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3683,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3907,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3970,
											"end": 3973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3963,
											"end": 3967,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3916,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3982,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3916,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4058,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4058,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4045,
											"end": 4058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4067,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4137,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4067,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4173,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 4179,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3683,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4473,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4184,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4369,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4435,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4369,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4467,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6115,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5697,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 5901,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5881,
											"end": 5902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5881,
											"end": 5902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5911,
											"end": 5941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "PUSH",
											"source": 5,
											"value": "43616C6D20796F7572206372617A79207061772120426F6F702056616C756520"
										},
										{
											"begin": 5972,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5950,
											"end": 6012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D757374206265206265747765656E203120746F2033"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6108,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6090,
											"end": 6109,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6090,
											"end": 6109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6247,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6120,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6191,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6176,
											"end": 6179,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6172,
											"end": 6192,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6212,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6202,
											"end": 6217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6236,
											"end": 6240,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6241,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6420,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6252,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6389,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6390,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6343,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6343,
											"end": 6414,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6394,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6425,
											"end": 6550,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6425,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6521,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6508,
											"end": 6544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6524,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6524,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6524,
											"end": 6542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6555,
											"end": 6682,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 6555,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6626,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6611,
											"end": 6614,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6607,
											"end": 6627,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6651,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6644,
											"end": 6645,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6637,
											"end": 6652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6668,
											"end": 6669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6814,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6687,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6758,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6739,
											"end": 6759,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6736,
											"end": 6737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6783,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6776,
											"end": 6777,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6769,
											"end": 6784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6807,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6955,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6819,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6876,
											"end": 6915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6895,
											"end": 6913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balancePairOf(address,address)": "eb55bc6b",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"balancePairOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tiny_boop.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"tiny_boop.sol\":{\"keccak256\":\"0x6efe2b1001ac64d17a946aaf0c55fce3cc9e384243d6acc9ecd24fc66bcb2935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b774eed39c89bc6b5f3b08c2c9d658ead41d27242d4e04744f261d79d57f0f\",\"dweb:/ipfs/QmbjnEqmZHZur9xjia1mocyDcx9Dssb3B4ekxHXud2BGTd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1231,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1235,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_balances_pair",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 1237,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1239,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1241,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1116
						],
						"SignedMath": [
							1221
						],
						"Strings": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 1117,
							"src": "126:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 1222,
							"src": "152:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:1",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Strings",
							"nameLocation": "228:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 29,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "242:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 27,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 32,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "302:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "518:625:1",
										"statements": [
											{
												"id": 78,
												"nodeType": "UncheckedBlock",
												"src": "528:609:1",
												"statements": [
													{
														"assignments": [
															41
														],
														"declarations": [
															{
																"constant": false,
																"id": 41,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "552:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 40,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 48,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 44,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "580:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 42,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "569:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1116_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:1",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 953,
																	"src": "569:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:1"
													},
													{
														"assignments": [
															50
														],
														"declarations": [
															{
																"constant": false,
																"id": 50,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "604:20:1",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 49,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 55,
														"initialValue": {
															"arguments": [
																{
																	"id": 53,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "638:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 51,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:1"
													},
													{
														"assignments": [
															57
														],
														"declarations": [
															{
																"constant": false,
																"id": 57,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "659:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 56,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 58,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:1",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:1"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:1"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 50,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:1",
																"valueSize": 1
															},
															{
																"declaration": 41,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:1",
																"valueSize": 1
															}
														],
														"id": 59,
														"nodeType": "InlineAssembly",
														"src": "731:76:1"
													},
													{
														"body": {
															"id": 74,
															"nodeType": "Block",
															"src": "833:267:1",
															"statements": [
																{
																	"expression": {
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:1",
																		"subExpression": {
																			"id": 61,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "851:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 63,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:1"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:1",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:1"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:1"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:1"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 29,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 57,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 35,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:1",
																			"valueSize": 1
																		}
																	],
																	"id": 64,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:1"
																},
																{
																	"expression": {
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 65,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "1035:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 68,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 69,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "1068:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 73,
																	"nodeType": "IfStatement",
																	"src": "1064:21:1",
																	"trueBody": {
																		"id": 72,
																		"nodeType": "Break",
																		"src": "1080:5:1"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 75,
														"nodeType": "WhileStatement",
														"src": "820:280:1"
													},
													{
														"expression": {
															"id": 76,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1120:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 39,
														"id": 77,
														"nodeType": "Return",
														"src": "1113:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "503:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:1"
									},
									"scope": 250,
									"src": "447:696:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1313:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 92,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "1354:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 96,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:1",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 83,
																					"src": "1400:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 99,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "1385:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1221_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:1",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1220,
																				"src": "1385:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 98,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			80,
																			108
																		],
																		"referencedDeclaration": 80,
																		"src": "1376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 90,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:1",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 88,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 87,
												"id": 106,
												"nodeType": "Return",
												"src": "1323:86:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:1",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1261:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1298:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:1"
									},
									"scope": 250,
									"src": "1243:173:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1595:100:1",
										"statements": [
											{
												"id": 126,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 117,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1648:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 120,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 111,
																				"src": "1667:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 118,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "1655:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1116_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:1",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1076,
																			"src": "1655:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 116,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	128,
																	204,
																	224
																],
																"referencedDeclaration": 204,
																"src": "1636:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 115,
														"id": 125,
														"nodeType": "Return",
														"src": "1629:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1542:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1580:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:1"
									},
									"scope": 250,
									"src": "1521:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1908:347:1",
										"statements": [
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "1918:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 138,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 143,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1954:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 140,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 149,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1975:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 151,
														"indexExpression": {
															"hexValue": "30",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:1"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 155,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 157,
														"indexExpression": {
															"hexValue": "31",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:1"
											},
											{
												"body": {
													"id": 189,
													"nodeType": "Block",
													"src": "2070:83:1",
													"statements": [
														{
															"expression": {
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 175,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "2084:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 177,
																	"indexExpression": {
																		"id": 176,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2091:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 178,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "2096:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 182,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 179,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "2105:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 184,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:1"
														},
														{
															"expression": {
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "2131:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 169,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "2058:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"initializationExpression": {
													"assignments": [
														162
													],
													"declarations": [
														{
															"constant": false,
															"id": 162,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 190,
															"src": "2030:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 161,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 168,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 164,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2046:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:1"
												},
												"loopExpression": {
													"expression": {
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:1",
														"subExpression": {
															"id": 172,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2067:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2170:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 198,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 137,
												"id": 202,
												"nodeType": "Return",
												"src": "2227:21:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1839:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1893:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:1"
									},
									"scope": 250,
									"src": "1818:437:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2480:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 217,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "2525:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 215,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 213,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 220,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2533:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 212,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															128,
															204,
															224
														],
														"referencedDeclaration": 204,
														"src": "2497:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 211,
												"id": 222,
												"nodeType": "Return",
												"src": "2490:59:1"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:1",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 209,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"scope": 250,
									"src": "2407:149:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2711:66:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 237,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "2744:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 235,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 234,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 243,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2767:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 241,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 240,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 233,
												"id": 247,
												"nodeType": "Return",
												"src": "2721:49:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:1",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2648:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2665:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2705:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:1"
									},
									"scope": 250,
									"src": "2633:144:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "220:2559:1",
							"usedErrors": []
						}
					],
					"src": "101:2679:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1116
						]
					},
					"id": 1117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1116,
							"linearizedBaseContracts": [
								1116
							],
							"name": "Math",
							"nameLocation": "210:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 257,
									"members": [
										{
											"id": 254,
											"name": "Down",
											"nameLocation": "245:4:2",
											"nodeType": "EnumValue",
											"src": "245:4:2"
										},
										{
											"id": 255,
											"name": "Up",
											"nameLocation": "287:2:2",
											"nodeType": "EnumValue",
											"src": "287:2:2"
										},
										{
											"id": 256,
											"name": "Zero",
											"nameLocation": "318:4:2",
											"nodeType": "EnumValue",
											"src": "318:4:2"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:2",
									"nodeType": "EnumDefinition",
									"src": "221:122:2"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "480:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 267,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 268,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "501:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "509:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:2",
													"trueExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "505:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 273,
												"nodeType": "Return",
												"src": "490:20:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "426:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "437:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:2"
									},
									"scope": 1116,
									"src": "413:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "655:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 285,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "672:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 286,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "676:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 289,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "684:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:2",
													"trueExpression": {
														"id": 288,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "680:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 291,
												"nodeType": "Return",
												"src": "665:20:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "601:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "612:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "646:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:2"
									},
									"scope": 1116,
									"src": "588:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "876:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 303,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "931:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 304,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "935:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 306,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 307,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "941:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 308,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "945:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 310,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 314,
												"nodeType": "Return",
												"src": "923:28:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "822:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 1116,
									"src": "805:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1228:123:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 326,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1316:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 330,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1330:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 334,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "1339:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 339,
												"nodeType": "Return",
												"src": "1309:35:2"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1174:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1185:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:2"
									},
									"scope": 1116,
									"src": "1157:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1765:4115:2",
										"statements": [
											{
												"id": 462,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:2",
												"statements": [
													{
														"assignments": [
															354
														],
														"declarations": [
															{
																"constant": false,
																"id": 354,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "2096:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 353,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 355,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:2"
													},
													{
														"assignments": [
															357
														],
														"declarations": [
															{
																"constant": false,
																"id": 357,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "2168:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 358,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:2"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:2"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:2",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:2",
																"valueSize": 1
															},
															{
																"declaration": 344,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:2",
																"valueSize": 1
															},
															{
																"declaration": 344,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:2",
																"valueSize": 1
															},
															{
																"declaration": 346,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:2",
																"valueSize": 1
															},
															{
																"declaration": 346,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:2",
																"valueSize": 1
															}
														],
														"id": 359,
														"nodeType": "InlineAssembly",
														"src": "2239:166:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "2486:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 368,
														"nodeType": "IfStatement",
														"src": "2482:368:2",
														"trueBody": {
															"id": 367,
															"nodeType": "Block",
															"src": "2498:352:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 363,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "2816:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 364,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "2824:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 352,
																	"id": 366,
																	"nodeType": "Return",
																	"src": "2809:26:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 370,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2960:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 371,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "2974:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 369,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 375,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:2"
													},
													{
														"assignments": [
															377
														],
														"declarations": [
															{
																"constant": false,
																"id": 377,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "3261:17:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 376,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 378,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:2"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:2"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:2"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:2"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 348,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:2",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:2",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:2",
																"valueSize": 1
															},
															{
																"declaration": 377,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:2",
																"valueSize": 1
															},
															{
																"declaration": 377,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:2",
																"valueSize": 1
															},
															{
																"declaration": 377,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:2",
																"valueSize": 1
															},
															{
																"declaration": 344,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:2",
																"valueSize": 1
															},
															{
																"declaration": 346,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:2",
																"valueSize": 1
															}
														],
														"id": 379,
														"nodeType": "InlineAssembly",
														"src": "3292:300:2"
													},
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "3899:12:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 389,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "3914:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:2",
																			"subExpression": {
																				"id": 383,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "3930:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:2"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:2",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:2"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:2"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:2"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 348,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:2",
																"valueSize": 1
															},
															{
																"declaration": 348,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:2",
																"valueSize": 1
															}
														],
														"id": 390,
														"nodeType": "InlineAssembly",
														"src": "3960:371:2"
													},
													{
														"expression": {
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "4397:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 392,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "4406:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 393,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "4414:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 396,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:2"
													},
													{
														"assignments": [
															398
														],
														"declarations": [
															{
																"constant": false,
																"id": 398,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "4736:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 397,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 400,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "4759:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 402,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:2"
													},
													{
														"expression": {
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 406,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4992:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5007:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 409,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5021:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:2"
													},
													{
														"expression": {
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 414,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5061:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5076:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 417,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5090:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 421,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:2"
													},
													{
														"expression": {
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 422,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5131:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 424,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5146:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 425,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5160:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 429,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:2"
													},
													{
														"expression": {
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 430,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5201:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 432,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5216:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 433,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5230:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 437,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:2"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 438,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5286:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 441,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5300:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:2"
													},
													{
														"expression": {
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5342:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 448,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5357:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 449,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5371:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 453,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:2"
													},
													{
														"expression": {
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 454,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "5812:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 455,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "5821:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 456,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "5829:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 459,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:2"
													},
													{
														"expression": {
															"id": 460,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5857:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 352,
														"id": 461,
														"nodeType": "Return",
														"src": "5850:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:2",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1683:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1694:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1705:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1749:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:2"
									},
									"scope": 1116,
									"src": "1667:4213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "6122:189:2",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "6132:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 482,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "6156:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 483,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "6159:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 484,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "6162:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															464,
															508
														],
														"referencedDeclaration": 464,
														"src": "6149:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$257",
															"typeString": "enum Math.Rounding"
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 487,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6188:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$257",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 488,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "6200:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:2",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 255,
															"src": "6200:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$257",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 492,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "6222:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 493,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "6225:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 494,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "6228:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 491,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "6184:98:2",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "6246:36:2",
													"statements": [
														{
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 499,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6260:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 505,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "6298:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 478,
												"id": 506,
												"nodeType": "Return",
												"src": "6291:13:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:2",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6028:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6039:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6050:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6071:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 472,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "6071:8:2"
													},
													"referencedDeclaration": 257,
													"src": "6071:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6113:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:2"
									},
									"scope": 1116,
									"src": "6012:299:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "6587:1585:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "6601:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "6597:45:2",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "6609:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 515,
															"id": 520,
															"nodeType": "Return",
															"src": "6623:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "7321:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 527,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 511,
																			"src": "7349:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 526,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			788,
																			824
																		],
																		"referencedDeclaration": 788,
																		"src": "7344:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 531,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:2"
											},
											{
												"id": 618,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:2",
												"statements": [
													{
														"expression": {
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 534,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7782:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 535,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7792:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 536,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7801:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 537,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7805:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 544,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:2"
													},
													{
														"expression": {
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 545,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7831:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 546,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7841:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 547,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7850:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 548,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7854:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 555,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:2"
													},
													{
														"expression": {
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7880:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 557,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7890:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 558,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7899:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 559,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7903:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 562,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 566,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:2"
													},
													{
														"expression": {
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 567,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7929:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 568,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7939:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 569,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7948:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 570,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7952:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 573,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 577,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:2"
													},
													{
														"expression": {
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7978:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 579,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7988:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 580,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7997:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 581,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "8001:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 588,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:2"
													},
													{
														"expression": {
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 589,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "8027:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 590,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "8037:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 591,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "8046:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 592,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "8050:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:2"
													},
													{
														"expression": {
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "8076:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 601,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "8086:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 602,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "8095:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 603,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "8099:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 606,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 610,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 612,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "8136:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 613,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "8144:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 614,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "8148:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 611,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "8132:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 515,
														"id": 617,
														"nodeType": "Return",
														"src": "8125:30:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:2",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6544:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6578:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:2"
									},
									"scope": 1116,
									"src": "6530:1642:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8348:161:2",
										"statements": [
											{
												"id": 654,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:2",
												"statements": [
													{
														"assignments": [
															632
														],
														"declarations": [
															{
																"constant": false,
																"id": 632,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 654,
																"src": "8382:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 636,
														"initialValue": {
															"arguments": [
																{
																	"id": 634,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8404:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 633,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	620,
																	656
																],
																"referencedDeclaration": 620,
																"src": "8399:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "8427:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 638,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "8437:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 639,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "8449:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "8449:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 642,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 632,
																						"src": "8464:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 643,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 632,
																						"src": "8473:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 645,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 623,
																					"src": "8482:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 651,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 630,
														"id": 653,
														"nodeType": "Return",
														"src": "8420:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:2",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8286:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8297:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 624,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "8297:8:2"
													},
													"referencedDeclaration": 257,
													"src": "8297:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8339:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:2"
									},
									"scope": 1116,
									"src": "8272:237:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8694:922:2",
										"statements": [
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "8704:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 664,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"hexValue": "30",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:2"
											},
											{
												"id": 784,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "8760:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 682,
														"nodeType": "IfStatement",
														"src": "8756:99:2",
														"trueBody": {
															"id": 681,
															"nodeType": "Block",
															"src": "8778:77:2",
															"statements": [
																{
																	"expression": {
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 673,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "8796:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:2"
																},
																{
																	"expression": {
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 677,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "8827:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 680,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 683,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "8872:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 697,
														"nodeType": "IfStatement",
														"src": "8868:96:2",
														"trueBody": {
															"id": 696,
															"nodeType": "Block",
															"src": "8889:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "8907:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:2"
																},
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "8937:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "8981:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 712,
														"nodeType": "IfStatement",
														"src": "8977:96:2",
														"trueBody": {
															"id": 711,
															"nodeType": "Block",
															"src": "8998:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9016:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 706,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:2"
																},
																{
																	"expression": {
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9046:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 710,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9090:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 727,
														"nodeType": "IfStatement",
														"src": "9086:96:2",
														"trueBody": {
															"id": 726,
															"nodeType": "Block",
															"src": "9107:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9125:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 721,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:2"
																},
																{
																	"expression": {
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9155:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 725,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9199:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 742,
														"nodeType": "IfStatement",
														"src": "9195:93:2",
														"trueBody": {
															"id": 741,
															"nodeType": "Block",
															"src": "9215:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9233:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 736,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:2"
																},
																{
																	"expression": {
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9262:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 740,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9305:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 757,
														"nodeType": "IfStatement",
														"src": "9301:93:2",
														"trueBody": {
															"id": 756,
															"nodeType": "Block",
															"src": "9321:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9339:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 751,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:2"
																},
																{
																	"expression": {
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9368:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 755,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9411:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 772,
														"nodeType": "IfStatement",
														"src": "9407:93:2",
														"trueBody": {
															"id": 771,
															"nodeType": "Block",
															"src": "9427:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 763,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9445:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 766,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:2"
																},
																{
																	"expression": {
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9474:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 770,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9517:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 783,
														"nodeType": "IfStatement",
														"src": "9513:64:2",
														"trueBody": {
															"id": 782,
															"nodeType": "Block",
															"src": "9533:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 778,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9551:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 781,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 785,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 665,
													"src": "9603:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 786,
												"nodeType": "Return",
												"src": "9596:13:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:2",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8647:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:2"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8685:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:2"
									},
									"scope": 1116,
									"src": "8633:983:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "9849:165:2",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:2",
												"statements": [
													{
														"assignments": [
															800
														],
														"declarations": [
															{
																"constant": false,
																"id": 800,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 822,
																"src": "9883:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 799,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 804,
														"initialValue": {
															"arguments": [
																{
																	"id": 802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "9905:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 801,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	788,
																	824
																],
																"referencedDeclaration": 788,
																"src": "9900:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "9932:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 806,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "9942:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 807,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "9954:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 808,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "9954:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 812,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 810,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 811,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 800,
																						"src": "9974:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 813,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "9983:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 798,
														"id": 821,
														"nodeType": "Return",
														"src": "9925:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:2",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9783:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9798:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 792,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "9798:8:2"
													},
													"referencedDeclaration": 257,
													"src": "9798:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:2"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9840:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:2"
									},
									"scope": 1116,
									"src": "9769:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "10201:854:2",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "10211:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"hexValue": "30",
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:2"
											},
											{
												"id": 949,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10267:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 852,
														"nodeType": "IfStatement",
														"src": "10263:103:2",
														"trueBody": {
															"id": 851,
															"nodeType": "Block",
															"src": "10286:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 841,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10304:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 846,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:2"
																},
																{
																	"expression": {
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10339:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 850,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10383:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 869,
														"nodeType": "IfStatement",
														"src": "10379:103:2",
														"trueBody": {
															"id": 868,
															"nodeType": "Block",
															"src": "10402:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 858,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10420:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:2"
																},
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10455:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10499:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 886,
														"nodeType": "IfStatement",
														"src": "10495:103:2",
														"trueBody": {
															"id": 885,
															"nodeType": "Block",
															"src": "10518:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10536:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 880,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:2"
																},
																{
																	"expression": {
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10571:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 884,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 887,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10615:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "10611:100:2",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "10633:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10651:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:2"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10685:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10728:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 920,
														"nodeType": "IfStatement",
														"src": "10724:100:2",
														"trueBody": {
															"id": 919,
															"nodeType": "Block",
															"src": "10746:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10764:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 914,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:2"
																},
																{
																	"expression": {
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 915,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10798:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 918,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10841:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 937,
														"nodeType": "IfStatement",
														"src": "10837:100:2",
														"trueBody": {
															"id": 936,
															"nodeType": "Block",
															"src": "10859:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10877:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:2"
																},
																{
																	"expression": {
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 932,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10911:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 935,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10954:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "10950:66:2",
														"trueBody": {
															"id": 947,
															"nodeType": "Block",
															"src": "10972:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10990:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 950,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "11042:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 831,
												"id": 951,
												"nodeType": "Return",
												"src": "11035:13:2"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:2",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10154:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10192:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:2"
									},
									"scope": 1116,
									"src": "10139:916:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "11290:167:2",
										"statements": [
											{
												"id": 987,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:2",
												"statements": [
													{
														"assignments": [
															965
														],
														"declarations": [
															{
																"constant": false,
																"id": 965,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 987,
																"src": "11324:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 964,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 969,
														"initialValue": {
															"arguments": [
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "11347:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 966,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	953,
																	989
																],
																"referencedDeclaration": 953,
																"src": "11341:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 970,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "11374:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 971,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "11384:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 972,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "11396:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "11396:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 975,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 976,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 965,
																						"src": "11417:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 978,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "11426:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 984,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 963,
														"id": 986,
														"nodeType": "Return",
														"src": "11367:73:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "11224:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "11239:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "11239:8:2"
													},
													"referencedDeclaration": 257,
													"src": "11239:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "11281:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:2"
									},
									"scope": 1116,
									"src": "11209:248:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "11771:600:2",
										"statements": [
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "11781:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 997,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"hexValue": "30",
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:2"
											},
											{
												"id": 1072,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1001,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "11837:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1015,
														"nodeType": "IfStatement",
														"src": "11833:98:2",
														"trueBody": {
															"id": 1014,
															"nodeType": "Block",
															"src": "11855:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "11873:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1009,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:2"
																},
																{
																	"expression": {
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1010,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "11904:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1016,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "11948:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1030,
														"nodeType": "IfStatement",
														"src": "11944:95:2",
														"trueBody": {
															"id": 1029,
															"nodeType": "Block",
															"src": "11965:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1021,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "11983:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:2"
																},
																{
																	"expression": {
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1025,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12013:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1028,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1031,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "12056:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1045,
														"nodeType": "IfStatement",
														"src": "12052:95:2",
														"trueBody": {
															"id": 1044,
															"nodeType": "Block",
															"src": "12073:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "12091:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1039,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:2"
																},
																{
																	"expression": {
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1040,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12121:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1043,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "12164:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1060,
														"nodeType": "IfStatement",
														"src": "12160:95:2",
														"trueBody": {
															"id": 1059,
															"nodeType": "Block",
															"src": "12181:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1051,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "12199:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1054,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:2"
																},
																{
																	"expression": {
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1055,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12229:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1058,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "12272:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1071,
														"nodeType": "IfStatement",
														"src": "12268:64:2",
														"trueBody": {
															"id": 1070,
															"nodeType": "Block",
															"src": "12288:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1066,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12306:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1069,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1073,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 998,
													"src": "12358:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 996,
												"id": 1074,
												"nodeType": "Return",
												"src": "12351:13:2"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:2",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "11724:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:2"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "11762:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:2"
									},
									"scope": 1116,
									"src": "11708:663:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "12608:174:2",
										"statements": [
											{
												"id": 1113,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:2",
												"statements": [
													{
														"assignments": [
															1088
														],
														"declarations": [
															{
																"constant": false,
																"id": 1088,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1113,
																"src": "12642:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1087,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1092,
														"initialValue": {
															"arguments": [
																{
																	"id": 1090,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "12666:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1089,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1076,
																	1115
																],
																"referencedDeclaration": 1076,
																"src": "12659:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "12693:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1094,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "12703:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1095,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "12715:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "12715:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1101,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1099,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1088,
																									"src": "12736:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1100,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1102,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1104,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "12751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1086,
														"id": 1112,
														"nodeType": "Return",
														"src": "12686:79:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:2",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "12542:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "12557:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1080,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "12557:8:2"
													},
													"referencedDeclaration": 257,
													"src": "12557:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:2"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "12599:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:2"
									},
									"scope": 1116,
									"src": "12526:256:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1117,
							"src": "202:12582:2",
							"usedErrors": []
						}
					],
					"src": "103:12682:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1221
						]
					},
					"id": 1222,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1119,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:3",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1221,
							"linearizedBaseContracts": [
								1221
							],
							"name": "SignedMath",
							"nameLocation": "223:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "375:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1129,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "392:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1130,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "396:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "404:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:3",
													"trueExpression": {
														"id": 1132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "400:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1135,
												"nodeType": "Return",
												"src": "385:20:3"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:3",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "324:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1121,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "334:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:3"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "367:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1126,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:3"
									},
									"scope": 1221,
									"src": "311:101:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "554:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1147,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "571:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1148,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "575:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1151,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:3",
													"trueExpression": {
														"id": 1150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "579:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1153,
												"nodeType": "Return",
												"src": "564:20:3"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:3",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "503:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "513:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:3"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "546:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1144,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:3"
									},
									"scope": 1221,
									"src": "490:101:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "796:162:3",
										"statements": [
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "858:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1165,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "870:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1168,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "874:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1171,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "881:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1172,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "885:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1185,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "930:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1184,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1183,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1181,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1190,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "944:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1191,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "948:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1197,
												"nodeType": "Return",
												"src": "903:48:3"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:3",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "745:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1157,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "755:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1159,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:3"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "788:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1162,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:3"
									},
									"scope": 1221,
									"src": "728:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1102:158:3",
										"statements": [
											{
												"id": 1218,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "1227:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:3",
																		"subExpression": {
																			"id": 1213,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "1241:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:3",
																	"trueExpression": {
																		"id": 1212,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "1236:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1207,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1206,
														"id": 1217,
														"nodeType": "Return",
														"src": "1212:31:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:3",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1060:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1201,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:3"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1093:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:3"
									},
									"scope": 1221,
									"src": "1047:213:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1222,
							"src": "215:1047:3",
							"usedErrors": []
						}
					],
					"src": "109:1154:3"
				},
				"id": 3
			},
			"tiny_boop.sol": {
				"ast": {
					"absolutePath": "tiny_boop.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							1532
						],
						"Math": [
							1116
						],
						"SignedMath": [
							1221
						],
						"Strings": [
							250
						]
					},
					"id": 1533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1223,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "454:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1533,
							"sourceUnit": 22,
							"src": "479:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1533,
							"sourceUnit": 251,
							"src": "531:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1226,
										"name": "Context",
										"nameLocations": [
											"602:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "602:7:4"
									},
									"id": 1227,
									"nodeType": "InheritanceSpecifier",
									"src": "602:7:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1532,
							"linearizedBaseContracts": [
								1532,
								21
							],
							"name": "ERC20",
							"nameLocation": "593:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1231,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "678:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "642:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1230,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1228,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "650:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "642:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "661:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1235,
									"mutability": "mutable",
									"name": "_balances_pair",
									"nameLocation": "755:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "719:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 1234,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1232,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "728:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "719:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "738:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1237,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "809:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "793:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1239,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "843:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "828:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1238,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "828:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1241,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "869:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "854:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1240,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "854:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1249,
									"name": "Transfer",
									"nameLocation": "902:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "927:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "911:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "949:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "933:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "961:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "953:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:57:4"
									},
									"src": "896:72:4"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1007:62:4",
										"statements": [
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "1017:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54696e7920426f6f70",
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1025:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c956f90c4d064d9cbc007e2ba1fd01201eadf23364c22e920fffcbd5105fb39b",
															"typeString": "literal_string \"Tiny Boop\""
														},
														"value": "Tiny Boop"
													},
													"src": "1017:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "1017:19:4"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "1046:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "426f6f70",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1056:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_231adb773b657a6e5c7feb999129cc566a88d23ec391cc5a92ec77dc3483ed67",
															"typeString": "literal_string \"Boop\""
														},
														"value": "Boop"
													},
													"src": "1046:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "1046:16:4"
											}
										]
									},
									"id": 1261,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:2:4"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:4"
									},
									"scope": 1532,
									"src": "993:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "1154:29:4",
										"statements": [
											{
												"expression": {
													"id": 1266,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1239,
													"src": "1171:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1267,
												"nodeType": "Return",
												"src": "1164:12:4"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1103:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:4"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1139:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1139:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:15:4"
									},
									"scope": 1532,
									"src": "1094:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "1252:31:4",
										"statements": [
											{
												"expression": {
													"id": 1274,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1241,
													"src": "1269:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1275,
												"nodeType": "Return",
												"src": "1262:14:4"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1199:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:2:4"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "1237:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:4"
									},
									"scope": 1532,
									"src": "1190:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "1345:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1362:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 1281,
												"id": 1283,
												"nodeType": "Return",
												"src": "1355:8:4"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1298:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:4"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1338:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1279,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1338:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:7:4"
									},
									"scope": 1532,
									"src": "1289:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "1437:36:4",
										"statements": [
											{
												"expression": {
													"id": 1290,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1237,
													"src": "1454:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1291,
												"nodeType": "Return",
												"src": "1447:19:4"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1385:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:2:4"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:9:4"
									},
									"scope": 1532,
									"src": "1376:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "1585:638:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1631:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1649:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1304,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1641:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1641:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1631:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6f702053656e646572206164647265737320696e76616c6964",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1653:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																"typeString": "literal_string \"Boop Sender address invalid\""
															},
															"value": "Boop Sender address invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																"typeString": "literal_string \"Boop Sender address invalid\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1623:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1623:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "1701:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1713:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1713:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1713:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1701:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6f70205265636569766572206164647265737320696e76616c6964",
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1725:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																"typeString": "literal_string \"Boop Receiver address invalid\""
															},
															"value": "Boop Receiver address invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																"typeString": "literal_string \"Boop Receiver address invalid\""
															}
														],
														"id": 1312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1693:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "1693:64:4"
											},
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "_string_sender",
														"nameLocation": "1805:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1791:28:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1322,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1791:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:28:4"
											},
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "_string_to",
														"nameLocation": "1843:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1829:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1325,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"nodeType": "VariableDeclarationStatement",
												"src": "1829:24:4"
											},
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "_pair_value",
														"nameLocation": "1877:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1863:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1328,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"nodeType": "VariableDeclarationStatement",
												"src": "1863:25:4"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "_string_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "1928:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1334,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1965:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1332,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1945:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1953:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "1945:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1945:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1928:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "1928:44:4"
											},
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1338,
														"name": "_string_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "1982:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1341,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2015:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1339,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1995:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2003:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "1995:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1995:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1982:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "1982:42:4"
											},
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1345,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "2035:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1350,
																		"name": "_string_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "2073:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "5f5f",
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		},
																		"value": "__"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		}
																	],
																	"expression": {
																		"id": 1348,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2056:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2060:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2056:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2056:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2049:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1346,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2049:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2049:45:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2035:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "2035:59:4"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "2104:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1361,
																		"name": "_pair_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "2142:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "_string_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "2154:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1359,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2125:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2129:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2125:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2118:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1357,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2118:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2118:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2104:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2104:62:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1367,
														"name": "_balances_pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2184:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 1369,
													"indexExpression": {
														"id": 1368,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "2199:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1370,
												"nodeType": "Return",
												"src": "2177:34:4"
											}
										]
									},
									"functionSelector": "eb55bc6b",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balancePairOf",
									"nameLocation": "1505:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1527:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1519:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1543:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1535:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:34:4"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:9:4"
									},
									"scope": 1532,
									"src": "1496:727:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "2323:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1379,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "2340:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1381,
													"indexExpression": {
														"id": 1380,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "2350:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2340:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1382,
												"nodeType": "Return",
												"src": "2333:25:4"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2258:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2276:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2268:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:4"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:4"
									},
									"scope": 1532,
									"src": "2249:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "2478:104:4",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2496:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "2488:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1393,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2488:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1395,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2504:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2488:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "2536:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2543:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "2547:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "2526:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "2526:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2571:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1392,
												"id": 1405,
												"nodeType": "Return",
												"src": "2564:11:4"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2411:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2428:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2420:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2440:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2432:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:28:4"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:6:4"
									},
									"scope": 1532,
									"src": "2402:180:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "2696:1116:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "2736:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2744:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2744:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2736:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2756:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "2728:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2814:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2828:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2820:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2820:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2820:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2814:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2832:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2806:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "2806:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2927:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1440,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2941:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2945:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2941:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2933:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2933:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2933:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2927:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865792120596f752063616e27742074727920746f20626f6f7020796f757273656c6621203e3a63",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2954:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																"typeString": "literal_string \"Hey! You can't try to boop yourself! >:c\""
															},
															"value": "Hey! You can't try to boop yourself! >:c"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																"typeString": "literal_string \"Hey! You can't try to boop yourself! >:c\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2919:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2919:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "2919:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3015:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3015:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206d757374206265206265747765656e203120746f2033",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3028:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															},
															"value": "Calm your crazy paw! Boop Value must be between 1 to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															}
														],
														"id": 1447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3007:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "3007:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1455,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3103:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "33",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3103:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206d757374206265206265747765656e203120746f2033",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3116:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															},
															"value": "Calm your crazy paw! Boop Value must be between 1 to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3095:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3095:78:4"
											},
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "_string_sender",
														"nameLocation": "3221:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "3207:28:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1461,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3207:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"nodeType": "VariableDeclarationStatement",
												"src": "3207:28:4"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "_string_to",
														"nameLocation": "3259:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "3245:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1464,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3245:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"nodeType": "VariableDeclarationStatement",
												"src": "3245:24:4"
											},
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "_pair_value",
														"nameLocation": "3293:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "3279:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1467,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3279:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:25:4"
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1470,
														"name": "_string_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "3337:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1473,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3374:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3378:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3374:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1471,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "3354:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3362:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "3354:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3354:31:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3337:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "3337:48:4"
											},
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "_string_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "3395:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1481,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "3428:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1479,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "3408:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3416:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "3408:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3408:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3395:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "3395:36:4"
											},
											{
												"expression": {
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1485,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "3441:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1490,
																		"name": "_string_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1462,
																		"src": "3479:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "5f5f",
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3494:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		},
																		"value": "__"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		}
																	],
																	"expression": {
																		"id": 1488,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3462:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3466:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3462:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3462:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3455:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1486,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3455:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3455:45:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3441:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "3441:59:4"
											},
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1496,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "3510:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1501,
																		"name": "_pair_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "3548:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1502,
																		"name": "_string_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "3560:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1499,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3531:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3535:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3531:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3531:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3524:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1497,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3524:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3524:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3510:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "3510:62:4"
											},
											{
												"id": 1523,
												"nodeType": "UncheckedBlock",
												"src": "3602:145:4",
												"statements": [
													{
														"expression": {
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1507,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "3626:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1508,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3642:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1510,
														"nodeType": "ExpressionStatement",
														"src": "3626:22:4"
													},
													{
														"expression": {
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1511,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "3662:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1513,
																"indexExpression": {
																	"id": 1512,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "3672:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3662:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1514,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3679:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3662:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1516,
														"nodeType": "ExpressionStatement",
														"src": "3662:23:4"
													},
													{
														"expression": {
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1517,
																	"name": "_balances_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "3699:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																		"typeString": "mapping(string memory => uint256)"
																	}
																},
																"id": 1519,
																"indexExpression": {
																	"id": 1518,
																	"name": "_pair_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "3714:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3699:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1520,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3730:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3699:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1522,
														"nodeType": "ExpressionStatement",
														"src": "3699:37:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1525,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3787:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3793:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3797:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1524,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "3778:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "EmitStatement",
												"src": "3773:31:4"
											}
										]
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2597:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2624:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2616:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2666:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2658:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:72:4"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:4"
									},
									"scope": 1532,
									"src": "2588:1224:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1533,
							"src": "584:3231:4",
							"usedErrors": []
						}
					],
					"src": "454:3362:4"
				},
				"id": 4
			}
		}
	}
}