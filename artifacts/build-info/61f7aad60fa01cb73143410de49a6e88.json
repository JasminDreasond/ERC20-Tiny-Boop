{
	"id": "61f7aad60fa01cb73143410de49a6e88",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"tiny_boop.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\n/*\n\n    Boop Contract made by Yasmin Seidel (JasminDreasond)\n    WARNING! This contract is designed to be fun! Don't try to use boops as a financial system!!\n\n    This is a better version from the BSC version (made by me too).\n    The original version url is here:\n\n    https://bscscan.com/token/0x00343061bdbc79ad64018fb4b3aed2e1701b0e24#code\n\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ERC20 is Context {\n    \n    // User Balances\n    mapping(address => uint256) private _balances;\n\n    // Boop Pair Balance\n    mapping (string => uint256) private _balances_pair;\n\n    // Tiny Data\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    // Event\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // Constructor\n    constructor() {\n        _name = 'Tiny Boop';\n        _symbol = 'Boop';\n    }\n\n    // Information\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return 1;\n    }\n\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    // Boop Pair\n    function balancePairOf(address sender, address receiver) external view returns (uint256) {\n\n        // Detect Address.\n        require(sender != address(0), \"Boop Sender address invalid\");\n        require(receiver != address(0), \"Boop Receiver address invalid\");\n\n        // Base Values\n        string memory _string_sender;\n        string memory _string_to;\n        string memory _pair_value;\n\n        // Convert to String\n        _string_sender = Strings.toHexString(sender);\n        _string_to = Strings.toHexString(receiver);\n\n        _pair_value = string(abi.encodePacked(_string_sender,'__'));\n        _pair_value = string(abi.encodePacked(_pair_value,_string_to));\n\n        return _balances_pair[_pair_value];\n    \n    }\n\n    // Token Viewer\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    // Transfer and boop alias\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n\n        // Validator\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        // You can only send 3 boops.\n        require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\");\n        require(amount >= 1, \"Calm your crazy paw! Boop Value must be between 1 to 3\");\n        require(amount <= 3, \"Calm your crazy paw! Boop Value must be between 1 to 3\");\n\n        // Base Values\n        string memory _string_sender;\n        string memory _string_to;\n        string memory _pair_value;\n\n        // Pair Value\n        _string_sender = Strings.toHexString(msg.sender);\n        _string_to = Strings.toHexString(to);\n        _pair_value = string(abi.encodePacked(_string_sender,'__'));\n        _pair_value = string(abi.encodePacked(_pair_value,_string_to));\n\n        // Execute\n        unchecked {\n            _totalSupply += amount;\n            _balances[to] += amount;\n            _balances_pair[_pair_value] += amount;\n        }\n\n        // Emit\n        emit Transfer(from, to, amount);\n\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tiny_boop.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "balancePairOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n  mstore(0x40, 0x80)\n    /* \"tiny_boop.sol\":993:1069  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"tiny_boop.sol\":1017:1036  _name = 'Tiny Boop' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x54696e7920426f6f700000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"tiny_boop.sol\":1017:1022  _name */\n  0x03\n    /* \"tiny_boop.sol\":1017:1036  _name = 'Tiny Boop' */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"tiny_boop.sol\":1046:1062  _symbol = 'Boop' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x426f6f7000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"tiny_boop.sol\":1046:1053  _symbol */\n  0x04\n    /* \"tiny_boop.sol\":1046:1062  _symbol = 'Boop' */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:106   */\ntag_8:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_9:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_10:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_11:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_33:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_35\n  tag_10\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":714:798   */\ntag_34:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_12:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_13:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_14:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_15:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_14\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_16:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_17:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_18:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1818:1852   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1800:1853   */\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_19:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_20:\n    /* \"#utility.yul\":2056:2095   */\n  tag_50\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_21:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_22:\n    /* \"#utility.yul\":2377:2409   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_23:\n    /* \"#utility.yul\":2555:2675   */\ntag_58:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_61\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_24:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_64\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_12\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2906:2935   */\n  tag_65\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_66:\n    /* \"#utility.yul\":3133:3213   */\n  tag_67\n    /* \"#utility.yul\":3189:3211   */\n  tag_68\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_63:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_25:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_26:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_71\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_27:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_73\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_5:\n    /* \"#utility.yul\":3950:3987   */\n  tag_75\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_77\n  tag_9\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4038:4094   */\ntag_76:\n    /* \"#utility.yul\":4118:4156   */\n  tag_78\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4203:4270   */\n  tag_79\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_82:\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_27\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_80)\n    /* \"#utility.yul\":4365:4983   */\ntag_81:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_84\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_85:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_89\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_88:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_80:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tiny_boop.sol\":584:3815  contract ERC20 is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xeb55bc6b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tiny_boop.sol\":1094:1183  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1376:1473  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1289:1370  function decimals() public view virtual returns (uint8) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":2249:2365  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1190:1283  function symbol() public view virtual returns (string memory) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1496:2223  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1094:1183  function name() public view virtual returns (string memory) {... */\n    tag_12:\n        /* \"tiny_boop.sol\":1139:1152  string memory */\n      0x60\n        /* \"tiny_boop.sol\":1171:1176  _name */\n      0x03\n        /* \"tiny_boop.sol\":1164:1176  return _name */\n      dup1\n      sload\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_45\n      swap1\n      tag_44\n      jump\t// in\n    tag_45:\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_47\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_46)\n    tag_47:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_48:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_48\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1094:1183  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":1376:1473  function totalSupply() public view virtual returns (uint256) {... */\n    tag_16:\n        /* \"tiny_boop.sol\":1428:1435  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":1454:1466  _totalSupply */\n      sload(0x02)\n        /* \"tiny_boop.sol\":1447:1466  return _totalSupply */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1376:1473  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":1289:1370  function decimals() public view virtual returns (uint8) {... */\n    tag_20:\n        /* \"tiny_boop.sol\":1338:1343  uint8 */\n      0x00\n        /* \"tiny_boop.sol\":1362:1363  1 */\n      0x01\n        /* \"tiny_boop.sol\":1355:1363  return 1 */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1289:1370  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":2249:2365  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"tiny_boop.sol\":2314:2321  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":2340:2349  _balances */\n      dup1\n        /* \"tiny_boop.sol\":2340:2358  _balances[account] */\n      0x00\n        /* \"tiny_boop.sol\":2350:2357  account */\n      dup4\n        /* \"tiny_boop.sol\":2340:2358  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tiny_boop.sol\":2333:2358  return _balances[account] */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2249:2365  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"tiny_boop.sol\":1190:1283  function symbol() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"tiny_boop.sol\":1237:1250  string memory */\n      0x60\n        /* \"tiny_boop.sol\":1269:1276  _symbol */\n      0x04\n        /* \"tiny_boop.sol\":1262:1276  return _symbol */\n      dup1\n      sload\n      tag_53\n      swap1\n      tag_44\n      jump\t// in\n    tag_53:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_44\n      jump\t// in\n    tag_54:\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_56\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_55)\n    tag_56:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_57:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_57\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1190:1283  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_34:\n        /* \"tiny_boop.sol\":2472:2476  bool */\n      0x00\n        /* \"tiny_boop.sol\":2488:2501  address owner */\n      dup1\n        /* \"tiny_boop.sol\":2504:2516  _msgSender() */\n      tag_59\n        /* \"tiny_boop.sol\":2504:2514  _msgSender */\n      tag_60\n        /* \"tiny_boop.sol\":2504:2516  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"tiny_boop.sol\":2488:2516  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2526:2554  _transfer(owner, to, amount) */\n      tag_61\n        /* \"tiny_boop.sol\":2536:2541  owner */\n      dup2\n        /* \"tiny_boop.sol\":2543:2545  to */\n      dup6\n        /* \"tiny_boop.sol\":2547:2553  amount */\n      dup6\n        /* \"tiny_boop.sol\":2526:2535  _transfer */\n      tag_62\n        /* \"tiny_boop.sol\":2526:2554  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_61:\n        /* \"tiny_boop.sol\":2571:2575  true */\n      0x01\n        /* \"tiny_boop.sol\":2564:2575  return true */\n      swap2\n      pop\n      pop\n        /* \"tiny_boop.sol\":2402:2582  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"tiny_boop.sol\":1496:2223  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n    tag_40:\n        /* \"tiny_boop.sol\":1576:1583  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":1649:1650  0 */\n      dup1\n        /* \"tiny_boop.sol\":1631:1651  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":1631:1637  sender */\n      dup4\n        /* \"tiny_boop.sol\":1631:1651  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":1623:1683  require(sender != address(0), \"Boop Sender address invalid\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"tiny_boop.sol\":1721:1722  0 */\n      0x00\n        /* \"tiny_boop.sol\":1701:1723  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":1701:1709  receiver */\n      dup3\n        /* \"tiny_boop.sol\":1701:1723  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":1693:1757  require(receiver != address(0), \"Boop Receiver address invalid\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"tiny_boop.sol\":1791:1819  string memory _string_sender */\n      0x60\n        /* \"tiny_boop.sol\":1829:1853  string memory _string_to */\n      dup1\n        /* \"tiny_boop.sol\":1863:1888  string memory _pair_value */\n      0x60\n        /* \"tiny_boop.sol\":1945:1972  Strings.toHexString(sender) */\n      tag_70\n        /* \"tiny_boop.sol\":1965:1971  sender */\n      dup7\n        /* \"tiny_boop.sol\":1945:1964  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":1945:1972  Strings.toHexString(sender) */\n      jump\t// in\n    tag_70:\n        /* \"tiny_boop.sol\":1928:1972  _string_sender = Strings.toHexString(sender) */\n      swap3\n      pop\n        /* \"tiny_boop.sol\":1995:2024  Strings.toHexString(receiver) */\n      tag_72\n        /* \"tiny_boop.sol\":2015:2023  receiver */\n      dup6\n        /* \"tiny_boop.sol\":1995:2014  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":1995:2024  Strings.toHexString(receiver) */\n      jump\t// in\n    tag_72:\n        /* \"tiny_boop.sol\":1982:2024  _string_to = Strings.toHexString(receiver) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":2073:2087  _string_sender */\n      dup3\n        /* \"tiny_boop.sol\":2056:2093  abi.encodePacked(_string_sender,'__') */\n      add(0x20, mload(0x40))\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":2035:2094  _pair_value = string(abi.encodePacked(_string_sender,'__')) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2142:2153  _pair_value */\n      dup1\n        /* \"tiny_boop.sol\":2154:2164  _string_to */\n      dup3\n        /* \"tiny_boop.sol\":2125:2165  abi.encodePacked(_pair_value,_string_to) */\n      add(0x20, mload(0x40))\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":2104:2166  _pair_value = string(abi.encodePacked(_pair_value,_string_to)) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2184:2198  _balances_pair */\n      0x01\n        /* \"tiny_boop.sol\":2199:2210  _pair_value */\n      dup2\n        /* \"tiny_boop.sol\":2184:2211  _balances_pair[_pair_value] */\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"tiny_boop.sol\":2177:2211  return _balances_pair[_pair_value] */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"tiny_boop.sol\":1496:2223  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":2588:3812  function _transfer(... */\n    tag_62:\n        /* \"tiny_boop.sol\":2752:2753  0 */\n      0x00\n        /* \"tiny_boop.sol\":2736:2754  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":2736:2740  from */\n      dup4\n        /* \"tiny_boop.sol\":2736:2754  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":2728:2796  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"tiny_boop.sol\":2828:2829  0 */\n      0x00\n        /* \"tiny_boop.sol\":2814:2830  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":2814:2816  to */\n      dup3\n        /* \"tiny_boop.sol\":2814:2830  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":2806:2870  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"tiny_boop.sol\":2941:2951  msg.sender */\n      caller\n        /* \"tiny_boop.sol\":2927:2952  to != address(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":2927:2929  to */\n      dup3\n        /* \"tiny_boop.sol\":2927:2952  to != address(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":2919:2997  require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"tiny_boop.sol\":3025:3026  1 */\n      0x01\n        /* \"tiny_boop.sol\":3015:3021  amount */\n      dup2\n        /* \"tiny_boop.sol\":3015:3026  amount >= 1 */\n      lt\n      iszero\n        /* \"tiny_boop.sol\":3007:3085  require(amount >= 1, \"Calm your crazy paw! Boop Value must be between 1 to 3\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"tiny_boop.sol\":3113:3114  3 */\n      0x03\n        /* \"tiny_boop.sol\":3103:3109  amount */\n      dup2\n        /* \"tiny_boop.sol\":3103:3114  amount <= 3 */\n      gt\n      iszero\n        /* \"tiny_boop.sol\":3095:3173  require(amount <= 3, \"Calm your crazy paw! Boop Value must be between 1 to 3\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_92\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"tiny_boop.sol\":3207:3235  string memory _string_sender */\n      0x60\n        /* \"tiny_boop.sol\":3245:3269  string memory _string_to */\n      dup1\n        /* \"tiny_boop.sol\":3279:3304  string memory _pair_value */\n      0x60\n        /* \"tiny_boop.sol\":3354:3385  Strings.toHexString(msg.sender) */\n      tag_95\n        /* \"tiny_boop.sol\":3374:3384  msg.sender */\n      caller\n        /* \"tiny_boop.sol\":3354:3373  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":3354:3385  Strings.toHexString(msg.sender) */\n      jump\t// in\n    tag_95:\n        /* \"tiny_boop.sol\":3337:3385  _string_sender = Strings.toHexString(msg.sender) */\n      swap3\n      pop\n        /* \"tiny_boop.sol\":3408:3431  Strings.toHexString(to) */\n      tag_96\n        /* \"tiny_boop.sol\":3428:3430  to */\n      dup6\n        /* \"tiny_boop.sol\":3408:3427  Strings.toHexString */\n      tag_71\n        /* \"tiny_boop.sol\":3408:3431  Strings.toHexString(to) */\n      jump\t// in\n    tag_96:\n        /* \"tiny_boop.sol\":3395:3431  _string_to = Strings.toHexString(to) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":3479:3493  _string_sender */\n      dup3\n        /* \"tiny_boop.sol\":3462:3499  abi.encodePacked(_string_sender,'__') */\n      add(0x20, mload(0x40))\n      tag_97\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":3441:3500  _pair_value = string(abi.encodePacked(_string_sender,'__')) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":3548:3559  _pair_value */\n      dup1\n        /* \"tiny_boop.sol\":3560:3570  _string_to */\n      dup3\n        /* \"tiny_boop.sol\":3531:3571  abi.encodePacked(_pair_value,_string_to) */\n      add(0x20, mload(0x40))\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":3510:3572  _pair_value = string(abi.encodePacked(_pair_value,_string_to)) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":3642:3648  amount */\n      dup4\n        /* \"tiny_boop.sol\":3626:3638  _totalSupply */\n      0x02\n      0x00\n        /* \"tiny_boop.sol\":3626:3648  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tiny_boop.sol\":3679:3685  amount */\n      dup4\n        /* \"tiny_boop.sol\":3662:3671  _balances */\n      0x00\n        /* \"tiny_boop.sol\":3662:3675  _balances[to] */\n      dup1\n        /* \"tiny_boop.sol\":3672:3674  to */\n      dup8\n        /* \"tiny_boop.sol\":3662:3675  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"tiny_boop.sol\":3662:3685  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tiny_boop.sol\":3730:3736  amount */\n      dup4\n        /* \"tiny_boop.sol\":3699:3713  _balances_pair */\n      0x01\n        /* \"tiny_boop.sol\":3714:3725  _pair_value */\n      dup3\n        /* \"tiny_boop.sol\":3699:3726  _balances_pair[_pair_value] */\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_99:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"tiny_boop.sol\":3699:3736  _balances_pair[_pair_value] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tiny_boop.sol\":3793:3795  to */\n      dup5\n        /* \"tiny_boop.sol\":3778:3804  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":3787:3791  from */\n      dup7\n        /* \"tiny_boop.sol\":3778:3804  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"tiny_boop.sol\":3797:3803  amount */\n      dup7\n        /* \"tiny_boop.sol\":3778:3804  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"tiny_boop.sol\":2696:3812  {... */\n      pop\n      pop\n      pop\n        /* \"tiny_boop.sol\":2588:3812  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_109\n      jumpi\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n    tag_109:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_112:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n    tag_113:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_115\n      jump\t// in\n    tag_117:\n    tag_116:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_121\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_122\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_115\n      jump\t// in\n    tag_124:\n    tag_123:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_115\n      jump\t// in\n    tag_126:\n    tag_125:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_118)\n    tag_119:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_132:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_133:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_134:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_176:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_176)\n    tag_178:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_135:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_136:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_181\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_132\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":818:889   */\n      tag_182\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_133\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_183\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_134\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":988:1017   */\n      tag_184\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_135\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_14:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_186\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_136\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1426   */\n    tag_137:\n        /* \"#utility.yul\":1386:1393   */\n      0x00\n        /* \"#utility.yul\":1415:1420   */\n      dup2\n        /* \"#utility.yul\":1404:1420   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1550   */\n    tag_138:\n        /* \"#utility.yul\":1519:1543   */\n      tag_189\n        /* \"#utility.yul\":1537:1542   */\n      dup2\n        /* \"#utility.yul\":1519:1543   */\n      tag_137\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1514:1517   */\n      dup3\n        /* \"#utility.yul\":1507:1544   */\n      mstore\n        /* \"#utility.yul\":1432:1550   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1778   */\n    tag_18:\n        /* \"#utility.yul\":1649:1653   */\n      0x00\n        /* \"#utility.yul\":1687:1689   */\n      0x20\n        /* \"#utility.yul\":1676:1685   */\n      dup3\n        /* \"#utility.yul\":1672:1690   */\n      add\n        /* \"#utility.yul\":1664:1690   */\n      swap1\n      pop\n        /* \"#utility.yul\":1700:1771   */\n      tag_191\n        /* \"#utility.yul\":1768:1769   */\n      0x00\n        /* \"#utility.yul\":1757:1766   */\n      dup4\n        /* \"#utility.yul\":1753:1770   */\n      add\n        /* \"#utility.yul\":1744:1750   */\n      dup5\n        /* \"#utility.yul\":1700:1771   */\n      tag_138\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1556:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1784:1870   */\n    tag_139:\n        /* \"#utility.yul\":1819:1826   */\n      0x00\n        /* \"#utility.yul\":1859:1863   */\n      0xff\n        /* \"#utility.yul\":1852:1857   */\n      dup3\n        /* \"#utility.yul\":1848:1864   */\n      and\n        /* \"#utility.yul\":1837:1864   */\n      swap1\n      pop\n        /* \"#utility.yul\":1784:1870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1876:1988   */\n    tag_140:\n        /* \"#utility.yul\":1959:1981   */\n      tag_194\n        /* \"#utility.yul\":1975:1980   */\n      dup2\n        /* \"#utility.yul\":1959:1981   */\n      tag_139\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1954:1957   */\n      dup3\n        /* \"#utility.yul\":1947:1982   */\n      mstore\n        /* \"#utility.yul\":1876:1988   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2208   */\n    tag_22:\n        /* \"#utility.yul\":2083:2087   */\n      0x00\n        /* \"#utility.yul\":2121:2123   */\n      0x20\n        /* \"#utility.yul\":2110:2119   */\n      dup3\n        /* \"#utility.yul\":2106:2124   */\n      add\n        /* \"#utility.yul\":2098:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2201   */\n      tag_196\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2183:2200   */\n      add\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2134:2201   */\n      tag_140\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1994:2208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2295:2412   */\n    tag_142:\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2541:2667   */\n    tag_144:\n        /* \"#utility.yul\":2578:2585   */\n      0x00\n        /* \"#utility.yul\":2618:2660   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2611:2616   */\n      dup3\n        /* \"#utility.yul\":2607:2661   */\n      and\n        /* \"#utility.yul\":2596:2661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2673:2769   */\n    tag_145:\n        /* \"#utility.yul\":2710:2717   */\n      0x00\n        /* \"#utility.yul\":2739:2763   */\n      tag_202\n        /* \"#utility.yul\":2757:2762   */\n      dup3\n        /* \"#utility.yul\":2739:2763   */\n      tag_144\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2728:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:2897   */\n    tag_146:\n        /* \"#utility.yul\":2848:2872   */\n      tag_204\n        /* \"#utility.yul\":2866:2871   */\n      dup2\n        /* \"#utility.yul\":2848:2872   */\n      tag_145\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2841:2846   */\n      dup2\n        /* \"#utility.yul\":2838:2873   */\n      eq\n        /* \"#utility.yul\":2828:2891   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2884:2885   */\n      dup1\n        /* \"#utility.yul\":2877:2889   */\n      revert\n        /* \"#utility.yul\":2828:2891   */\n    tag_205:\n        /* \"#utility.yul\":2775:2897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3042   */\n    tag_147:\n        /* \"#utility.yul\":2949:2954   */\n      0x00\n        /* \"#utility.yul\":2987:2993   */\n      dup2\n        /* \"#utility.yul\":2974:2994   */\n      calldataload\n        /* \"#utility.yul\":2965:2994   */\n      swap1\n      pop\n        /* \"#utility.yul\":3003:3036   */\n      tag_207\n        /* \"#utility.yul\":3030:3035   */\n      dup2\n        /* \"#utility.yul\":3003:3036   */\n      tag_146\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2903:3042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3377   */\n    tag_25:\n        /* \"#utility.yul\":3107:3113   */\n      0x00\n        /* \"#utility.yul\":3156:3158   */\n      0x20\n        /* \"#utility.yul\":3144:3153   */\n      dup3\n        /* \"#utility.yul\":3135:3142   */\n      dup5\n        /* \"#utility.yul\":3131:3154   */\n      sub\n        /* \"#utility.yul\":3127:3159   */\n      slt\n        /* \"#utility.yul\":3124:3243   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3162:3241   */\n      tag_210\n      tag_142\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3124:3243   */\n    tag_209:\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3307:3360   */\n      tag_211\n        /* \"#utility.yul\":3352:3359   */\n      dup5\n        /* \"#utility.yul\":3343:3349   */\n      dup3\n        /* \"#utility.yul\":3332:3341   */\n      dup6\n        /* \"#utility.yul\":3328:3350   */\n      add\n        /* \"#utility.yul\":3307:3360   */\n      tag_147\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3297:3360   */\n      swap2\n      pop\n        /* \"#utility.yul\":3253:3370   */\n      pop\n        /* \"#utility.yul\":3048:3377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3505   */\n    tag_148:\n        /* \"#utility.yul\":3456:3480   */\n      tag_213\n        /* \"#utility.yul\":3474:3479   */\n      dup2\n        /* \"#utility.yul\":3456:3480   */\n      tag_137\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3449:3454   */\n      dup2\n        /* \"#utility.yul\":3446:3481   */\n      eq\n        /* \"#utility.yul\":3436:3499   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":3495:3496   */\n      0x00\n        /* \"#utility.yul\":3492:3493   */\n      dup1\n        /* \"#utility.yul\":3485:3497   */\n      revert\n        /* \"#utility.yul\":3436:3499   */\n    tag_214:\n        /* \"#utility.yul\":3383:3505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:3650   */\n    tag_149:\n        /* \"#utility.yul\":3557:3562   */\n      0x00\n        /* \"#utility.yul\":3595:3601   */\n      dup2\n        /* \"#utility.yul\":3582:3602   */\n      calldataload\n        /* \"#utility.yul\":3573:3602   */\n      swap1\n      pop\n        /* \"#utility.yul\":3611:3644   */\n      tag_216\n        /* \"#utility.yul\":3638:3643   */\n      dup2\n        /* \"#utility.yul\":3611:3644   */\n      tag_148\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3511:3650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:4130   */\n    tag_33:\n        /* \"#utility.yul\":3724:3730   */\n      0x00\n        /* \"#utility.yul\":3732:3738   */\n      dup1\n        /* \"#utility.yul\":3781:3783   */\n      0x40\n        /* \"#utility.yul\":3769:3778   */\n      dup4\n        /* \"#utility.yul\":3760:3767   */\n      dup6\n        /* \"#utility.yul\":3756:3779   */\n      sub\n        /* \"#utility.yul\":3752:3784   */\n      slt\n        /* \"#utility.yul\":3749:3868   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":3787:3866   */\n      tag_219\n      tag_142\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3749:3868   */\n    tag_218:\n        /* \"#utility.yul\":3907:3908   */\n      0x00\n        /* \"#utility.yul\":3932:3985   */\n      tag_220\n        /* \"#utility.yul\":3977:3984   */\n      dup6\n        /* \"#utility.yul\":3968:3974   */\n      dup3\n        /* \"#utility.yul\":3957:3966   */\n      dup7\n        /* \"#utility.yul\":3953:3975   */\n      add\n        /* \"#utility.yul\":3932:3985   */\n      tag_147\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3922:3985   */\n      swap3\n      pop\n        /* \"#utility.yul\":3878:3995   */\n      pop\n        /* \"#utility.yul\":4034:4036   */\n      0x20\n        /* \"#utility.yul\":4060:4113   */\n      tag_221\n        /* \"#utility.yul\":4105:4112   */\n      dup6\n        /* \"#utility.yul\":4096:4102   */\n      dup3\n        /* \"#utility.yul\":4085:4094   */\n      dup7\n        /* \"#utility.yul\":4081:4103   */\n      add\n        /* \"#utility.yul\":4060:4113   */\n      tag_149\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4050:4113   */\n      swap2\n      pop\n        /* \"#utility.yul\":4005:4123   */\n      pop\n        /* \"#utility.yul\":3656:4130   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4226   */\n    tag_150:\n        /* \"#utility.yul\":4170:4177   */\n      0x00\n        /* \"#utility.yul\":4213:4218   */\n      dup2\n        /* \"#utility.yul\":4206:4219   */\n      iszero\n        /* \"#utility.yul\":4199:4220   */\n      iszero\n        /* \"#utility.yul\":4188:4220   */\n      swap1\n      pop\n        /* \"#utility.yul\":4136:4226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4341   */\n    tag_151:\n        /* \"#utility.yul\":4313:4334   */\n      tag_224\n        /* \"#utility.yul\":4328:4333   */\n      dup2\n        /* \"#utility.yul\":4313:4334   */\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4308:4311   */\n      dup3\n        /* \"#utility.yul\":4301:4335   */\n      mstore\n        /* \"#utility.yul\":4232:4341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4347:4557   */\n    tag_36:\n        /* \"#utility.yul\":4434:4438   */\n      0x00\n        /* \"#utility.yul\":4472:4474   */\n      0x20\n        /* \"#utility.yul\":4461:4470   */\n      dup3\n        /* \"#utility.yul\":4457:4475   */\n      add\n        /* \"#utility.yul\":4449:4475   */\n      swap1\n      pop\n        /* \"#utility.yul\":4485:4550   */\n      tag_226\n        /* \"#utility.yul\":4547:4548   */\n      0x00\n        /* \"#utility.yul\":4536:4545   */\n      dup4\n        /* \"#utility.yul\":4532:4549   */\n      add\n        /* \"#utility.yul\":4523:4529   */\n      dup5\n        /* \"#utility.yul\":4485:4550   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4347:4557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:5037   */\n    tag_39:\n        /* \"#utility.yul\":4631:4637   */\n      0x00\n        /* \"#utility.yul\":4639:4645   */\n      dup1\n        /* \"#utility.yul\":4688:4690   */\n      0x40\n        /* \"#utility.yul\":4676:4685   */\n      dup4\n        /* \"#utility.yul\":4667:4674   */\n      dup6\n        /* \"#utility.yul\":4663:4686   */\n      sub\n        /* \"#utility.yul\":4659:4691   */\n      slt\n        /* \"#utility.yul\":4656:4775   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":4694:4773   */\n      tag_229\n      tag_142\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4656:4775   */\n    tag_228:\n        /* \"#utility.yul\":4814:4815   */\n      0x00\n        /* \"#utility.yul\":4839:4892   */\n      tag_230\n        /* \"#utility.yul\":4884:4891   */\n      dup6\n        /* \"#utility.yul\":4875:4881   */\n      dup3\n        /* \"#utility.yul\":4864:4873   */\n      dup7\n        /* \"#utility.yul\":4860:4882   */\n      add\n        /* \"#utility.yul\":4839:4892   */\n      tag_147\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4829:4892   */\n      swap3\n      pop\n        /* \"#utility.yul\":4785:4902   */\n      pop\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4967:5020   */\n      tag_231\n        /* \"#utility.yul\":5012:5019   */\n      dup6\n        /* \"#utility.yul\":5003:5009   */\n      dup3\n        /* \"#utility.yul\":4992:5001   */\n      dup7\n        /* \"#utility.yul\":4988:5010   */\n      add\n        /* \"#utility.yul\":4967:5020   */\n      tag_147\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4957:5020   */\n      swap2\n      pop\n        /* \"#utility.yul\":4912:5030   */\n      pop\n        /* \"#utility.yul\":4563:5037   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5043:5223   */\n    tag_152:\n        /* \"#utility.yul\":5091:5168   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5081:5169   */\n      mstore\n        /* \"#utility.yul\":5188:5192   */\n      0x22\n        /* \"#utility.yul\":5185:5186   */\n      0x04\n        /* \"#utility.yul\":5178:5193   */\n      mstore\n        /* \"#utility.yul\":5212:5216   */\n      0x24\n        /* \"#utility.yul\":5209:5210   */\n      0x00\n        /* \"#utility.yul\":5202:5217   */\n      revert\n        /* \"#utility.yul\":5229:5549   */\n    tag_44:\n        /* \"#utility.yul\":5273:5279   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      0x02\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5300:5312   */\n      div\n        /* \"#utility.yul\":5290:5312   */\n      swap1\n      pop\n        /* \"#utility.yul\":5357:5358   */\n      0x01\n        /* \"#utility.yul\":5351:5355   */\n      dup3\n        /* \"#utility.yul\":5347:5359   */\n      and\n        /* \"#utility.yul\":5378:5396   */\n      dup1\n        /* \"#utility.yul\":5368:5449   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":5434:5438   */\n      0x7f\n        /* \"#utility.yul\":5426:5432   */\n      dup3\n        /* \"#utility.yul\":5422:5439   */\n      and\n        /* \"#utility.yul\":5412:5439   */\n      swap2\n      pop\n        /* \"#utility.yul\":5368:5449   */\n    tag_234:\n        /* \"#utility.yul\":5496:5498   */\n      0x20\n        /* \"#utility.yul\":5488:5494   */\n      dup3\n        /* \"#utility.yul\":5485:5499   */\n      lt\n        /* \"#utility.yul\":5465:5483   */\n      dup2\n        /* \"#utility.yul\":5462:5500   */\n      sub\n        /* \"#utility.yul\":5459:5543   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":5515:5533   */\n      tag_236\n      tag_152\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5459:5543   */\n    tag_235:\n        /* \"#utility.yul\":5280:5549   */\n      pop\n        /* \"#utility.yul\":5229:5549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5732   */\n    tag_153:\n        /* \"#utility.yul\":5695:5724   */\n      0x426f6f702053656e646572206164647265737320696e76616c69640000000000\n        /* \"#utility.yul\":5691:5692   */\n      0x00\n        /* \"#utility.yul\":5683:5689   */\n      dup3\n        /* \"#utility.yul\":5679:5693   */\n      add\n        /* \"#utility.yul\":5672:5725   */\n      mstore\n        /* \"#utility.yul\":5555:5732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5738:6104   */\n    tag_154:\n        /* \"#utility.yul\":5880:5883   */\n      0x00\n        /* \"#utility.yul\":5901:5968   */\n      tag_239\n        /* \"#utility.yul\":5965:5967   */\n      0x1b\n        /* \"#utility.yul\":5960:5963   */\n      dup4\n        /* \"#utility.yul\":5901:5968   */\n      tag_133\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5894:5968   */\n      swap2\n      pop\n        /* \"#utility.yul\":5977:6070   */\n      tag_240\n        /* \"#utility.yul\":6066:6069   */\n      dup3\n        /* \"#utility.yul\":5977:6070   */\n      tag_153\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6095:6097   */\n      0x20\n        /* \"#utility.yul\":6090:6093   */\n      dup3\n        /* \"#utility.yul\":6086:6098   */\n      add\n        /* \"#utility.yul\":6079:6098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5738:6104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6110:6529   */\n    tag_66:\n        /* \"#utility.yul\":6276:6280   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6303:6312   */\n      dup3\n        /* \"#utility.yul\":6299:6317   */\n      add\n        /* \"#utility.yul\":6291:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":6363:6372   */\n      dup2\n        /* \"#utility.yul\":6357:6361   */\n      dup2\n        /* \"#utility.yul\":6353:6373   */\n      sub\n        /* \"#utility.yul\":6349:6350   */\n      0x00\n        /* \"#utility.yul\":6338:6347   */\n      dup4\n        /* \"#utility.yul\":6334:6351   */\n      add\n        /* \"#utility.yul\":6327:6374   */\n      mstore\n        /* \"#utility.yul\":6391:6522   */\n      tag_242\n        /* \"#utility.yul\":6517:6521   */\n      dup2\n        /* \"#utility.yul\":6391:6522   */\n      tag_154\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6383:6522   */\n      swap1\n      pop\n        /* \"#utility.yul\":6110:6529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6535:6714   */\n    tag_155:\n        /* \"#utility.yul\":6675:6706   */\n      0x426f6f70205265636569766572206164647265737320696e76616c6964000000\n        /* \"#utility.yul\":6671:6672   */\n      0x00\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6659:6673   */\n      add\n        /* \"#utility.yul\":6652:6707   */\n      mstore\n        /* \"#utility.yul\":6535:6714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6720:7086   */\n    tag_156:\n        /* \"#utility.yul\":6862:6865   */\n      0x00\n        /* \"#utility.yul\":6883:6950   */\n      tag_245\n        /* \"#utility.yul\":6947:6949   */\n      0x1d\n        /* \"#utility.yul\":6942:6945   */\n      dup4\n        /* \"#utility.yul\":6883:6950   */\n      tag_133\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6876:6950   */\n      swap2\n      pop\n        /* \"#utility.yul\":6959:7052   */\n      tag_246\n        /* \"#utility.yul\":7048:7051   */\n      dup3\n        /* \"#utility.yul\":6959:7052   */\n      tag_155\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7077:7079   */\n      0x20\n        /* \"#utility.yul\":7072:7075   */\n      dup3\n        /* \"#utility.yul\":7068:7080   */\n      add\n        /* \"#utility.yul\":7061:7080   */\n      swap1\n      pop\n        /* \"#utility.yul\":6720:7086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7511   */\n    tag_69:\n        /* \"#utility.yul\":7258:7262   */\n      0x00\n        /* \"#utility.yul\":7296:7298   */\n      0x20\n        /* \"#utility.yul\":7285:7294   */\n      dup3\n        /* \"#utility.yul\":7281:7299   */\n      add\n        /* \"#utility.yul\":7273:7299   */\n      swap1\n      pop\n        /* \"#utility.yul\":7345:7354   */\n      dup2\n        /* \"#utility.yul\":7339:7343   */\n      dup2\n        /* \"#utility.yul\":7335:7355   */\n      sub\n        /* \"#utility.yul\":7331:7332   */\n      0x00\n        /* \"#utility.yul\":7320:7329   */\n      dup4\n        /* \"#utility.yul\":7316:7333   */\n      add\n        /* \"#utility.yul\":7309:7356   */\n      mstore\n        /* \"#utility.yul\":7373:7504   */\n      tag_248\n        /* \"#utility.yul\":7499:7503   */\n      dup2\n        /* \"#utility.yul\":7373:7504   */\n      tag_156\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7365:7504   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7517:7665   */\n    tag_157:\n        /* \"#utility.yul\":7619:7630   */\n      0x00\n        /* \"#utility.yul\":7656:7659   */\n      dup2\n        /* \"#utility.yul\":7641:7659   */\n      swap1\n      pop\n        /* \"#utility.yul\":7517:7665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8061   */\n    tag_158:\n        /* \"#utility.yul\":7777:7780   */\n      0x00\n        /* \"#utility.yul\":7805:7844   */\n      tag_251\n        /* \"#utility.yul\":7838:7843   */\n      dup3\n        /* \"#utility.yul\":7805:7844   */\n      tag_132\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7860:7949   */\n      tag_252\n        /* \"#utility.yul\":7942:7948   */\n      dup2\n        /* \"#utility.yul\":7937:7940   */\n      dup6\n        /* \"#utility.yul\":7860:7949   */\n      tag_157\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7853:7949   */\n      swap4\n      pop\n        /* \"#utility.yul\":7958:8023   */\n      tag_253\n        /* \"#utility.yul\":8016:8022   */\n      dup2\n        /* \"#utility.yul\":8011:8014   */\n      dup6\n        /* \"#utility.yul\":8004:8008   */\n      0x20\n        /* \"#utility.yul\":7997:8002   */\n      dup7\n        /* \"#utility.yul\":7993:8009   */\n      add\n        /* \"#utility.yul\":7958:8023   */\n      tag_134\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8048:8054   */\n      dup1\n        /* \"#utility.yul\":8043:8046   */\n      dup5\n        /* \"#utility.yul\":8039:8055   */\n      add\n        /* \"#utility.yul\":8032:8055   */\n      swap2\n      pop\n        /* \"#utility.yul\":7781:8061   */\n      pop\n        /* \"#utility.yul\":7671:8061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8067:8219   */\n    tag_159:\n        /* \"#utility.yul\":8207:8211   */\n      0x5f5f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8203:8204   */\n      0x00\n        /* \"#utility.yul\":8195:8201   */\n      dup3\n        /* \"#utility.yul\":8191:8205   */\n      add\n        /* \"#utility.yul\":8184:8212   */\n      mstore\n        /* \"#utility.yul\":8067:8219   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8225:8625   */\n    tag_160:\n        /* \"#utility.yul\":8385:8388   */\n      0x00\n        /* \"#utility.yul\":8406:8490   */\n      tag_256\n        /* \"#utility.yul\":8488:8489   */\n      0x02\n        /* \"#utility.yul\":8483:8486   */\n      dup4\n        /* \"#utility.yul\":8406:8490   */\n      tag_157\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8399:8490   */\n      swap2\n      pop\n        /* \"#utility.yul\":8499:8592   */\n      tag_257\n        /* \"#utility.yul\":8588:8591   */\n      dup3\n        /* \"#utility.yul\":8499:8592   */\n      tag_159\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8617:8618   */\n      0x02\n        /* \"#utility.yul\":8612:8615   */\n      dup3\n        /* \"#utility.yul\":8608:8619   */\n      add\n        /* \"#utility.yul\":8601:8619   */\n      swap1\n      pop\n        /* \"#utility.yul\":8225:8625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8631:9172   */\n    tag_74:\n        /* \"#utility.yul\":8864:8867   */\n      0x00\n        /* \"#utility.yul\":8886:8981   */\n      tag_259\n        /* \"#utility.yul\":8977:8980   */\n      dup3\n        /* \"#utility.yul\":8968:8974   */\n      dup5\n        /* \"#utility.yul\":8886:8981   */\n      tag_158\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8879:8981   */\n      swap2\n      pop\n        /* \"#utility.yul\":8998:9146   */\n      tag_260\n        /* \"#utility.yul\":9142:9145   */\n      dup3\n        /* \"#utility.yul\":8998:9146   */\n      tag_160\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8991:9146   */\n      swap2\n      pop\n        /* \"#utility.yul\":9163:9166   */\n      dup2\n        /* \"#utility.yul\":9156:9166   */\n      swap1\n      pop\n        /* \"#utility.yul\":8631:9172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9178:9613   */\n    tag_76:\n        /* \"#utility.yul\":9358:9361   */\n      0x00\n        /* \"#utility.yul\":9380:9475   */\n      tag_262\n        /* \"#utility.yul\":9471:9474   */\n      dup3\n        /* \"#utility.yul\":9462:9468   */\n      dup6\n        /* \"#utility.yul\":9380:9475   */\n      tag_158\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9373:9475   */\n      swap2\n      pop\n        /* \"#utility.yul\":9492:9587   */\n      tag_263\n        /* \"#utility.yul\":9583:9586   */\n      dup3\n        /* \"#utility.yul\":9574:9580   */\n      dup5\n        /* \"#utility.yul\":9492:9587   */\n      tag_158\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9485:9587   */\n      swap2\n      pop\n        /* \"#utility.yul\":9604:9607   */\n      dup2\n        /* \"#utility.yul\":9597:9607   */\n      swap1\n      pop\n        /* \"#utility.yul\":9178:9613   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9619:9894   */\n    tag_78:\n        /* \"#utility.yul\":9751:9754   */\n      0x00\n        /* \"#utility.yul\":9773:9868   */\n      tag_265\n        /* \"#utility.yul\":9864:9867   */\n      dup3\n        /* \"#utility.yul\":9855:9861   */\n      dup5\n        /* \"#utility.yul\":9773:9868   */\n      tag_158\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9766:9868   */\n      swap2\n      pop\n        /* \"#utility.yul\":9885:9888   */\n      dup2\n        /* \"#utility.yul\":9878:9888   */\n      swap1\n      pop\n        /* \"#utility.yul\":9619:9894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9900:10124   */\n    tag_161:\n        /* \"#utility.yul\":10040:10074   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10036:10037   */\n      0x00\n        /* \"#utility.yul\":10028:10034   */\n      dup3\n        /* \"#utility.yul\":10024:10038   */\n      add\n        /* \"#utility.yul\":10017:10075   */\n      mstore\n        /* \"#utility.yul\":10109:10116   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10104:10106   */\n      0x20\n        /* \"#utility.yul\":10096:10102   */\n      dup3\n        /* \"#utility.yul\":10092:10107   */\n      add\n        /* \"#utility.yul\":10085:10117   */\n      mstore\n        /* \"#utility.yul\":9900:10124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10130:10496   */\n    tag_162:\n        /* \"#utility.yul\":10272:10275   */\n      0x00\n        /* \"#utility.yul\":10293:10360   */\n      tag_268\n        /* \"#utility.yul\":10357:10359   */\n      0x25\n        /* \"#utility.yul\":10352:10355   */\n      dup4\n        /* \"#utility.yul\":10293:10360   */\n      tag_133\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10286:10360   */\n      swap2\n      pop\n        /* \"#utility.yul\":10369:10462   */\n      tag_269\n        /* \"#utility.yul\":10458:10461   */\n      dup3\n        /* \"#utility.yul\":10369:10462   */\n      tag_161\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10487:10489   */\n      0x40\n        /* \"#utility.yul\":10482:10485   */\n      dup3\n        /* \"#utility.yul\":10478:10490   */\n      add\n        /* \"#utility.yul\":10471:10490   */\n      swap1\n      pop\n        /* \"#utility.yul\":10130:10496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10502:10921   */\n    tag_83:\n        /* \"#utility.yul\":10668:10672   */\n      0x00\n        /* \"#utility.yul\":10706:10708   */\n      0x20\n        /* \"#utility.yul\":10695:10704   */\n      dup3\n        /* \"#utility.yul\":10691:10709   */\n      add\n        /* \"#utility.yul\":10683:10709   */\n      swap1\n      pop\n        /* \"#utility.yul\":10755:10764   */\n      dup2\n        /* \"#utility.yul\":10749:10753   */\n      dup2\n        /* \"#utility.yul\":10745:10765   */\n      sub\n        /* \"#utility.yul\":10741:10742   */\n      0x00\n        /* \"#utility.yul\":10730:10739   */\n      dup4\n        /* \"#utility.yul\":10726:10743   */\n      add\n        /* \"#utility.yul\":10719:10766   */\n      mstore\n        /* \"#utility.yul\":10783:10914   */\n      tag_271\n        /* \"#utility.yul\":10909:10913   */\n      dup2\n        /* \"#utility.yul\":10783:10914   */\n      tag_162\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10775:10914   */\n      swap1\n      pop\n        /* \"#utility.yul\":10502:10921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10927:11149   */\n    tag_163:\n        /* \"#utility.yul\":11067:11101   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11063:11064   */\n      0x00\n        /* \"#utility.yul\":11055:11061   */\n      dup3\n        /* \"#utility.yul\":11051:11065   */\n      add\n        /* \"#utility.yul\":11044:11102   */\n      mstore\n        /* \"#utility.yul\":11136:11141   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11131:11133   */\n      0x20\n        /* \"#utility.yul\":11123:11129   */\n      dup3\n        /* \"#utility.yul\":11119:11134   */\n      add\n        /* \"#utility.yul\":11112:11142   */\n      mstore\n        /* \"#utility.yul\":10927:11149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11155:11521   */\n    tag_164:\n        /* \"#utility.yul\":11297:11300   */\n      0x00\n        /* \"#utility.yul\":11318:11385   */\n      tag_274\n        /* \"#utility.yul\":11382:11384   */\n      0x23\n        /* \"#utility.yul\":11377:11380   */\n      dup4\n        /* \"#utility.yul\":11318:11385   */\n      tag_133\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11311:11385   */\n      swap2\n      pop\n        /* \"#utility.yul\":11394:11487   */\n      tag_275\n        /* \"#utility.yul\":11483:11486   */\n      dup3\n        /* \"#utility.yul\":11394:11487   */\n      tag_163\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11512:11514   */\n      0x40\n        /* \"#utility.yul\":11507:11510   */\n      dup3\n        /* \"#utility.yul\":11503:11515   */\n      add\n        /* \"#utility.yul\":11496:11515   */\n      swap1\n      pop\n        /* \"#utility.yul\":11155:11521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11527:11946   */\n    tag_86:\n        /* \"#utility.yul\":11693:11697   */\n      0x00\n        /* \"#utility.yul\":11731:11733   */\n      0x20\n        /* \"#utility.yul\":11720:11729   */\n      dup3\n        /* \"#utility.yul\":11716:11734   */\n      add\n        /* \"#utility.yul\":11708:11734   */\n      swap1\n      pop\n        /* \"#utility.yul\":11780:11789   */\n      dup2\n        /* \"#utility.yul\":11774:11778   */\n      dup2\n        /* \"#utility.yul\":11770:11790   */\n      sub\n        /* \"#utility.yul\":11766:11767   */\n      0x00\n        /* \"#utility.yul\":11755:11764   */\n      dup4\n        /* \"#utility.yul\":11751:11768   */\n      add\n        /* \"#utility.yul\":11744:11791   */\n      mstore\n        /* \"#utility.yul\":11808:11939   */\n      tag_277\n        /* \"#utility.yul\":11934:11938   */\n      dup2\n        /* \"#utility.yul\":11808:11939   */\n      tag_164\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11800:11939   */\n      swap1\n      pop\n        /* \"#utility.yul\":11527:11946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11952:12179   */\n    tag_165:\n        /* \"#utility.yul\":12092:12126   */\n      0x4865792120596f752063616e27742074727920746f20626f6f7020796f757273\n        /* \"#utility.yul\":12088:12089   */\n      0x00\n        /* \"#utility.yul\":12080:12086   */\n      dup3\n        /* \"#utility.yul\":12076:12090   */\n      add\n        /* \"#utility.yul\":12069:12127   */\n      mstore\n        /* \"#utility.yul\":12161:12171   */\n      0x656c6621203e3a63000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12156:12158   */\n      0x20\n        /* \"#utility.yul\":12148:12154   */\n      dup3\n        /* \"#utility.yul\":12144:12159   */\n      add\n        /* \"#utility.yul\":12137:12172   */\n      mstore\n        /* \"#utility.yul\":11952:12179   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12185:12551   */\n    tag_166:\n        /* \"#utility.yul\":12327:12330   */\n      0x00\n        /* \"#utility.yul\":12348:12415   */\n      tag_280\n        /* \"#utility.yul\":12412:12414   */\n      0x28\n        /* \"#utility.yul\":12407:12410   */\n      dup4\n        /* \"#utility.yul\":12348:12415   */\n      tag_133\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":12341:12415   */\n      swap2\n      pop\n        /* \"#utility.yul\":12424:12517   */\n      tag_281\n        /* \"#utility.yul\":12513:12516   */\n      dup3\n        /* \"#utility.yul\":12424:12517   */\n      tag_165\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":12542:12544   */\n      0x40\n        /* \"#utility.yul\":12537:12540   */\n      dup3\n        /* \"#utility.yul\":12533:12545   */\n      add\n        /* \"#utility.yul\":12526:12545   */\n      swap1\n      pop\n        /* \"#utility.yul\":12185:12551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12557:12976   */\n    tag_89:\n        /* \"#utility.yul\":12723:12727   */\n      0x00\n        /* \"#utility.yul\":12761:12763   */\n      0x20\n        /* \"#utility.yul\":12750:12759   */\n      dup3\n        /* \"#utility.yul\":12746:12764   */\n      add\n        /* \"#utility.yul\":12738:12764   */\n      swap1\n      pop\n        /* \"#utility.yul\":12810:12819   */\n      dup2\n        /* \"#utility.yul\":12804:12808   */\n      dup2\n        /* \"#utility.yul\":12800:12820   */\n      sub\n        /* \"#utility.yul\":12796:12797   */\n      0x00\n        /* \"#utility.yul\":12785:12794   */\n      dup4\n        /* \"#utility.yul\":12781:12798   */\n      add\n        /* \"#utility.yul\":12774:12821   */\n      mstore\n        /* \"#utility.yul\":12838:12969   */\n      tag_283\n        /* \"#utility.yul\":12964:12968   */\n      dup2\n        /* \"#utility.yul\":12838:12969   */\n      tag_166\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":12830:12969   */\n      swap1\n      pop\n        /* \"#utility.yul\":12557:12976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12982:13223   */\n    tag_167:\n        /* \"#utility.yul\":13122:13156   */\n      0x43616c6d20796f7572206372617a79207061772120426f6f702056616c756520\n        /* \"#utility.yul\":13118:13119   */\n      0x00\n        /* \"#utility.yul\":13110:13116   */\n      dup3\n        /* \"#utility.yul\":13106:13120   */\n      add\n        /* \"#utility.yul\":13099:13157   */\n      mstore\n        /* \"#utility.yul\":13191:13215   */\n      0x6d757374206265206265747765656e203120746f203300000000000000000000\n        /* \"#utility.yul\":13186:13188   */\n      0x20\n        /* \"#utility.yul\":13178:13184   */\n      dup3\n        /* \"#utility.yul\":13174:13189   */\n      add\n        /* \"#utility.yul\":13167:13216   */\n      mstore\n        /* \"#utility.yul\":12982:13223   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13229:13595   */\n    tag_168:\n        /* \"#utility.yul\":13371:13374   */\n      0x00\n        /* \"#utility.yul\":13392:13459   */\n      tag_286\n        /* \"#utility.yul\":13456:13458   */\n      0x36\n        /* \"#utility.yul\":13451:13454   */\n      dup4\n        /* \"#utility.yul\":13392:13459   */\n      tag_133\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":13385:13459   */\n      swap2\n      pop\n        /* \"#utility.yul\":13468:13561   */\n      tag_287\n        /* \"#utility.yul\":13557:13560   */\n      dup3\n        /* \"#utility.yul\":13468:13561   */\n      tag_167\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":13586:13588   */\n      0x40\n        /* \"#utility.yul\":13581:13584   */\n      dup3\n        /* \"#utility.yul\":13577:13589   */\n      add\n        /* \"#utility.yul\":13570:13589   */\n      swap1\n      pop\n        /* \"#utility.yul\":13229:13595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13601:14020   */\n    tag_92:\n        /* \"#utility.yul\":13767:13771   */\n      0x00\n        /* \"#utility.yul\":13805:13807   */\n      0x20\n        /* \"#utility.yul\":13794:13803   */\n      dup3\n        /* \"#utility.yul\":13790:13808   */\n      add\n        /* \"#utility.yul\":13782:13808   */\n      swap1\n      pop\n        /* \"#utility.yul\":13854:13863   */\n      dup2\n        /* \"#utility.yul\":13848:13852   */\n      dup2\n        /* \"#utility.yul\":13844:13864   */\n      sub\n        /* \"#utility.yul\":13840:13841   */\n      0x00\n        /* \"#utility.yul\":13829:13838   */\n      dup4\n        /* \"#utility.yul\":13825:13842   */\n      add\n        /* \"#utility.yul\":13818:13865   */\n      mstore\n        /* \"#utility.yul\":13882:14013   */\n      tag_289\n        /* \"#utility.yul\":14008:14012   */\n      dup2\n        /* \"#utility.yul\":13882:14013   */\n      tag_168\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":13874:14013   */\n      swap1\n      pop\n        /* \"#utility.yul\":13601:14020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14026:14206   */\n    tag_169:\n        /* \"#utility.yul\":14074:14151   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14071:14072   */\n      0x00\n        /* \"#utility.yul\":14064:14152   */\n      mstore\n        /* \"#utility.yul\":14171:14175   */\n      0x11\n        /* \"#utility.yul\":14168:14169   */\n      0x04\n        /* \"#utility.yul\":14161:14176   */\n      mstore\n        /* \"#utility.yul\":14195:14199   */\n      0x24\n        /* \"#utility.yul\":14192:14193   */\n      0x00\n        /* \"#utility.yul\":14185:14200   */\n      revert\n        /* \"#utility.yul\":14212:14622   */\n    tag_106:\n        /* \"#utility.yul\":14252:14259   */\n      0x00\n        /* \"#utility.yul\":14275:14295   */\n      tag_292\n        /* \"#utility.yul\":14293:14294   */\n      dup3\n        /* \"#utility.yul\":14275:14295   */\n      tag_137\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":14270:14295   */\n      swap2\n      pop\n        /* \"#utility.yul\":14309:14329   */\n      tag_293\n        /* \"#utility.yul\":14327:14328   */\n      dup4\n        /* \"#utility.yul\":14309:14329   */\n      tag_137\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":14304:14329   */\n      swap3\n      pop\n        /* \"#utility.yul\":14364:14365   */\n      dup3\n        /* \"#utility.yul\":14361:14362   */\n      dup3\n        /* \"#utility.yul\":14357:14366   */\n      mul\n        /* \"#utility.yul\":14386:14416   */\n      tag_294\n        /* \"#utility.yul\":14404:14415   */\n      dup2\n        /* \"#utility.yul\":14386:14416   */\n      tag_137\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":14375:14416   */\n      swap2\n      pop\n        /* \"#utility.yul\":14565:14566   */\n      dup3\n        /* \"#utility.yul\":14556:14563   */\n      dup3\n        /* \"#utility.yul\":14552:14567   */\n      div\n        /* \"#utility.yul\":14549:14550   */\n      dup5\n        /* \"#utility.yul\":14546:14568   */\n      eq\n        /* \"#utility.yul\":14526:14527   */\n      dup4\n        /* \"#utility.yul\":14519:14528   */\n      iszero\n        /* \"#utility.yul\":14499:14582   */\n      or\n        /* \"#utility.yul\":14476:14615   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":14595:14613   */\n      tag_296\n      tag_169\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":14476:14615   */\n    tag_295:\n        /* \"#utility.yul\":14260:14622   */\n      pop\n        /* \"#utility.yul\":14212:14622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14628:14819   */\n    tag_108:\n        /* \"#utility.yul\":14668:14671   */\n      0x00\n        /* \"#utility.yul\":14687:14707   */\n      tag_298\n        /* \"#utility.yul\":14705:14706   */\n      dup3\n        /* \"#utility.yul\":14687:14707   */\n      tag_137\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":14682:14707   */\n      swap2\n      pop\n        /* \"#utility.yul\":14721:14741   */\n      tag_299\n        /* \"#utility.yul\":14739:14740   */\n      dup4\n        /* \"#utility.yul\":14721:14741   */\n      tag_137\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":14716:14741   */\n      swap3\n      pop\n        /* \"#utility.yul\":14764:14765   */\n      dup3\n        /* \"#utility.yul\":14761:14762   */\n      dup3\n        /* \"#utility.yul\":14757:14766   */\n      add\n        /* \"#utility.yul\":14750:14766   */\n      swap1\n      pop\n        /* \"#utility.yul\":14785:14788   */\n      dup1\n        /* \"#utility.yul\":14782:14783   */\n      dup3\n        /* \"#utility.yul\":14779:14789   */\n      gt\n        /* \"#utility.yul\":14776:14812   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":14792:14810   */\n      tag_301\n      tag_169\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":14776:14812   */\n    tag_300:\n        /* \"#utility.yul\":14628:14819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14825:15005   */\n    tag_111:\n        /* \"#utility.yul\":14873:14950   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14870:14871   */\n      0x00\n        /* \"#utility.yul\":14863:14951   */\n      mstore\n        /* \"#utility.yul\":14970:14974   */\n      0x41\n        /* \"#utility.yul\":14967:14968   */\n      0x04\n        /* \"#utility.yul\":14960:14975   */\n      mstore\n        /* \"#utility.yul\":14994:14998   */\n      0x24\n        /* \"#utility.yul\":14991:14992   */\n      0x00\n        /* \"#utility.yul\":14984:14999   */\n      revert\n        /* \"#utility.yul\":15011:15191   */\n    tag_115:\n        /* \"#utility.yul\":15059:15136   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15056:15057   */\n      0x00\n        /* \"#utility.yul\":15049:15137   */\n      mstore\n        /* \"#utility.yul\":15156:15160   */\n      0x32\n        /* \"#utility.yul\":15153:15154   */\n      0x04\n        /* \"#utility.yul\":15146:15161   */\n      mstore\n        /* \"#utility.yul\":15180:15184   */\n      0x24\n        /* \"#utility.yul\":15177:15178   */\n      0x00\n        /* \"#utility.yul\":15170:15185   */\n      revert\n        /* \"#utility.yul\":15197:15368   */\n    tag_128:\n        /* \"#utility.yul\":15236:15239   */\n      0x00\n        /* \"#utility.yul\":15259:15283   */\n      tag_305\n        /* \"#utility.yul\":15277:15282   */\n      dup3\n        /* \"#utility.yul\":15259:15283   */\n      tag_137\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":15250:15283   */\n      swap2\n      pop\n        /* \"#utility.yul\":15305:15309   */\n      0x00\n        /* \"#utility.yul\":15298:15303   */\n      dup3\n        /* \"#utility.yul\":15295:15310   */\n      sub\n        /* \"#utility.yul\":15292:15333   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":15313:15331   */\n      tag_307\n      tag_169\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":15292:15333   */\n    tag_306:\n        /* \"#utility.yul\":15360:15361   */\n      0x01\n        /* \"#utility.yul\":15353:15358   */\n      dup3\n        /* \"#utility.yul\":15349:15362   */\n      sub\n        /* \"#utility.yul\":15342:15362   */\n      swap1\n      pop\n        /* \"#utility.yul\":15197:15368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15374:15556   */\n    tag_170:\n        /* \"#utility.yul\":15514:15548   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":15510:15511   */\n      0x00\n        /* \"#utility.yul\":15502:15508   */\n      dup3\n        /* \"#utility.yul\":15498:15512   */\n      add\n        /* \"#utility.yul\":15491:15549   */\n      mstore\n        /* \"#utility.yul\":15374:15556   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15562:15928   */\n    tag_171:\n        /* \"#utility.yul\":15704:15707   */\n      0x00\n        /* \"#utility.yul\":15725:15792   */\n      tag_310\n        /* \"#utility.yul\":15789:15791   */\n      0x20\n        /* \"#utility.yul\":15784:15787   */\n      dup4\n        /* \"#utility.yul\":15725:15792   */\n      tag_133\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":15718:15792   */\n      swap2\n      pop\n        /* \"#utility.yul\":15801:15894   */\n      tag_311\n        /* \"#utility.yul\":15890:15893   */\n      dup3\n        /* \"#utility.yul\":15801:15894   */\n      tag_170\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":15919:15921   */\n      0x20\n        /* \"#utility.yul\":15914:15917   */\n      dup3\n        /* \"#utility.yul\":15910:15922   */\n      add\n        /* \"#utility.yul\":15903:15922   */\n      swap1\n      pop\n        /* \"#utility.yul\":15562:15928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15934:16353   */\n    tag_131:\n        /* \"#utility.yul\":16100:16104   */\n      0x00\n        /* \"#utility.yul\":16138:16140   */\n      0x20\n        /* \"#utility.yul\":16127:16136   */\n      dup3\n        /* \"#utility.yul\":16123:16141   */\n      add\n        /* \"#utility.yul\":16115:16141   */\n      swap1\n      pop\n        /* \"#utility.yul\":16187:16196   */\n      dup2\n        /* \"#utility.yul\":16181:16185   */\n      dup2\n        /* \"#utility.yul\":16177:16197   */\n      sub\n        /* \"#utility.yul\":16173:16174   */\n      0x00\n        /* \"#utility.yul\":16162:16171   */\n      dup4\n        /* \"#utility.yul\":16158:16175   */\n      add\n        /* \"#utility.yul\":16151:16198   */\n      mstore\n        /* \"#utility.yul\":16215:16346   */\n      tag_313\n        /* \"#utility.yul\":16341:16345   */\n      dup2\n        /* \"#utility.yul\":16215:16346   */\n      tag_171\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":16207:16346   */\n      swap1\n      pop\n        /* \"#utility.yul\":15934:16353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204998116a455a9948f37503b58e702d830cb02a891c4b3facb403c1c1a7d2719564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1261": {
									"entryPoint": null,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:5"
															},
															"nodeType": "YulIf",
															"src": "623:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:5"
															},
															"nodeType": "YulIf",
															"src": "714:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:5",
														"type": ""
													}
												],
												"src": "484:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:5",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:5",
														"type": ""
													}
												],
												"src": "810:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:5"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:5",
														"type": ""
													}
												],
												"src": "957:93:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:5"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:5",
														"type": ""
													}
												],
												"src": "1056:107:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:5",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:5"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:5"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:5"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:5"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:5"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:5",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:5",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:5",
														"type": ""
													}
												],
												"src": "1169:393:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:5",
														"type": ""
													}
												],
												"src": "1568:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:5",
														"type": ""
													}
												],
												"src": "1651:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:5",
														"type": ""
													}
												],
												"src": "1717:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:5"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:5",
														"type": ""
													}
												],
												"src": "1865:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:5",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:5"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:5"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:5"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:5"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:5"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:5",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:5",
														"type": ""
													}
												],
												"src": "1946:269:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:5",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:5"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:5",
														"type": ""
													}
												],
												"src": "2221:73:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:5"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:5"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:5"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:5"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:5",
														"type": ""
													}
												],
												"src": "2300:189:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:5",
																"statements": []
															},
															"src": "2555:120:5"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:5",
														"type": ""
													}
												],
												"src": "2495:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:5"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:5"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:5"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:5",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:5"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:5"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:5"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:5"
															},
															"nodeType": "YulIf",
															"src": "2777:446:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:5",
														"type": ""
													}
												],
												"src": "2687:543:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:5"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:5"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:5",
														"type": ""
													}
												],
												"src": "3236:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:5",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:5"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:5"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:5"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:5"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:5"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:5",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:5",
														"type": ""
													}
												],
												"src": "3359:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:5"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:5"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:5",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:5"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:5",
														"type": ""
													}
												],
												"src": "3533:295:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:5"
															},
															"nodeType": "YulIf",
															"src": "4038:56:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:5"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:5"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:5"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:5"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:5"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:5",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:5"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:5"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:5",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:5"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:5",
																					"statements": []
																				},
																				"src": "4524:208:5"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:5",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:5"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:5",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:5"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:5"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:5"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:5",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:5"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:5"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:5"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:5",
														"type": ""
													}
												],
												"src": "3833:1395:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600981526020017f54696e7920426f6f7000000000000000000000000000000000000000000000008152506003908162000058919062000320565b506040518060400160405280600481526020017f426f6f7000000000000000000000000000000000000000000000000000000000815250600490816200009f919062000320565b5062000407565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012857607f821691505b6020821081036200013e576200013d620000e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000169565b620001b4868362000169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000201620001fb620001f584620001cc565b620001d6565b620001cc565b9050919050565b6000819050919050565b6200021d83620001e0565b620002356200022c8262000208565b84845462000176565b825550505050565b600090565b6200024c6200023d565b6200025981848462000212565b505050565b5b8181101562000281576200027560008262000242565b6001810190506200025f565b5050565b601f821115620002d0576200029a8162000144565b620002a58462000159565b81016020851015620002b5578190505b620002cd620002c48562000159565b8301826200025e565b50505b505050565b600082821c905092915050565b6000620002f560001984600802620002d5565b1980831691505092915050565b6000620003108383620002e2565b9150826002028217905092915050565b6200032b82620000a6565b67ffffffffffffffff811115620003475762000346620000b1565b5b6200035382546200010f565b6200036082828562000285565b600060209050601f83116001811462000398576000841562000383578287015190505b6200038f858262000302565b865550620003ff565b601f198416620003a88662000144565b60005b82811015620003d257848901518255600182019150602085019450602081019050620003ab565b86831015620003f25784890151620003ee601f891682620002e2565b8355505b6001600288020188555050505b505050505050565b6112f380620004176000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806370a082311161005b57806370a08231146100dc57806395d89b411461010c578063a9059cbb1461012a578063eb55bc6b1461015a5761007d565b806306fdde031461008257806318160ddd146100a0578063313ce567146100be575b600080fd5b61008a61018a565b6040516100979190610ac1565b60405180910390f35b6100a861021c565b6040516100b59190610afc565b60405180910390f35b6100c6610226565b6040516100d39190610b33565b60405180910390f35b6100f660048036038101906100f19190610bb1565b61022f565b6040516101039190610afc565b60405180910390f35b610114610277565b6040516101219190610ac1565b60405180910390f35b610144600480360381019061013f9190610c0a565b610309565b6040516101519190610c65565b60405180910390f35b610174600480360381019061016f9190610c80565b61032c565b6040516101819190610afc565b60405180910390f35b60606003805461019990610cef565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610cef565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b6000600254905090565b60006001905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461028690610cef565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610cef565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b600080610314610496565b905061032181858561049e565b600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361039c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039390610d6c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290610dd8565b60405180910390fd5b6060806060610419866107c8565b9250610424856107c8565b9150826040516020016104379190610e80565b6040516020818303038152906040529050808260405160200161045b929190610ea2565b604051602081830303815290604052905060018160405161047c9190610ec6565b908152602001604051809103902054935050505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610f4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361057c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057390610fe1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190611073565b60405180910390fd5b600181101561062e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062590611105565b60405180910390fd5b6003811115610672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066990611105565b60405180910390fd5b6060806060610680336107c8565b925061068b856107c8565b91508260405160200161069e9190610e80565b604051602081830303815290604052905080826040516020016106c2929190610ea2565b604051602081830303815290604052905083600260008282540192505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550836001826040516107409190610ec6565b9081526020016040518091039020600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516107b89190610afc565b60405180910390a3505050505050565b60606107ee8273ffffffffffffffffffffffffffffffffffffffff16601460ff166107f5565b9050919050565b6060600060028360026108089190611154565b6108129190611196565b67ffffffffffffffff81111561082b5761082a6111ca565b5b6040519080825280601f01601f19166020018201604052801561085d5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610895576108946111f9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106108f9576108f86111f9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026109399190611154565b6109439190611196565b90505b60018111156109e3577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610985576109846111f9565b5b1a60f81b82828151811061099c5761099b6111f9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806109dc90611228565b9050610946565b5060008414610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e9061129d565b60405180910390fd5b8091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a6b578082015181840152602081019050610a50565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a9382610a31565b610a9d8185610a3c565b9350610aad818560208601610a4d565b610ab681610a77565b840191505092915050565b60006020820190508181036000830152610adb8184610a88565b905092915050565b6000819050919050565b610af681610ae3565b82525050565b6000602082019050610b116000830184610aed565b92915050565b600060ff82169050919050565b610b2d81610b17565b82525050565b6000602082019050610b486000830184610b24565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7e82610b53565b9050919050565b610b8e81610b73565b8114610b9957600080fd5b50565b600081359050610bab81610b85565b92915050565b600060208284031215610bc757610bc6610b4e565b5b6000610bd584828501610b9c565b91505092915050565b610be781610ae3565b8114610bf257600080fd5b50565b600081359050610c0481610bde565b92915050565b60008060408385031215610c2157610c20610b4e565b5b6000610c2f85828601610b9c565b9250506020610c4085828601610bf5565b9150509250929050565b60008115159050919050565b610c5f81610c4a565b82525050565b6000602082019050610c7a6000830184610c56565b92915050565b60008060408385031215610c9757610c96610b4e565b5b6000610ca585828601610b9c565b9250506020610cb685828601610b9c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d0757607f821691505b602082108103610d1a57610d19610cc0565b5b50919050565b7f426f6f702053656e646572206164647265737320696e76616c69640000000000600082015250565b6000610d56601b83610a3c565b9150610d6182610d20565b602082019050919050565b60006020820190508181036000830152610d8581610d49565b9050919050565b7f426f6f70205265636569766572206164647265737320696e76616c6964000000600082015250565b6000610dc2601d83610a3c565b9150610dcd82610d8c565b602082019050919050565b60006020820190508181036000830152610df181610db5565b9050919050565b600081905092915050565b6000610e0e82610a31565b610e188185610df8565b9350610e28818560208601610a4d565b80840191505092915050565b7f5f5f000000000000000000000000000000000000000000000000000000000000600082015250565b6000610e6a600283610df8565b9150610e7582610e34565b600282019050919050565b6000610e8c8284610e03565b9150610e9782610e5d565b915081905092915050565b6000610eae8285610e03565b9150610eba8284610e03565b91508190509392505050565b6000610ed28284610e03565b915081905092915050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000610f39602583610a3c565b9150610f4482610edd565b604082019050919050565b60006020820190508181036000830152610f6881610f2c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610fcb602383610a3c565b9150610fd682610f6f565b604082019050919050565b60006020820190508181036000830152610ffa81610fbe565b9050919050565b7f4865792120596f752063616e27742074727920746f20626f6f7020796f75727360008201527f656c6621203e3a63000000000000000000000000000000000000000000000000602082015250565b600061105d602883610a3c565b915061106882611001565b604082019050919050565b6000602082019050818103600083015261108c81611050565b9050919050565b7f43616c6d20796f7572206372617a79207061772120426f6f702056616c75652060008201527f6d757374206265206265747765656e203120746f203300000000000000000000602082015250565b60006110ef603683610a3c565b91506110fa82611093565b604082019050919050565b6000602082019050818103600083015261111e816110e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061115f82610ae3565b915061116a83610ae3565b925082820261117881610ae3565b9150828204841483151761118f5761118e611125565b5b5092915050565b60006111a182610ae3565b91506111ac83610ae3565b92508282019050808211156111c4576111c3611125565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061123382610ae3565b91506000820361124657611245611125565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611287602083610a3c565b915061129282611251565b602082019050919050565b600060208201905081810360008301526112b68161127a565b905091905056fea26469706673582212204998116a455a9948f37503b58e702d830cb02a891c4b3facb403c1c1a7d2719564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54696E7920426F6F700000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP2 PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x320 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F6F7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH3 0x9F SWAP2 SWAP1 PUSH3 0x320 JUMP JUMPDEST POP PUSH3 0x407 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x128 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x13E JUMPI PUSH3 0x13D PUSH3 0xE0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1A8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x169 JUMP JUMPDEST PUSH3 0x1B4 DUP7 DUP4 PUSH3 0x169 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x201 PUSH3 0x1FB PUSH3 0x1F5 DUP5 PUSH3 0x1CC JUMP JUMPDEST PUSH3 0x1D6 JUMP JUMPDEST PUSH3 0x1CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21D DUP4 PUSH3 0x1E0 JUMP JUMPDEST PUSH3 0x235 PUSH3 0x22C DUP3 PUSH3 0x208 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x176 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x24C PUSH3 0x23D JUMP JUMPDEST PUSH3 0x259 DUP2 DUP5 DUP5 PUSH3 0x212 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x281 JUMPI PUSH3 0x275 PUSH1 0x0 DUP3 PUSH3 0x242 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x25F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D0 JUMPI PUSH3 0x29A DUP2 PUSH3 0x144 JUMP JUMPDEST PUSH3 0x2A5 DUP5 PUSH3 0x159 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2B5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2CD PUSH3 0x2C4 DUP6 PUSH3 0x159 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x25E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2D5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x310 DUP4 DUP4 PUSH3 0x2E2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x32B DUP3 PUSH3 0xA6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x347 JUMPI PUSH3 0x346 PUSH3 0xB1 JUMP JUMPDEST JUMPDEST PUSH3 0x353 DUP3 SLOAD PUSH3 0x10F JUMP JUMPDEST PUSH3 0x360 DUP3 DUP3 DUP6 PUSH3 0x285 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x398 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x383 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x38F DUP6 DUP3 PUSH3 0x302 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3FF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3A8 DUP7 PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3D2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3AB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3F2 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3EE PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2E2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12F3 DUP1 PUSH3 0x417 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xEB55BC6B EQ PUSH2 0x15A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x314 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP PUSH2 0x321 DUP2 DUP6 DUP6 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x402 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x419 DUP7 PUSH2 0x7C8 JUMP JUMPDEST SWAP3 POP PUSH2 0x424 DUP6 PUSH2 0x7C8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x45B SWAP3 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x573 SWAP1 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E1 SWAP1 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x669 SWAP1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x680 CALLER PUSH2 0x7C8 JUMP JUMPDEST SWAP3 POP PUSH2 0x68B DUP6 PUSH2 0x7C8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C2 SWAP3 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7EE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82B JUMPI PUSH2 0x82A PUSH2 0x11CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9E3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x985 JUMPI PUSH2 0x984 PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x9DC SWAP1 PUSH2 0x1228 JUMP JUMPDEST SWAP1 POP PUSH2 0x946 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1E SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP3 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xA9D DUP2 DUP6 PUSH2 0xA3C JUMP JUMPDEST SWAP4 POP PUSH2 0xAAD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xA77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADB DUP2 DUP5 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF6 DUP2 PUSH2 0xAE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2D DUP2 PUSH2 0xB17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8E DUP2 PUSH2 0xB73 JUMP JUMPDEST DUP2 EQ PUSH2 0xB99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAB DUP2 PUSH2 0xB85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC6 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP5 DUP3 DUP6 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xAE3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC04 DUP2 PUSH2 0xBDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP6 DUP3 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xBF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC97 JUMPI PUSH2 0xC96 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA5 DUP6 DUP3 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB6 DUP6 DUP3 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD07 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0xCC0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F702053656E646572206164647265737320696E76616C69640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD56 PUSH1 0x1B DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xD61 DUP3 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD85 DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F70205265636569766572206164647265737320696E76616C6964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC2 PUSH1 0x1D DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF1 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP3 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xE18 DUP2 DUP6 PUSH2 0xDF8 JUMP JUMPDEST SWAP4 POP PUSH2 0xE28 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA4D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F5F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A PUSH1 0x2 DUP4 PUSH2 0xDF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE75 DUP3 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8C DUP3 DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xE97 DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAE DUP3 DUP6 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBA DUP3 DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED2 DUP3 DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF39 PUSH1 0x25 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF44 DUP3 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF68 DUP2 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCB PUSH1 0x23 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xFD6 DUP3 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFFA DUP2 PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865792120596F752063616E27742074727920746F20626F6F7020796F757273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656C6621203E3A63000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105D PUSH1 0x28 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1068 DUP3 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108C DUP2 PUSH2 0x1050 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6D20796F7572206372617A79207061772120426F6F702056616C756520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D757374206265206265747765656E203120746F203300000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EF PUSH1 0x36 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0x10FA DUP3 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x111E DUP2 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x115F DUP3 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP4 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1178 DUP2 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x118F JUMPI PUSH2 0x118E PUSH2 0x1125 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A1 DUP3 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AC DUP4 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1233 DUP3 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1287 PUSH1 0x20 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1292 DUP3 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12B6 DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SWAP9 GT PUSH11 0x455A9948F37503B58E702D DUP4 0xC 0xB0 0x2A DUP10 SHR 0x4B EXTCODEHASH 0xAC 0xB4 SUB 0xC1 0xC1 0xA7 0xD2 PUSH18 0x9564736F6C63430008120033000000000000 ",
							"sourceMap": "584:3231:4:-:0;;;993:76;;;;;;;;;;1017:19;;;;;;;;;;;;;;;;;:5;:19;;;;;;:::i;:::-;;1046:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;:::i;:::-;;584:3231;;7:99:5;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;584:3231:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_11": {
									"entryPoint": 1174,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1531": {
									"entryPoint": 1182,
									"id": 1531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOf_1384": {
									"entryPoint": 559,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balancePairOf_1372": {
									"entryPoint": 812,
									"id": 1372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_1285": {
									"entryPoint": 550,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_1269": {
									"entryPoint": 394,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_1277": {
									"entryPoint": 631,
									"id": 1277,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_204": {
									"entryPoint": 2037,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_224": {
									"entryPoint": 1992,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1293": {
									"entryPoint": 540,
									"id": 1293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transfer_1407": {
									"entryPoint": 777,
									"id": 1407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 4689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16356:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:5",
														"type": ""
													}
												],
												"src": "112:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:5",
																"statements": []
															},
															"src": "378:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:5",
														"type": ""
													}
												],
												"src": "287:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:5",
														"type": ""
													}
												],
												"src": "539:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:5",
														"type": ""
													}
												],
												"src": "647:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:5",
														"type": ""
													}
												],
												"src": "1030:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1415:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1404:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1376:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1386:7:5",
														"type": ""
													}
												],
												"src": "1349:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1514:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1537:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1519:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1485:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1492:3:5",
														"type": ""
													}
												],
												"src": "1432:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1664:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1676:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1664:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1744:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1757:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1768:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1753:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1753:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1700:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1626:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1638:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1649:4:5",
														"type": ""
													}
												],
												"src": "1556:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1827:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1837:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1852:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1859:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1848:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1837:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1809:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1819:7:5",
														"type": ""
													}
												],
												"src": "1784:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1975:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1959:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1947:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1925:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1932:3:5",
														"type": ""
													}
												],
												"src": "1876:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2110:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2134:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2134:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2060:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2072:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2083:4:5",
														"type": ""
													}
												],
												"src": "1994:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2274:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2247:6:5",
														"type": ""
													}
												],
												"src": "2214:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2394:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2295:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2418:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2611:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2596:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2578:7:5",
														"type": ""
													}
												],
												"src": "2541:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2728:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2757:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2739:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2728:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2700:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2710:7:5",
														"type": ""
													}
												],
												"src": "2673:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2884:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2841:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2866:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2848:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2848:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2838:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:43:5"
															},
															"nodeType": "YulIf",
															"src": "2828:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2811:5:5",
														"type": ""
													}
												],
												"src": "2775:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2965:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2987:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2974:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2965:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3003:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3003:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2933:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2941:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2949:5:5",
														"type": ""
													}
												],
												"src": "2903:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3114:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3160:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3162:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3162:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3162:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3135:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3127:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3127:32:5"
															},
															"nodeType": "YulIf",
															"src": "3124:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3253:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3268:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3272:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3297:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3332:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3343:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3328:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3328:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3352:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3307:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3297:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3084:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3095:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3107:6:5",
														"type": ""
													}
												],
												"src": "3048:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3426:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3483:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3492:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3495:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3485:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3485:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3485:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3449:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3474:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3456:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3456:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3446:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:43:5"
															},
															"nodeType": "YulIf",
															"src": "3436:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3419:5:5",
														"type": ""
													}
												],
												"src": "3383:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3563:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3573:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3595:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3582:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3573:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3638:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3611:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3611:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3541:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3549:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3557:5:5",
														"type": ""
													}
												],
												"src": "3511:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3739:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3785:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3787:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3787:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3760:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3756:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3752:32:5"
															},
															"nodeType": "YulIf",
															"src": "3749:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3878:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3893:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3897:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3922:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3957:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3968:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3953:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3953:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3977:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3932:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3932:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3922:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4005:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4020:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4034:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4024:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4050:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4085:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4096:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4081:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4081:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4105:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4060:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4050:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3701:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3712:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3724:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3732:6:5",
														"type": ""
													}
												],
												"src": "3656:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4178:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4188:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4213:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4206:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4206:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4188:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4160:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4170:7:5",
														"type": ""
													}
												],
												"src": "4136:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4291:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4308:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4328:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4313:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4301:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4279:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4286:3:5",
														"type": ""
													}
												],
												"src": "4232:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4439:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4449:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4461:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4472:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4457:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4449:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4523:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4547:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4532:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4485:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4485:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4411:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4423:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4434:4:5",
														"type": ""
													}
												],
												"src": "4347:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4646:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4692:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4694:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4694:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4694:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4667:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4676:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4688:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:32:5"
															},
															"nodeType": "YulIf",
															"src": "4656:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4785:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4800:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4814:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4804:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4829:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4864:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4875:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4860:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4860:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4884:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4839:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4829:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4912:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4927:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4931:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4957:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4992:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5003:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4988:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4988:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5012:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4967:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4967:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4957:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4608:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4619:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4631:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4639:6:5",
														"type": ""
													}
												],
												"src": "4563:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5071:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5091:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5081:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5081:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5188:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5178:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5209:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5212:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5202:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5202:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5043:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5280:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5290:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5304:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5290:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5321:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5357:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5347:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5325:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5398:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5412:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5426:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5434:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5422:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5422:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5378:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5371:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:26:5"
															},
															"nodeType": "YulIf",
															"src": "5368:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5501:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "5515:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5515:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5515:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5465:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5488:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5496:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5485:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5485:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5462:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:38:5"
															},
															"nodeType": "YulIf",
															"src": "5459:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5264:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5273:6:5",
														"type": ""
													}
												],
												"src": "5229:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5661:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5683:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5691:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5679:14:5"
																	},
																	{
																		"hexValue": "426f6f702053656e646572206164647265737320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5695:29:5",
																		"type": "",
																		"value": "Boop Sender address invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5672:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5653:6:5",
														"type": ""
													}
												],
												"src": "5555:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5884:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5894:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5960:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5901:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6066:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																	"nodeType": "YulIdentifier",
																	"src": "5977:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6090:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6079:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5872:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5880:3:5",
														"type": ""
													}
												],
												"src": "5738:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6281:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6291:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6303:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6291:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6349:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6357:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6353:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6383:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6517:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6391:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6383:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6261:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6276:4:5",
														"type": ""
													}
												],
												"src": "6110:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6641:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6663:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6659:14:5"
																	},
																	{
																		"hexValue": "426f6f70205265636569766572206164647265737320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6675:31:5",
																		"type": "",
																		"value": "Boop Receiver address invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6652:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6652:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6633:6:5",
														"type": ""
													}
												],
												"src": "6535:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6866:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6876:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6942:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6883:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7048:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																	"nodeType": "YulIdentifier",
																	"src": "6959:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7061:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7072:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7077:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7068:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7068:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6854:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6862:3:5",
														"type": ""
													}
												],
												"src": "6720:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7263:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7273:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7285:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7281:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7273:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7320:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7331:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7316:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7316:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7339:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7345:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7335:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7309:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7365:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7499:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7373:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7373:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7365:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7243:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7258:4:5",
														"type": ""
													}
												],
												"src": "7092:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7631:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7641:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7656:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7641:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7603:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7619:11:5",
														"type": ""
													}
												],
												"src": "7517:148:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7781:280:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7791:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7838:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7805:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7795:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7853:96:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7937:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7942:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7860:76:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7860:89:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7853:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7997:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8004:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7993:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7993:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8011:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8016:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7958:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7958:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8032:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8043:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8048:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8039:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8032:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7762:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7769:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7777:3:5",
														"type": ""
													}
												],
												"src": "7671:390:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8173:46:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8195:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8203:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8191:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8191:14:5"
																	},
																	{
																		"hexValue": "5f5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8207:4:5",
																		"type": "",
																		"value": "__"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8184:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8184:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8184:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8165:6:5",
														"type": ""
													}
												],
												"src": "8067:152:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8389:236:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8399:91:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8483:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8488:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8406:76:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:84:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8399:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																	"nodeType": "YulIdentifier",
																	"src": "8499:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8499:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8499:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8601:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8612:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:11:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8601:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8377:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8385:3:5",
														"type": ""
													}
												],
												"src": "8225:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8868:304:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8879:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8968:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8977:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8886:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8886:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8879:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8991:155:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9142:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8998:142:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:148:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9156:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9163:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9156:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8847:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8853:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8864:3:5",
														"type": ""
													}
												],
												"src": "8631:541:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9362:251:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9373:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9462:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9471:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9380:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9380:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9373:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9485:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9574:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9583:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9492:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9492:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9485:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9597:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9604:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9597:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9333:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9339:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9347:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9358:3:5",
														"type": ""
													}
												],
												"src": "9178:435:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9755:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9766:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9855:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9864:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9773:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9773:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9878:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9885:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9878:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9734:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9740:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9751:3:5",
														"type": ""
													}
												],
												"src": "9619:275:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10006:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10028:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10036:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10024:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10040:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10017:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10017:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10017:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10096:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10104:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10092:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10109:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10085:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9998:6:5",
														"type": ""
													}
												],
												"src": "9900:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10276:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10286:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10352:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10357:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10293:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10286:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10458:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "10369:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10369:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10369:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10482:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10487:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10478:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10471:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10264:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10272:3:5",
														"type": ""
													}
												],
												"src": "10130:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10673:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10683:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10695:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10706:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10691:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10683:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10730:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10741:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10726:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10726:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10749:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10745:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10745:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10719:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10775:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10909:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10783:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10783:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10653:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10668:4:5",
														"type": ""
													}
												],
												"src": "10502:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11033:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11055:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11063:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11051:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11051:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11067:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11044:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11044:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11123:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11131:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11119:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11119:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11136:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11112:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11112:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11025:6:5",
														"type": ""
													}
												],
												"src": "10927:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11301:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11311:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11377:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11382:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11318:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11318:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11311:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11483:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "11394:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11394:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11394:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11496:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11503:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11503:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11496:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11289:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11297:3:5",
														"type": ""
													}
												],
												"src": "11155:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11698:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11708:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11720:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11731:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11716:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11716:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11708:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11755:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11766:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11751:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11774:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11780:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11744:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11744:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11744:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11800:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11934:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11808:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11808:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11800:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11678:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11693:4:5",
														"type": ""
													}
												],
												"src": "11527:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12058:121:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12080:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12088:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12076:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12076:14:5"
																	},
																	{
																		"hexValue": "4865792120596f752063616e27742074727920746f20626f6f7020796f757273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12092:34:5",
																		"type": "",
																		"value": "Hey! You can't try to boop yours"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12069:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12069:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12148:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12156:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12144:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12144:15:5"
																	},
																	{
																		"hexValue": "656c6621203e3a63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12161:10:5",
																		"type": "",
																		"value": "elf! >:c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12137:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12137:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12137:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12050:6:5",
														"type": ""
													}
												],
												"src": "11952:227:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12331:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12341:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12407:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12412:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12348:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12348:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12341:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12513:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																	"nodeType": "YulIdentifier",
																	"src": "12424:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12424:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12424:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12526:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12537:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12542:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12533:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12533:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12526:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12319:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12327:3:5",
														"type": ""
													}
												],
												"src": "12185:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12728:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12738:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12750:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12761:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12738:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12785:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12796:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12781:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12781:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12804:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12810:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12800:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12800:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12774:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12774:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12774:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12830:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12964:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12838:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12830:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12708:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12723:4:5",
														"type": ""
													}
												],
												"src": "12557:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13088:135:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13110:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13118:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13106:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13106:14:5"
																	},
																	{
																		"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c756520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13122:34:5",
																		"type": "",
																		"value": "Calm your crazy paw! Boop Value "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13099:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13099:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13099:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13178:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13186:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13174:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13174:15:5"
																	},
																	{
																		"hexValue": "6d757374206265206265747765656e203120746f2033",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13191:24:5",
																		"type": "",
																		"value": "must be between 1 to 3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13167:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13167:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13080:6:5",
														"type": ""
													}
												],
												"src": "12982:241:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13375:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13385:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13451:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13456:2:5",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13392:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13392:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13385:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13557:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																	"nodeType": "YulIdentifier",
																	"src": "13468:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13468:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13570:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13581:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13586:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13577:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13577:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13570:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13363:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13371:3:5",
														"type": ""
													}
												],
												"src": "13229:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13772:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13782:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13794:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13805:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13790:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13790:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13782:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13829:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13840:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13825:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13825:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13848:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13854:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13844:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13844:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13818:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13818:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13818:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13874:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14008:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13882:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13882:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13874:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13752:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13767:4:5",
														"type": ""
													}
												],
												"src": "13601:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14054:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14071:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14074:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14064:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14168:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14171:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14161:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14161:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14161:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14192:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14195:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14185:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14185:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14185:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14026:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14260:362:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14270:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14293:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14275:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14275:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14270:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14304:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14327:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14309:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14309:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14304:1:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14338:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14361:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14364:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14357:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14357:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14342:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14375:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14404:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14386:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14386:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14375:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14593:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14595:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14595:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14595:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14526:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14519:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14519:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14549:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14556:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14565:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "14552:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14552:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14546:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14546:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14499:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14499:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14479:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14479:113:5"
															},
															"nodeType": "YulIf",
															"src": "14476:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14243:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14246:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14252:7:5",
														"type": ""
													}
												],
												"src": "14212:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14672:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14682:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14705:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14687:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14687:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14682:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14716:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14739:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14721:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14716:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14750:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14761:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14764:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14757:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14757:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14790:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14792:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14792:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14792:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14782:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14785:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14779:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14779:10:5"
															},
															"nodeType": "YulIf",
															"src": "14776:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14659:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14662:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14668:3:5",
														"type": ""
													}
												],
												"src": "14628:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14853:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14870:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14863:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14863:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14863:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14967:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14970:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14960:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14960:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14991:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14994:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14984:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14984:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14984:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14825:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15039:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15056:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15059:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15049:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15049:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15049:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15153:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15156:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15146:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15146:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15146:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15180:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15170:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15170:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15011:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15240:128:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15250:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15277:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15259:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15259:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15250:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15311:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15313:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15313:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15313:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15298:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15305:4:5",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15295:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15295:15:5"
															},
															"nodeType": "YulIf",
															"src": "15292:41:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15342:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15353:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15360:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15349:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15349:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15342:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15226:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15236:3:5",
														"type": ""
													}
												],
												"src": "15197:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15480:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15502:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15510:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15498:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15498:14:5"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15514:34:5",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15491:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15491:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15491:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15472:6:5",
														"type": ""
													}
												],
												"src": "15374:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15708:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15718:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15784:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15789:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15725:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15718:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15890:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "15801:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15801:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15801:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15903:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15914:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15919:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15910:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15910:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15903:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15696:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15704:3:5",
														"type": ""
													}
												],
												"src": "15562:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16105:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16115:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16127:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16138:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16123:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16123:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16115:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16162:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16173:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16158:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16158:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16181:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16187:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16177:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16177:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16151:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16151:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16151:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16207:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16341:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16215:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16215:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16207:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16085:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16100:4:5",
														"type": ""
													}
												],
												"src": "15934:419:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708(memPtr) {\n\n        mstore(add(memPtr, 0), \"Boop Sender address invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Boop Receiver address invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead(memPtr) {\n\n        mstore(add(memPtr, 0), \"__\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hey! You can't try to boop yours\")\n\n        mstore(add(memPtr, 32), \"elf! >:c\")\n\n    }\n\n    function abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209(memPtr) {\n\n        mstore(add(memPtr, 0), \"Calm your crazy paw! Boop Value \")\n\n        mstore(add(memPtr, 32), \"must be between 1 to 3\")\n\n    }\n\n    function abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806370a082311161005b57806370a08231146100dc57806395d89b411461010c578063a9059cbb1461012a578063eb55bc6b1461015a5761007d565b806306fdde031461008257806318160ddd146100a0578063313ce567146100be575b600080fd5b61008a61018a565b6040516100979190610ac1565b60405180910390f35b6100a861021c565b6040516100b59190610afc565b60405180910390f35b6100c6610226565b6040516100d39190610b33565b60405180910390f35b6100f660048036038101906100f19190610bb1565b61022f565b6040516101039190610afc565b60405180910390f35b610114610277565b6040516101219190610ac1565b60405180910390f35b610144600480360381019061013f9190610c0a565b610309565b6040516101519190610c65565b60405180910390f35b610174600480360381019061016f9190610c80565b61032c565b6040516101819190610afc565b60405180910390f35b60606003805461019990610cef565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610cef565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b6000600254905090565b60006001905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461028690610cef565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610cef565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b600080610314610496565b905061032181858561049e565b600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361039c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039390610d6c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290610dd8565b60405180910390fd5b6060806060610419866107c8565b9250610424856107c8565b9150826040516020016104379190610e80565b6040516020818303038152906040529050808260405160200161045b929190610ea2565b604051602081830303815290604052905060018160405161047c9190610ec6565b908152602001604051809103902054935050505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610f4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361057c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057390610fe1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190611073565b60405180910390fd5b600181101561062e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062590611105565b60405180910390fd5b6003811115610672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066990611105565b60405180910390fd5b6060806060610680336107c8565b925061068b856107c8565b91508260405160200161069e9190610e80565b604051602081830303815290604052905080826040516020016106c2929190610ea2565b604051602081830303815290604052905083600260008282540192505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550836001826040516107409190610ec6565b9081526020016040518091039020600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516107b89190610afc565b60405180910390a3505050505050565b60606107ee8273ffffffffffffffffffffffffffffffffffffffff16601460ff166107f5565b9050919050565b6060600060028360026108089190611154565b6108129190611196565b67ffffffffffffffff81111561082b5761082a6111ca565b5b6040519080825280601f01601f19166020018201604052801561085d5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610895576108946111f9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106108f9576108f86111f9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026109399190611154565b6109439190611196565b90505b60018111156109e3577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610985576109846111f9565b5b1a60f81b82828151811061099c5761099b6111f9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806109dc90611228565b9050610946565b5060008414610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e9061129d565b60405180910390fd5b8091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a6b578082015181840152602081019050610a50565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a9382610a31565b610a9d8185610a3c565b9350610aad818560208601610a4d565b610ab681610a77565b840191505092915050565b60006020820190508181036000830152610adb8184610a88565b905092915050565b6000819050919050565b610af681610ae3565b82525050565b6000602082019050610b116000830184610aed565b92915050565b600060ff82169050919050565b610b2d81610b17565b82525050565b6000602082019050610b486000830184610b24565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7e82610b53565b9050919050565b610b8e81610b73565b8114610b9957600080fd5b50565b600081359050610bab81610b85565b92915050565b600060208284031215610bc757610bc6610b4e565b5b6000610bd584828501610b9c565b91505092915050565b610be781610ae3565b8114610bf257600080fd5b50565b600081359050610c0481610bde565b92915050565b60008060408385031215610c2157610c20610b4e565b5b6000610c2f85828601610b9c565b9250506020610c4085828601610bf5565b9150509250929050565b60008115159050919050565b610c5f81610c4a565b82525050565b6000602082019050610c7a6000830184610c56565b92915050565b60008060408385031215610c9757610c96610b4e565b5b6000610ca585828601610b9c565b9250506020610cb685828601610b9c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d0757607f821691505b602082108103610d1a57610d19610cc0565b5b50919050565b7f426f6f702053656e646572206164647265737320696e76616c69640000000000600082015250565b6000610d56601b83610a3c565b9150610d6182610d20565b602082019050919050565b60006020820190508181036000830152610d8581610d49565b9050919050565b7f426f6f70205265636569766572206164647265737320696e76616c6964000000600082015250565b6000610dc2601d83610a3c565b9150610dcd82610d8c565b602082019050919050565b60006020820190508181036000830152610df181610db5565b9050919050565b600081905092915050565b6000610e0e82610a31565b610e188185610df8565b9350610e28818560208601610a4d565b80840191505092915050565b7f5f5f000000000000000000000000000000000000000000000000000000000000600082015250565b6000610e6a600283610df8565b9150610e7582610e34565b600282019050919050565b6000610e8c8284610e03565b9150610e9782610e5d565b915081905092915050565b6000610eae8285610e03565b9150610eba8284610e03565b91508190509392505050565b6000610ed28284610e03565b915081905092915050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000610f39602583610a3c565b9150610f4482610edd565b604082019050919050565b60006020820190508181036000830152610f6881610f2c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610fcb602383610a3c565b9150610fd682610f6f565b604082019050919050565b60006020820190508181036000830152610ffa81610fbe565b9050919050565b7f4865792120596f752063616e27742074727920746f20626f6f7020796f75727360008201527f656c6621203e3a63000000000000000000000000000000000000000000000000602082015250565b600061105d602883610a3c565b915061106882611001565b604082019050919050565b6000602082019050818103600083015261108c81611050565b9050919050565b7f43616c6d20796f7572206372617a79207061772120426f6f702056616c75652060008201527f6d757374206265206265747765656e203120746f203300000000000000000000602082015250565b60006110ef603683610a3c565b91506110fa82611093565b604082019050919050565b6000602082019050818103600083015261111e816110e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061115f82610ae3565b915061116a83610ae3565b925082820261117881610ae3565b9150828204841483151761118f5761118e611125565b5b5092915050565b60006111a182610ae3565b91506111ac83610ae3565b92508282019050808211156111c4576111c3611125565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061123382610ae3565b91506000820361124657611245611125565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611287602083610a3c565b915061129282611251565b602082019050919050565b600060208201905081810360008301526112b68161127a565b905091905056fea26469706673582212204998116a455a9948f37503b58e702d830cb02a891c4b3facb403c1c1a7d2719564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xEB55BC6B EQ PUSH2 0x15A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x314 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP PUSH2 0x321 DUP2 DUP6 DUP6 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x402 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x419 DUP7 PUSH2 0x7C8 JUMP JUMPDEST SWAP3 POP PUSH2 0x424 DUP6 PUSH2 0x7C8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x45B SWAP3 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x573 SWAP1 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E1 SWAP1 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x669 SWAP1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x680 CALLER PUSH2 0x7C8 JUMP JUMPDEST SWAP3 POP PUSH2 0x68B DUP6 PUSH2 0x7C8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6C2 SWAP3 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7EE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82B JUMPI PUSH2 0x82A PUSH2 0x11CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9E3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x985 JUMPI PUSH2 0x984 PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x11F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x9DC SWAP1 PUSH2 0x1228 JUMP JUMPDEST SWAP1 POP PUSH2 0x946 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1E SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP3 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xA9D DUP2 DUP6 PUSH2 0xA3C JUMP JUMPDEST SWAP4 POP PUSH2 0xAAD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xA77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADB DUP2 DUP5 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF6 DUP2 PUSH2 0xAE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2D DUP2 PUSH2 0xB17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8E DUP2 PUSH2 0xB73 JUMP JUMPDEST DUP2 EQ PUSH2 0xB99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAB DUP2 PUSH2 0xB85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC6 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP5 DUP3 DUP6 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xAE3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC04 DUP2 PUSH2 0xBDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP6 DUP3 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xBF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC97 JUMPI PUSH2 0xC96 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA5 DUP6 DUP3 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB6 DUP6 DUP3 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD07 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0xCC0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F702053656E646572206164647265737320696E76616C69640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD56 PUSH1 0x1B DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xD61 DUP3 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD85 DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F70205265636569766572206164647265737320696E76616C6964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC2 PUSH1 0x1D DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0xD8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF1 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP3 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xE18 DUP2 DUP6 PUSH2 0xDF8 JUMP JUMPDEST SWAP4 POP PUSH2 0xE28 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA4D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F5F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A PUSH1 0x2 DUP4 PUSH2 0xDF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE75 DUP3 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8C DUP3 DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xE97 DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAE DUP3 DUP6 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBA DUP3 DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED2 DUP3 DUP5 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF39 PUSH1 0x25 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF44 DUP3 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF68 DUP2 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCB PUSH1 0x23 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0xFD6 DUP3 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFFA DUP2 PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865792120596F752063616E27742074727920746F20626F6F7020796F757273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656C6621203E3A63000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105D PUSH1 0x28 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1068 DUP3 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108C DUP2 PUSH2 0x1050 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6D20796F7572206372617A79207061772120426F6F702056616C756520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D757374206265206265747765656E203120746F203300000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EF PUSH1 0x36 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0x10FA DUP3 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x111E DUP2 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x115F DUP3 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP4 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1178 DUP2 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x118F JUMPI PUSH2 0x118E PUSH2 0x1125 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A1 DUP3 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AC DUP4 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1233 DUP3 PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1287 PUSH1 0x20 DUP4 PUSH2 0xA3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1292 DUP3 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12B6 DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SWAP9 GT PUSH11 0x455A9948F37503B58E702D DUP4 0xC 0xB0 0x2A DUP10 SHR 0x4B EXTCODEHASH 0xAC 0xB4 SUB 0xC1 0xC1 0xA7 0xD2 PUSH18 0x9564736F6C63430008120033000000000000 ",
							"sourceMap": "584:3231:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1376:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1289:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2249:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1190:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2402:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1496:727;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:89;1139:13;1171:5;1164:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:89;:::o;1376:97::-;1428:7;1454:12;;1447:19;;1376:97;:::o;1289:81::-;1338:5;1362:1;1355:8;;1289:81;:::o;2249:116::-;2314:7;2340:9;:18;2350:7;2340:18;;;;;;;;;;;;;;;;2333:25;;2249:116;;;:::o;1190:93::-;1237:13;1269:7;1262:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:93;:::o;2402:180::-;2472:4;2488:13;2504:12;:10;:12::i;:::-;2488:28;;2526;2536:5;2543:2;2547:6;2526:9;:28::i;:::-;2571:4;2564:11;;;2402:180;;;;:::o;1496:727::-;1576:7;1649:1;1631:20;;:6;:20;;;1623:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1721:1;1701:22;;:8;:22;;;1693:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1791:28;1829:24;1863:25;1945:27;1965:6;1945:19;:27::i;:::-;1928:44;;1995:29;2015:8;1995:19;:29::i;:::-;1982:42;;2073:14;2056:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;2035:59;;2142:11;2154:10;2125:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2104:62;;2184:14;2199:11;2184:27;;;;;;:::i;:::-;;;;;;;;;;;;;;2177:34;;;;;1496:727;;;;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;2588:1224:4:-;2752:1;2736:18;;:4;:18;;;2728:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2828:1;2814:16;;:2;:16;;;2806:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2941:10;2927:25;;:2;:25;;;2919:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3025:1;3015:6;:11;;3007:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3113:1;3103:6;:11;;3095:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3207:28;3245:24;3279:25;3354:31;3374:10;3354:19;:31::i;:::-;3337:48;;3408:23;3428:2;3408:19;:23::i;:::-;3395:36;;3479:14;3462:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;3441:59;;3548:11;3560:10;3531:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3510:62;;3642:6;3626:12;;:22;;;;;;;;;;;3679:6;3662:9;:13;3672:2;3662:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3730:6;3699:14;3714:11;3699:27;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;3793:2;3778:26;;3787:4;3778:26;;;3797:6;3778:26;;;;;;:::i;:::-;;;;;;;;2696:1116;;;2588:1224;;;:::o;2407:149:1:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1784:86::-;1819:7;1859:4;1852:5;1848:16;1837:27;;1784:86;;;:::o;1876:112::-;1959:22;1975:5;1959:22;:::i;:::-;1954:3;1947:35;1876:112;;:::o;1994:214::-;2083:4;2121:2;2110:9;2106:18;2098:26;;2134:67;2198:1;2187:9;2183:17;2174:6;2134:67;:::i;:::-;1994:214;;;;:::o;2295:117::-;2404:1;2401;2394:12;2541:126;2578:7;2618:42;2611:5;2607:54;2596:65;;2541:126;;;:::o;2673:96::-;2710:7;2739:24;2757:5;2739:24;:::i;:::-;2728:35;;2673:96;;;:::o;2775:122::-;2848:24;2866:5;2848:24;:::i;:::-;2841:5;2838:35;2828:63;;2887:1;2884;2877:12;2828:63;2775:122;:::o;2903:139::-;2949:5;2987:6;2974:20;2965:29;;3003:33;3030:5;3003:33;:::i;:::-;2903:139;;;;:::o;3048:329::-;3107:6;3156:2;3144:9;3135:7;3131:23;3127:32;3124:119;;;3162:79;;:::i;:::-;3124:119;3282:1;3307:53;3352:7;3343:6;3332:9;3328:22;3307:53;:::i;:::-;3297:63;;3253:117;3048:329;;;;:::o;3383:122::-;3456:24;3474:5;3456:24;:::i;:::-;3449:5;3446:35;3436:63;;3495:1;3492;3485:12;3436:63;3383:122;:::o;3511:139::-;3557:5;3595:6;3582:20;3573:29;;3611:33;3638:5;3611:33;:::i;:::-;3511:139;;;;:::o;3656:474::-;3724:6;3732;3781:2;3769:9;3760:7;3756:23;3752:32;3749:119;;;3787:79;;:::i;:::-;3749:119;3907:1;3932:53;3977:7;3968:6;3957:9;3953:22;3932:53;:::i;:::-;3922:63;;3878:117;4034:2;4060:53;4105:7;4096:6;4085:9;4081:22;4060:53;:::i;:::-;4050:63;;4005:118;3656:474;;;;;:::o;4136:90::-;4170:7;4213:5;4206:13;4199:21;4188:32;;4136:90;;;:::o;4232:109::-;4313:21;4328:5;4313:21;:::i;:::-;4308:3;4301:34;4232:109;;:::o;4347:210::-;4434:4;4472:2;4461:9;4457:18;4449:26;;4485:65;4547:1;4536:9;4532:17;4523:6;4485:65;:::i;:::-;4347:210;;;;:::o;4563:474::-;4631:6;4639;4688:2;4676:9;4667:7;4663:23;4659:32;4656:119;;;4694:79;;:::i;:::-;4656:119;4814:1;4839:53;4884:7;4875:6;4864:9;4860:22;4839:53;:::i;:::-;4829:63;;4785:117;4941:2;4967:53;5012:7;5003:6;4992:9;4988:22;4967:53;:::i;:::-;4957:63;;4912:118;4563:474;;;;;:::o;5043:180::-;5091:77;5088:1;5081:88;5188:4;5185:1;5178:15;5212:4;5209:1;5202:15;5229:320;5273:6;5310:1;5304:4;5300:12;5290:22;;5357:1;5351:4;5347:12;5378:18;5368:81;;5434:4;5426:6;5422:17;5412:27;;5368:81;5496:2;5488:6;5485:14;5465:18;5462:38;5459:84;;5515:18;;:::i;:::-;5459:84;5280:269;5229:320;;;:::o;5555:177::-;5695:29;5691:1;5683:6;5679:14;5672:53;5555:177;:::o;5738:366::-;5880:3;5901:67;5965:2;5960:3;5901:67;:::i;:::-;5894:74;;5977:93;6066:3;5977:93;:::i;:::-;6095:2;6090:3;6086:12;6079:19;;5738:366;;;:::o;6110:419::-;6276:4;6314:2;6303:9;6299:18;6291:26;;6363:9;6357:4;6353:20;6349:1;6338:9;6334:17;6327:47;6391:131;6517:4;6391:131;:::i;:::-;6383:139;;6110:419;;;:::o;6535:179::-;6675:31;6671:1;6663:6;6659:14;6652:55;6535:179;:::o;6720:366::-;6862:3;6883:67;6947:2;6942:3;6883:67;:::i;:::-;6876:74;;6959:93;7048:3;6959:93;:::i;:::-;7077:2;7072:3;7068:12;7061:19;;6720:366;;;:::o;7092:419::-;7258:4;7296:2;7285:9;7281:18;7273:26;;7345:9;7339:4;7335:20;7331:1;7320:9;7316:17;7309:47;7373:131;7499:4;7373:131;:::i;:::-;7365:139;;7092:419;;;:::o;7517:148::-;7619:11;7656:3;7641:18;;7517:148;;;;:::o;7671:390::-;7777:3;7805:39;7838:5;7805:39;:::i;:::-;7860:89;7942:6;7937:3;7860:89;:::i;:::-;7853:96;;7958:65;8016:6;8011:3;8004:4;7997:5;7993:16;7958:65;:::i;:::-;8048:6;8043:3;8039:16;8032:23;;7781:280;7671:390;;;;:::o;8067:152::-;8207:4;8203:1;8195:6;8191:14;8184:28;8067:152;:::o;8225:400::-;8385:3;8406:84;8488:1;8483:3;8406:84;:::i;:::-;8399:91;;8499:93;8588:3;8499:93;:::i;:::-;8617:1;8612:3;8608:11;8601:18;;8225:400;;;:::o;8631:541::-;8864:3;8886:95;8977:3;8968:6;8886:95;:::i;:::-;8879:102;;8998:148;9142:3;8998:148;:::i;:::-;8991:155;;9163:3;9156:10;;8631:541;;;;:::o;9178:435::-;9358:3;9380:95;9471:3;9462:6;9380:95;:::i;:::-;9373:102;;9492:95;9583:3;9574:6;9492:95;:::i;:::-;9485:102;;9604:3;9597:10;;9178:435;;;;;:::o;9619:275::-;9751:3;9773:95;9864:3;9855:6;9773:95;:::i;:::-;9766:102;;9885:3;9878:10;;9619:275;;;;:::o;9900:224::-;10040:34;10036:1;10028:6;10024:14;10017:58;10109:7;10104:2;10096:6;10092:15;10085:32;9900:224;:::o;10130:366::-;10272:3;10293:67;10357:2;10352:3;10293:67;:::i;:::-;10286:74;;10369:93;10458:3;10369:93;:::i;:::-;10487:2;10482:3;10478:12;10471:19;;10130:366;;;:::o;10502:419::-;10668:4;10706:2;10695:9;10691:18;10683:26;;10755:9;10749:4;10745:20;10741:1;10730:9;10726:17;10719:47;10783:131;10909:4;10783:131;:::i;:::-;10775:139;;10502:419;;;:::o;10927:222::-;11067:34;11063:1;11055:6;11051:14;11044:58;11136:5;11131:2;11123:6;11119:15;11112:30;10927:222;:::o;11155:366::-;11297:3;11318:67;11382:2;11377:3;11318:67;:::i;:::-;11311:74;;11394:93;11483:3;11394:93;:::i;:::-;11512:2;11507:3;11503:12;11496:19;;11155:366;;;:::o;11527:419::-;11693:4;11731:2;11720:9;11716:18;11708:26;;11780:9;11774:4;11770:20;11766:1;11755:9;11751:17;11744:47;11808:131;11934:4;11808:131;:::i;:::-;11800:139;;11527:419;;;:::o;11952:227::-;12092:34;12088:1;12080:6;12076:14;12069:58;12161:10;12156:2;12148:6;12144:15;12137:35;11952:227;:::o;12185:366::-;12327:3;12348:67;12412:2;12407:3;12348:67;:::i;:::-;12341:74;;12424:93;12513:3;12424:93;:::i;:::-;12542:2;12537:3;12533:12;12526:19;;12185:366;;;:::o;12557:419::-;12723:4;12761:2;12750:9;12746:18;12738:26;;12810:9;12804:4;12800:20;12796:1;12785:9;12781:17;12774:47;12838:131;12964:4;12838:131;:::i;:::-;12830:139;;12557:419;;;:::o;12982:241::-;13122:34;13118:1;13110:6;13106:14;13099:58;13191:24;13186:2;13178:6;13174:15;13167:49;12982:241;:::o;13229:366::-;13371:3;13392:67;13456:2;13451:3;13392:67;:::i;:::-;13385:74;;13468:93;13557:3;13468:93;:::i;:::-;13586:2;13581:3;13577:12;13570:19;;13229:366;;;:::o;13601:419::-;13767:4;13805:2;13794:9;13790:18;13782:26;;13854:9;13848:4;13844:20;13840:1;13829:9;13825:17;13818:47;13882:131;14008:4;13882:131;:::i;:::-;13874:139;;13601:419;;;:::o;14026:180::-;14074:77;14071:1;14064:88;14171:4;14168:1;14161:15;14195:4;14192:1;14185:15;14212:410;14252:7;14275:20;14293:1;14275:20;:::i;:::-;14270:25;;14309:20;14327:1;14309:20;:::i;:::-;14304:25;;14364:1;14361;14357:9;14386:30;14404:11;14386:30;:::i;:::-;14375:41;;14565:1;14556:7;14552:15;14549:1;14546:22;14526:1;14519:9;14499:83;14476:139;;14595:18;;:::i;:::-;14476:139;14260:362;14212:410;;;;:::o;14628:191::-;14668:3;14687:20;14705:1;14687:20;:::i;:::-;14682:25;;14721:20;14739:1;14721:20;:::i;:::-;14716:25;;14764:1;14761;14757:9;14750:16;;14785:3;14782:1;14779:10;14776:36;;;14792:18;;:::i;:::-;14776:36;14628:191;;;;:::o;14825:180::-;14873:77;14870:1;14863:88;14970:4;14967:1;14960:15;14994:4;14991:1;14984:15;15011:180;15059:77;15056:1;15049:88;15156:4;15153:1;15146:15;15180:4;15177:1;15170:15;15197:171;15236:3;15259:24;15277:5;15259:24;:::i;:::-;15250:33;;15305:4;15298:5;15295:15;15292:41;;15313:18;;:::i;:::-;15292:41;15360:1;15353:5;15349:13;15342:20;;15197:171;;;:::o;15374:182::-;15514:34;15510:1;15502:6;15498:14;15491:58;15374:182;:::o;15562:366::-;15704:3;15725:67;15789:2;15784:3;15725:67;:::i;:::-;15718:74;;15801:93;15890:3;15801:93;:::i;:::-;15919:2;15914:3;15910:12;15903:19;;15562:366;;;:::o;15934:419::-;16100:4;16138:2;16127:9;16123:18;16115:26;;16187:9;16181:4;16177:20;16173:1;16162:9;16158:17;16151:47;16215:131;16341:4;16215:131;:::i;:::-;16207:139;;15934:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "970200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2841",
								"balancePairOf(address,address)": "infinite",
								"decimals()": "388",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2460",
								"transfer(address,uint256)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 993,
									"end": 1069,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "54696E7920426F6F700000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1017,
									"end": 1036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1036,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH",
									"source": 4,
									"value": "426F6F7000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1053,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1046,
									"end": 1062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1062,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 3815,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204998116a455a9948f37503b58e702d830cb02a891c4b3facb403c1c1a7d2719564736f6c63430008120033",
									".code": [
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "EB55BC6B"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 584,
											"end": 3815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1094,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1094,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1376,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1376,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1289,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2249,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2249,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2249,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1190,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1190,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1164,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1164,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1237,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1262,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1262,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2504,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2504,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2516,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2504,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2553,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2526,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1623,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1623,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1693,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1693,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1819,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1965,
											"end": 1971,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1945,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1945,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2015,
											"end": 2023,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1995,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2024,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1995,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 2024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 2024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2056,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2153,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2125,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2198,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2184,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 2223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2728,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2728,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2806,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2919,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2919,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3026,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3026,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3007,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3007,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3095,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3095,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3207,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3245,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3374,
											"end": 3384,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3354,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3385,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3408,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3408,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3462,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3531,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3648,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3699,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3791,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3778,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1537,
											"end": 1542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1519,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1700,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1959,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1982,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2134,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2661,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2739,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2848,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2873,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3003,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3142,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3154,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3159,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3162,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3352,
											"end": 3359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3307,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3505,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3383,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3456,
											"end": 3480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3511,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3602,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3638,
											"end": 3643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3611,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3611,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3650,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3760,
											"end": 3767,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3784,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3868,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3749,
											"end": 3868,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3787,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3868,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3749,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3977,
											"end": 3984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 3966,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3932,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3932,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 4036,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4105,
											"end": 4112,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4096,
											"end": 4102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4094,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4060,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4226,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4136,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4219,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4341,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4232,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4328,
											"end": 4333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4313,
											"end": 4334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4334,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4313,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4557,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4347,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4461,
											"end": 4470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4485,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4529,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4485,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4485,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4485,
											"end": 4550,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4485,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4674,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4686,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4659,
											"end": 4691,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4694,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4884,
											"end": 4891,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4839,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4892,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5012,
											"end": 5019,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 5010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4967,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4967,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5223,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5043,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5091,
											"end": 5168,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5169,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5549,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5229,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5312,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5351,
											"end": 5355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5368,
											"end": 5449,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5449,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5368,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5496,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5499,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5500,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5459,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5459,
											"end": 5543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5515,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5459,
											"end": 5543,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5459,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5732,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5555,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5724,
											"name": "PUSH",
											"source": 5,
											"value": "426F6F702053656E646572206164647265737320696E76616C69640000000000"
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 5725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5883,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 5960,
											"end": 5963,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5901,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5901,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5977,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5977,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5738,
											"end": 6104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5738,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6391,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6391,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6714,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6535,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 6706,
											"name": "PUSH",
											"source": 5,
											"value": "426F6F70205265636569766572206164647265737320696E76616C6964000000"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6659,
											"end": 6673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6883,
											"end": 6950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6883,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7048,
											"end": 7051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6959,
											"end": 7052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6959,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7068,
											"end": 7080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 7086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7345,
											"end": 7354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7335,
											"end": 7355,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7329,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7316,
											"end": 7333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7309,
											"end": 7356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7499,
											"end": 7503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7373,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7373,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7665,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7517,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7665,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8061,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7671,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 7838,
											"end": 7843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7805,
											"end": 7844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7805,
											"end": 7844,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 7805,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7942,
											"end": 7948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7937,
											"end": 7940,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7860,
											"end": 7949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7949,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7860,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7853,
											"end": 7949,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7853,
											"end": 7949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 8002,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7993,
											"end": 8009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7958,
											"end": 8023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 8023,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7958,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8048,
											"end": 8054,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8046,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8039,
											"end": 8055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8032,
											"end": 8055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8032,
											"end": 8055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 8061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8061,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8061,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8219,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8067,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "PUSH",
											"source": 5,
											"value": "5F5F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8203,
											"end": 8204,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8191,
											"end": 8205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8184,
											"end": 8212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8625,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8225,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8385,
											"end": 8388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8488,
											"end": 8489,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8483,
											"end": 8486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8406,
											"end": 8490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8490,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8406,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8399,
											"end": 8490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8399,
											"end": 8490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 8499,
											"end": 8592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8608,
											"end": 8619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8601,
											"end": 8619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 9172,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 8631,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8864,
											"end": 8867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8977,
											"end": 8980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8968,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 8886,
											"end": 8981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8981,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8886,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8879,
											"end": 8981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8879,
											"end": 8981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9142,
											"end": 9145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8998,
											"end": 9146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9146,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8998,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8991,
											"end": 9146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8991,
											"end": 9146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9166,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 9172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 9172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 9172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 9172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 9172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9358,
											"end": 9361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9471,
											"end": 9474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 9468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9380,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9380,
											"end": 9475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9380,
											"end": 9475,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9380,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9373,
											"end": 9475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9373,
											"end": 9475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9583,
											"end": 9586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9580,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9492,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9587,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9492,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9604,
											"end": 9607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9597,
											"end": 9607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9597,
											"end": 9607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9894,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9619,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9751,
											"end": 9754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 9864,
											"end": 9867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9773,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9868,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 9773,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9766,
											"end": 9868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9766,
											"end": 9868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9885,
											"end": 9888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 9888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 9888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9894,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9900,
											"end": 10124,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9900,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10040,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10017,
											"end": 10075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10109,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10104,
											"end": 10106,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10096,
											"end": 10102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9900,
											"end": 10124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9900,
											"end": 10124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10272,
											"end": 10275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10357,
											"end": 10359,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 10352,
											"end": 10355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10293,
											"end": 10360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10293,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10286,
											"end": 10360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10286,
											"end": 10360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10458,
											"end": 10461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 10369,
											"end": 10462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10369,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10482,
											"end": 10485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10478,
											"end": 10490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10471,
											"end": 10490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10471,
											"end": 10490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10749,
											"end": 10753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10726,
											"end": 10743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10909,
											"end": 10913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 10783,
											"end": 10914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10775,
											"end": 10914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10775,
											"end": 10914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 11149,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10927,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11067,
											"end": 11101,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11063,
											"end": 11064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11051,
											"end": 11065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11044,
											"end": 11102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11136,
											"end": 11141,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11123,
											"end": 11129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11112,
											"end": 11142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 11149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 11149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11155,
											"end": 11521,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 11155,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11382,
											"end": 11384,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 11377,
											"end": 11380,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11318,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 11318,
											"end": 11385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11318,
											"end": 11385,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11318,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11394,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 11483,
											"end": 11486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11394,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 11394,
											"end": 11487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11394,
											"end": 11487,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 11394,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11512,
											"end": 11514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11155,
											"end": 11521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11155,
											"end": 11521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11155,
											"end": 11521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11155,
											"end": 11521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11946,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 11527,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11693,
											"end": 11697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11716,
											"end": 11734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11708,
											"end": 11734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11708,
											"end": 11734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11780,
											"end": 11789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11774,
											"end": 11778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11770,
											"end": 11790,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11766,
											"end": 11767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11764,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11751,
											"end": 11768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11744,
											"end": 11791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11808,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 11934,
											"end": 11938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11808,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 11808,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11808,
											"end": 11939,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 11808,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11800,
											"end": 11939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11800,
											"end": 11939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11952,
											"end": 12179,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 11952,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12092,
											"end": 12126,
											"name": "PUSH",
											"source": 5,
											"value": "4865792120596F752063616E27742074727920746F20626F6F7020796F757273"
										},
										{
											"begin": 12088,
											"end": 12089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12080,
											"end": 12086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12076,
											"end": 12090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12161,
											"end": 12171,
											"name": "PUSH",
											"source": 5,
											"value": "656C6621203E3A63000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12156,
											"end": 12158,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12148,
											"end": 12154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12172,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11952,
											"end": 12179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11952,
											"end": 12179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12185,
											"end": 12551,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 12185,
											"end": 12551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12327,
											"end": 12330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12348,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12412,
											"end": 12414,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 12407,
											"end": 12410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12348,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 12348,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12348,
											"end": 12415,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12348,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12341,
											"end": 12415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12341,
											"end": 12415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12424,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 12513,
											"end": 12516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12424,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 12424,
											"end": 12517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12424,
											"end": 12517,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 12424,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12542,
											"end": 12544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12533,
											"end": 12545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12526,
											"end": 12545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12526,
											"end": 12545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12185,
											"end": 12551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12185,
											"end": 12551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12185,
											"end": 12551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12185,
											"end": 12551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12976,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 12557,
											"end": 12976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12723,
											"end": 12727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12761,
											"end": 12763,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12746,
											"end": 12764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12804,
											"end": 12808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12785,
											"end": 12794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12781,
											"end": 12798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12774,
											"end": 12821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12838,
											"end": 12969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12838,
											"end": 12969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 12838,
											"end": 12969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12838,
											"end": 12969,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 12838,
											"end": 12969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12830,
											"end": 12969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12830,
											"end": 12969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12982,
											"end": 13223,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 12982,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "PUSH",
											"source": 5,
											"value": "43616C6D20796F7572206372617A79207061772120426F6F702056616C756520"
										},
										{
											"begin": 13118,
											"end": 13119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13099,
											"end": 13157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13191,
											"end": 13215,
											"name": "PUSH",
											"source": 5,
											"value": "6D757374206265206265747765656E203120746F203300000000000000000000"
										},
										{
											"begin": 13186,
											"end": 13188,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13178,
											"end": 13184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13174,
											"end": 13189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13167,
											"end": 13216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12982,
											"end": 13223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12982,
											"end": 13223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13371,
											"end": 13374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 13451,
											"end": 13454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 13392,
											"end": 13459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13385,
											"end": 13459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13385,
											"end": 13459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 13557,
											"end": 13560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 13468,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13586,
											"end": 13588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13581,
											"end": 13584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13570,
											"end": 13589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13570,
											"end": 13589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13767,
											"end": 13771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13805,
											"end": 13807,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13794,
											"end": 13803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13782,
											"end": 13808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13782,
											"end": 13808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13854,
											"end": 13863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13848,
											"end": 13852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13844,
											"end": 13864,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13840,
											"end": 13841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13829,
											"end": 13838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13825,
											"end": 13842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13818,
											"end": 13865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 14008,
											"end": 14012,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 13882,
											"end": 14013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13874,
											"end": 14013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13874,
											"end": 14013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 14020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14026,
											"end": 14206,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 14026,
											"end": 14206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14074,
											"end": 14151,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14064,
											"end": 14152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14171,
											"end": 14175,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 14168,
											"end": 14169,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14161,
											"end": 14176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14185,
											"end": 14200,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14622,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 14212,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 14293,
											"end": 14294,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14275,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 14275,
											"end": 14295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14275,
											"end": 14295,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 14275,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14270,
											"end": 14295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14270,
											"end": 14295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14309,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 14327,
											"end": 14328,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14309,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 14309,
											"end": 14329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14309,
											"end": 14329,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 14309,
											"end": 14329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14304,
											"end": 14329,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14304,
											"end": 14329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14364,
											"end": 14365,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14361,
											"end": 14362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14357,
											"end": 14366,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14386,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 14404,
											"end": 14415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14386,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 14386,
											"end": 14416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14386,
											"end": 14416,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 14386,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14375,
											"end": 14416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14375,
											"end": 14416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14565,
											"end": 14566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14556,
											"end": 14563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14552,
											"end": 14567,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 14549,
											"end": 14550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14546,
											"end": 14568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14519,
											"end": 14528,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14499,
											"end": 14582,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 14476,
											"end": 14615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 14476,
											"end": 14615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14595,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 14595,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 14595,
											"end": 14613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14595,
											"end": 14613,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 14595,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14476,
											"end": 14615,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 14476,
											"end": 14615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14260,
											"end": 14622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14628,
											"end": 14819,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 14628,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14668,
											"end": 14671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 14705,
											"end": 14706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 14687,
											"end": 14707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14682,
											"end": 14707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14682,
											"end": 14707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 14739,
											"end": 14740,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 14721,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14764,
											"end": 14765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14761,
											"end": 14762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14757,
											"end": 14766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14750,
											"end": 14766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14750,
											"end": 14766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14785,
											"end": 14788,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14782,
											"end": 14783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14779,
											"end": 14789,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14776,
											"end": 14812,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14776,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 14776,
											"end": 14812,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14792,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 14792,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 14792,
											"end": 14810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14792,
											"end": 14810,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 14792,
											"end": 14810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14776,
											"end": 14812,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 14776,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14628,
											"end": 14819,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14628,
											"end": 14819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14628,
											"end": 14819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14628,
											"end": 14819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14628,
											"end": 14819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14825,
											"end": 15005,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 14825,
											"end": 15005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14873,
											"end": 14950,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14870,
											"end": 14871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14970,
											"end": 14974,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 14967,
											"end": 14968,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14960,
											"end": 14975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14994,
											"end": 14998,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14991,
											"end": 14992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14984,
											"end": 14999,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15011,
											"end": 15191,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 15011,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15059,
											"end": 15136,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15056,
											"end": 15057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15049,
											"end": 15137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15156,
											"end": 15160,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 15153,
											"end": 15154,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15146,
											"end": 15161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 15177,
											"end": 15178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15170,
											"end": 15185,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15197,
											"end": 15368,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 15197,
											"end": 15368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15236,
											"end": 15239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15259,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 15277,
											"end": 15282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15259,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 15259,
											"end": 15283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15259,
											"end": 15283,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 15259,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15250,
											"end": 15283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15250,
											"end": 15283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15305,
											"end": 15309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15298,
											"end": 15303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15295,
											"end": 15310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 15292,
											"end": 15333,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 15313,
											"end": 15331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15333,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 15292,
											"end": 15333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15360,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 15353,
											"end": 15358,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15362,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15342,
											"end": 15362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15342,
											"end": 15362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15197,
											"end": 15368,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15197,
											"end": 15368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15197,
											"end": 15368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15197,
											"end": 15368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15374,
											"end": 15556,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 15374,
											"end": 15556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15514,
											"end": 15548,
											"name": "PUSH",
											"source": 5,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 15510,
											"end": 15511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15498,
											"end": 15512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15491,
											"end": 15549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15374,
											"end": 15556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15374,
											"end": 15556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15562,
											"end": 15928,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 15562,
											"end": 15928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15704,
											"end": 15707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15725,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 15789,
											"end": 15791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15784,
											"end": 15787,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15725,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 15725,
											"end": 15792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15725,
											"end": 15792,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 15725,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15801,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 15890,
											"end": 15893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15801,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 15801,
											"end": 15894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15801,
											"end": 15894,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 15801,
											"end": 15894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15919,
											"end": 15921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15914,
											"end": 15917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15910,
											"end": 15922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15903,
											"end": 15922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15903,
											"end": 15922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15562,
											"end": 15928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15562,
											"end": 15928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15562,
											"end": 15928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15562,
											"end": 15928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15934,
											"end": 16353,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 15934,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16138,
											"end": 16140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16123,
											"end": 16141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16115,
											"end": 16141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16115,
											"end": 16141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16187,
											"end": 16196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16181,
											"end": 16185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16177,
											"end": 16197,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16173,
											"end": 16174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16162,
											"end": 16171,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16158,
											"end": 16175,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16151,
											"end": 16198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16215,
											"end": 16346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 16341,
											"end": 16345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16215,
											"end": 16346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 16215,
											"end": 16346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16215,
											"end": 16346,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 16215,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16207,
											"end": 16346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16207,
											"end": 16346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15934,
											"end": 16353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15934,
											"end": 16353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15934,
											"end": 16353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15934,
											"end": 16353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balancePairOf(address,address)": "eb55bc6b",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"balancePairOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tiny_boop.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"tiny_boop.sol\":{\"keccak256\":\"0x6efe2b1001ac64d17a946aaf0c55fce3cc9e384243d6acc9ecd24fc66bcb2935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b774eed39c89bc6b5f3b08c2c9d658ead41d27242d4e04744f261d79d57f0f\",\"dweb:/ipfs/QmbjnEqmZHZur9xjia1mocyDcx9Dssb3B4ekxHXud2BGTd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1231,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1235,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_balances_pair",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 1237,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1239,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1241,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1116
						],
						"SignedMath": [
							1221
						],
						"Strings": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 1117,
							"src": "126:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 1222,
							"src": "152:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:1",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Strings",
							"nameLocation": "228:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 29,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "242:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 27,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 32,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "302:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "518:625:1",
										"statements": [
											{
												"id": 78,
												"nodeType": "UncheckedBlock",
												"src": "528:609:1",
												"statements": [
													{
														"assignments": [
															41
														],
														"declarations": [
															{
																"constant": false,
																"id": 41,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "552:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 40,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 48,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 44,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "580:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 42,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "569:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1116_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:1",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 953,
																	"src": "569:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:1"
													},
													{
														"assignments": [
															50
														],
														"declarations": [
															{
																"constant": false,
																"id": 50,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "604:20:1",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 49,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 55,
														"initialValue": {
															"arguments": [
																{
																	"id": 53,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "638:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 51,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:1"
													},
													{
														"assignments": [
															57
														],
														"declarations": [
															{
																"constant": false,
																"id": 57,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "659:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 56,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 58,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:1",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:1"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:1"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 50,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:1",
																"valueSize": 1
															},
															{
																"declaration": 41,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:1",
																"valueSize": 1
															}
														],
														"id": 59,
														"nodeType": "InlineAssembly",
														"src": "731:76:1"
													},
													{
														"body": {
															"id": 74,
															"nodeType": "Block",
															"src": "833:267:1",
															"statements": [
																{
																	"expression": {
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:1",
																		"subExpression": {
																			"id": 61,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "851:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 63,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:1"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:1",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:1"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:1"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:1"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 29,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 57,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 35,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:1",
																			"valueSize": 1
																		}
																	],
																	"id": 64,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:1"
																},
																{
																	"expression": {
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 65,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "1035:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 68,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 69,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "1068:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 73,
																	"nodeType": "IfStatement",
																	"src": "1064:21:1",
																	"trueBody": {
																		"id": 72,
																		"nodeType": "Break",
																		"src": "1080:5:1"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 75,
														"nodeType": "WhileStatement",
														"src": "820:280:1"
													},
													{
														"expression": {
															"id": 76,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1120:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 39,
														"id": 77,
														"nodeType": "Return",
														"src": "1113:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "503:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:1"
									},
									"scope": 250,
									"src": "447:696:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1313:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 92,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "1354:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 96,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:1",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 83,
																					"src": "1400:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 99,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1221,
																					"src": "1385:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1221_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:1",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1220,
																				"src": "1385:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 98,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			80,
																			108
																		],
																		"referencedDeclaration": 80,
																		"src": "1376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 90,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:1",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 88,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 87,
												"id": 106,
												"nodeType": "Return",
												"src": "1323:86:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:1",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1261:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 82,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1298:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:1"
									},
									"scope": 250,
									"src": "1243:173:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1595:100:1",
										"statements": [
											{
												"id": 126,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 117,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1648:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 120,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 111,
																				"src": "1667:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 118,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "1655:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1116_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:1",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1076,
																			"src": "1655:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 116,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	128,
																	204,
																	224
																],
																"referencedDeclaration": 204,
																"src": "1636:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 115,
														"id": 125,
														"nodeType": "Return",
														"src": "1629:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1542:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1580:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:1"
									},
									"scope": 250,
									"src": "1521:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1908:347:1",
										"statements": [
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "1918:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 138,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 143,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1954:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 140,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 149,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1975:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 151,
														"indexExpression": {
															"hexValue": "30",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:1"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 155,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 157,
														"indexExpression": {
															"hexValue": "31",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:1"
											},
											{
												"body": {
													"id": 189,
													"nodeType": "Block",
													"src": "2070:83:1",
													"statements": [
														{
															"expression": {
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 175,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "2084:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 177,
																	"indexExpression": {
																		"id": 176,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "2091:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 178,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "2096:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 182,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 179,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "2105:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 184,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:1"
														},
														{
															"expression": {
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "2131:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 169,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "2058:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"initializationExpression": {
													"assignments": [
														162
													],
													"declarations": [
														{
															"constant": false,
															"id": 162,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 190,
															"src": "2030:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 161,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 168,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 164,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2046:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:1"
												},
												"loopExpression": {
													"expression": {
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:1",
														"subExpression": {
															"id": 172,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2067:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2170:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 198,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 137,
												"id": 202,
												"nodeType": "Return",
												"src": "2227:21:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1839:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1893:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:1"
									},
									"scope": 250,
									"src": "1818:437:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2480:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 217,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "2525:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 215,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 213,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 220,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2533:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 212,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															128,
															204,
															224
														],
														"referencedDeclaration": 204,
														"src": "2497:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 211,
												"id": 222,
												"nodeType": "Return",
												"src": "2490:59:1"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:1",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 209,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"scope": 250,
									"src": "2407:149:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2711:66:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 237,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "2744:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 235,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 234,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 243,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2767:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 241,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 240,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 233,
												"id": 247,
												"nodeType": "Return",
												"src": "2721:49:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:1",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2648:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2665:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2705:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:1"
									},
									"scope": 250,
									"src": "2633:144:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "220:2559:1",
							"usedErrors": []
						}
					],
					"src": "101:2679:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1116
						]
					},
					"id": 1117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1116,
							"linearizedBaseContracts": [
								1116
							],
							"name": "Math",
							"nameLocation": "210:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 257,
									"members": [
										{
											"id": 254,
											"name": "Down",
											"nameLocation": "245:4:2",
											"nodeType": "EnumValue",
											"src": "245:4:2"
										},
										{
											"id": 255,
											"name": "Up",
											"nameLocation": "287:2:2",
											"nodeType": "EnumValue",
											"src": "287:2:2"
										},
										{
											"id": 256,
											"name": "Zero",
											"nameLocation": "318:4:2",
											"nodeType": "EnumValue",
											"src": "318:4:2"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:2",
									"nodeType": "EnumDefinition",
									"src": "221:122:2"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "480:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 267,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 268,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "501:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "509:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:2",
													"trueExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "505:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 273,
												"nodeType": "Return",
												"src": "490:20:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "426:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "437:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:2"
									},
									"scope": 1116,
									"src": "413:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "655:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 285,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "672:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 286,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "676:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 289,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "684:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:2",
													"trueExpression": {
														"id": 288,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "680:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 291,
												"nodeType": "Return",
												"src": "665:20:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "601:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "612:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "646:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:2"
									},
									"scope": 1116,
									"src": "588:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "876:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 303,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "931:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 304,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "935:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 306,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 307,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "941:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 308,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "945:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 310,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 314,
												"nodeType": "Return",
												"src": "923:28:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "822:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 1116,
									"src": "805:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1228:123:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 326,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1316:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 330,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1330:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 334,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "1339:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 339,
												"nodeType": "Return",
												"src": "1309:35:2"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1174:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1185:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:2"
									},
									"scope": 1116,
									"src": "1157:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1765:4115:2",
										"statements": [
											{
												"id": 462,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:2",
												"statements": [
													{
														"assignments": [
															354
														],
														"declarations": [
															{
																"constant": false,
																"id": 354,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "2096:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 353,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 355,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:2"
													},
													{
														"assignments": [
															357
														],
														"declarations": [
															{
																"constant": false,
																"id": 357,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "2168:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 358,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:2"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:2"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:2",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:2",
																"valueSize": 1
															},
															{
																"declaration": 344,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:2",
																"valueSize": 1
															},
															{
																"declaration": 344,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:2",
																"valueSize": 1
															},
															{
																"declaration": 346,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:2",
																"valueSize": 1
															},
															{
																"declaration": 346,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:2",
																"valueSize": 1
															}
														],
														"id": 359,
														"nodeType": "InlineAssembly",
														"src": "2239:166:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "2486:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 368,
														"nodeType": "IfStatement",
														"src": "2482:368:2",
														"trueBody": {
															"id": 367,
															"nodeType": "Block",
															"src": "2498:352:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 363,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "2816:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 364,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "2824:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 352,
																	"id": 366,
																	"nodeType": "Return",
																	"src": "2809:26:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 370,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2960:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 371,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "2974:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 369,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 375,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:2"
													},
													{
														"assignments": [
															377
														],
														"declarations": [
															{
																"constant": false,
																"id": 377,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "3261:17:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 376,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 378,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:2"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:2"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:2"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:2"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 348,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:2",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:2",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:2",
																"valueSize": 1
															},
															{
																"declaration": 377,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:2",
																"valueSize": 1
															},
															{
																"declaration": 377,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:2",
																"valueSize": 1
															},
															{
																"declaration": 377,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:2",
																"valueSize": 1
															},
															{
																"declaration": 344,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:2",
																"valueSize": 1
															},
															{
																"declaration": 346,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:2",
																"valueSize": 1
															}
														],
														"id": 379,
														"nodeType": "InlineAssembly",
														"src": "3292:300:2"
													},
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "3899:12:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 389,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "3914:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:2",
																			"subExpression": {
																				"id": 383,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "3930:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:2"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:2",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:2"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:2"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:2"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 348,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:2",
																"valueSize": 1
															},
															{
																"declaration": 348,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:2",
																"valueSize": 1
															},
															{
																"declaration": 354,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:2",
																"valueSize": 1
															},
															{
																"declaration": 381,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:2",
																"valueSize": 1
															}
														],
														"id": 390,
														"nodeType": "InlineAssembly",
														"src": "3960:371:2"
													},
													{
														"expression": {
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "4397:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 392,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "4406:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 393,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "4414:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 396,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:2"
													},
													{
														"assignments": [
															398
														],
														"declarations": [
															{
																"constant": false,
																"id": 398,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "4736:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 397,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 400,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "4759:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 402,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:2"
													},
													{
														"expression": {
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 406,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4992:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5007:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 409,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5021:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:2"
													},
													{
														"expression": {
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 414,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5061:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5076:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 417,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5090:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 421,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:2"
													},
													{
														"expression": {
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 422,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5131:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 424,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5146:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 425,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5160:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 429,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:2"
													},
													{
														"expression": {
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 430,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5201:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 432,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5216:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 433,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5230:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 437,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:2"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 438,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5286:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 441,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5300:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:2"
													},
													{
														"expression": {
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5342:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 448,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "5357:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 449,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5371:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 453,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:2"
													},
													{
														"expression": {
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 454,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "5812:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 455,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "5821:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 456,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "5829:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 459,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:2"
													},
													{
														"expression": {
															"id": 460,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5857:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 352,
														"id": 461,
														"nodeType": "Return",
														"src": "5850:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:2",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1683:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1694:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1705:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1749:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:2"
									},
									"scope": 1116,
									"src": "1667:4213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "6122:189:2",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "6132:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 482,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "6156:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 483,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "6159:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 484,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "6162:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															464,
															508
														],
														"referencedDeclaration": 464,
														"src": "6149:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$257",
															"typeString": "enum Math.Rounding"
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 487,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6188:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$257",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 488,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "6200:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:2",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 255,
															"src": "6200:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$257",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 492,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "6222:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 493,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "6225:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 494,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "6228:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 491,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "6184:98:2",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "6246:36:2",
													"statements": [
														{
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 499,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6260:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 505,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "6298:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 478,
												"id": 506,
												"nodeType": "Return",
												"src": "6291:13:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:2",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6028:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6039:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6050:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6071:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 472,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "6071:8:2"
													},
													"referencedDeclaration": 257,
													"src": "6071:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "6113:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:2"
									},
									"scope": 1116,
									"src": "6012:299:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "6587:1585:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "6601:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "6597:45:2",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "6609:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 515,
															"id": 520,
															"nodeType": "Return",
															"src": "6623:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "7321:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 523,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 527,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 511,
																			"src": "7349:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 526,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			788,
																			824
																		],
																		"referencedDeclaration": 788,
																		"src": "7344:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 531,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:2"
											},
											{
												"id": 618,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:2",
												"statements": [
													{
														"expression": {
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 534,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7782:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 535,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7792:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 536,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7801:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 537,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7805:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 544,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:2"
													},
													{
														"expression": {
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 545,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7831:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 546,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7841:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 547,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7850:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 548,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7854:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 555,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:2"
													},
													{
														"expression": {
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7880:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 557,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7890:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 558,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7899:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 559,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7903:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 562,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 566,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:2"
													},
													{
														"expression": {
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 567,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7929:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 568,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7939:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 569,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7948:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 570,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "7952:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 573,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 577,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:2"
													},
													{
														"expression": {
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "7978:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 579,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "7988:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 580,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "7997:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 581,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "8001:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 588,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:2"
													},
													{
														"expression": {
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 589,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "8027:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 590,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "8037:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 591,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "8046:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 592,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "8050:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:2"
													},
													{
														"expression": {
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "8076:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 601,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "8086:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 602,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "8095:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 603,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "8099:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 606,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 610,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 612,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "8136:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 613,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "8144:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 614,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "8148:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 611,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "8132:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 515,
														"id": 617,
														"nodeType": "Return",
														"src": "8125:30:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:2",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6544:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6578:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:2"
									},
									"scope": 1116,
									"src": "6530:1642:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8348:161:2",
										"statements": [
											{
												"id": 654,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:2",
												"statements": [
													{
														"assignments": [
															632
														],
														"declarations": [
															{
																"constant": false,
																"id": 632,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 654,
																"src": "8382:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 636,
														"initialValue": {
															"arguments": [
																{
																	"id": 634,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8404:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 633,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	620,
																	656
																],
																"referencedDeclaration": 620,
																"src": "8399:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "8427:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 638,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "8437:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 639,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "8449:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "8449:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 642,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 632,
																						"src": "8464:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 643,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 632,
																						"src": "8473:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 645,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 623,
																					"src": "8482:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 651,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 630,
														"id": 653,
														"nodeType": "Return",
														"src": "8420:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:2",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8286:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8297:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 624,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "8297:8:2"
													},
													"referencedDeclaration": 257,
													"src": "8297:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8339:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:2"
									},
									"scope": 1116,
									"src": "8272:237:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8694:922:2",
										"statements": [
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "8704:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 664,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"hexValue": "30",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:2"
											},
											{
												"id": 784,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "8760:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 682,
														"nodeType": "IfStatement",
														"src": "8756:99:2",
														"trueBody": {
															"id": 681,
															"nodeType": "Block",
															"src": "8778:77:2",
															"statements": [
																{
																	"expression": {
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 673,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "8796:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:2"
																},
																{
																	"expression": {
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 677,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "8827:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 680,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 683,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "8872:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 697,
														"nodeType": "IfStatement",
														"src": "8868:96:2",
														"trueBody": {
															"id": 696,
															"nodeType": "Block",
															"src": "8889:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "8907:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:2"
																},
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "8937:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "8981:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 712,
														"nodeType": "IfStatement",
														"src": "8977:96:2",
														"trueBody": {
															"id": 711,
															"nodeType": "Block",
															"src": "8998:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9016:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 706,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:2"
																},
																{
																	"expression": {
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9046:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 710,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9090:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 727,
														"nodeType": "IfStatement",
														"src": "9086:96:2",
														"trueBody": {
															"id": 726,
															"nodeType": "Block",
															"src": "9107:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9125:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 721,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:2"
																},
																{
																	"expression": {
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9155:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 725,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9199:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 742,
														"nodeType": "IfStatement",
														"src": "9195:93:2",
														"trueBody": {
															"id": 741,
															"nodeType": "Block",
															"src": "9215:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9233:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 736,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:2"
																},
																{
																	"expression": {
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9262:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 740,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9305:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 757,
														"nodeType": "IfStatement",
														"src": "9301:93:2",
														"trueBody": {
															"id": 756,
															"nodeType": "Block",
															"src": "9321:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9339:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 751,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:2"
																},
																{
																	"expression": {
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9368:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 755,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9411:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 772,
														"nodeType": "IfStatement",
														"src": "9407:93:2",
														"trueBody": {
															"id": 771,
															"nodeType": "Block",
															"src": "9427:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 763,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "9445:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 766,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:2"
																},
																{
																	"expression": {
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9474:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 770,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "9517:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 783,
														"nodeType": "IfStatement",
														"src": "9513:64:2",
														"trueBody": {
															"id": 782,
															"nodeType": "Block",
															"src": "9533:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 778,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "9551:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 781,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 785,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 665,
													"src": "9603:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 786,
												"nodeType": "Return",
												"src": "9596:13:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:2",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8647:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:2"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8685:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:2"
									},
									"scope": 1116,
									"src": "8633:983:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "9849:165:2",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:2",
												"statements": [
													{
														"assignments": [
															800
														],
														"declarations": [
															{
																"constant": false,
																"id": 800,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 822,
																"src": "9883:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 799,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 804,
														"initialValue": {
															"arguments": [
																{
																	"id": 802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "9905:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 801,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	788,
																	824
																],
																"referencedDeclaration": 788,
																"src": "9900:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "9932:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 806,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "9942:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 807,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "9954:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 808,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "9954:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 812,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 810,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 811,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 800,
																						"src": "9974:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 813,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "9983:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 798,
														"id": 821,
														"nodeType": "Return",
														"src": "9925:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:2",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9783:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9798:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 792,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "9798:8:2"
													},
													"referencedDeclaration": 257,
													"src": "9798:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:2"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9840:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:2"
									},
									"scope": 1116,
									"src": "9769:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "10201:854:2",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "10211:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"hexValue": "30",
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:2"
											},
											{
												"id": 949,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10267:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 852,
														"nodeType": "IfStatement",
														"src": "10263:103:2",
														"trueBody": {
															"id": 851,
															"nodeType": "Block",
															"src": "10286:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 841,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10304:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 846,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:2"
																},
																{
																	"expression": {
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10339:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 850,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10383:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 869,
														"nodeType": "IfStatement",
														"src": "10379:103:2",
														"trueBody": {
															"id": 868,
															"nodeType": "Block",
															"src": "10402:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 858,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10420:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:2"
																},
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10455:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10499:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 886,
														"nodeType": "IfStatement",
														"src": "10495:103:2",
														"trueBody": {
															"id": 885,
															"nodeType": "Block",
															"src": "10518:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10536:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 880,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:2"
																},
																{
																	"expression": {
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10571:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 884,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 887,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10615:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "10611:100:2",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "10633:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10651:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:2"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10685:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10728:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 920,
														"nodeType": "IfStatement",
														"src": "10724:100:2",
														"trueBody": {
															"id": 919,
															"nodeType": "Block",
															"src": "10746:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10764:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 914,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:2"
																},
																{
																	"expression": {
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 915,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10798:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 918,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10841:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 937,
														"nodeType": "IfStatement",
														"src": "10837:100:2",
														"trueBody": {
															"id": 936,
															"nodeType": "Block",
															"src": "10859:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10877:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:2"
																},
																{
																	"expression": {
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 932,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10911:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 935,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "10954:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "10950:66:2",
														"trueBody": {
															"id": 947,
															"nodeType": "Block",
															"src": "10972:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "10990:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 950,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "11042:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 831,
												"id": 951,
												"nodeType": "Return",
												"src": "11035:13:2"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:2",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10154:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10192:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:2"
									},
									"scope": 1116,
									"src": "10139:916:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "11290:167:2",
										"statements": [
											{
												"id": 987,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:2",
												"statements": [
													{
														"assignments": [
															965
														],
														"declarations": [
															{
																"constant": false,
																"id": 965,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 987,
																"src": "11324:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 964,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 969,
														"initialValue": {
															"arguments": [
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "11347:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 966,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	953,
																	989
																],
																"referencedDeclaration": 953,
																"src": "11341:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 970,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "11374:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 971,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "11384:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 972,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "11396:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "11396:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 975,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 976,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 965,
																						"src": "11417:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 978,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "11426:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 984,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 963,
														"id": 986,
														"nodeType": "Return",
														"src": "11367:73:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "11224:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "11239:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "11239:8:2"
													},
													"referencedDeclaration": 257,
													"src": "11239:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "11281:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:2"
									},
									"scope": 1116,
									"src": "11209:248:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "11771:600:2",
										"statements": [
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "11781:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 997,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"hexValue": "30",
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:2"
											},
											{
												"id": 1072,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1001,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "11837:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1015,
														"nodeType": "IfStatement",
														"src": "11833:98:2",
														"trueBody": {
															"id": 1014,
															"nodeType": "Block",
															"src": "11855:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "11873:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1009,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:2"
																},
																{
																	"expression": {
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1010,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "11904:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1016,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "11948:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1030,
														"nodeType": "IfStatement",
														"src": "11944:95:2",
														"trueBody": {
															"id": 1029,
															"nodeType": "Block",
															"src": "11965:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1021,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "11983:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:2"
																},
																{
																	"expression": {
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1025,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12013:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1028,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1031,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "12056:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1045,
														"nodeType": "IfStatement",
														"src": "12052:95:2",
														"trueBody": {
															"id": 1044,
															"nodeType": "Block",
															"src": "12073:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "12091:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1039,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:2"
																},
																{
																	"expression": {
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1040,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12121:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1043,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "12164:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1060,
														"nodeType": "IfStatement",
														"src": "12160:95:2",
														"trueBody": {
															"id": 1059,
															"nodeType": "Block",
															"src": "12181:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1051,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "12199:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1054,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:2"
																},
																{
																	"expression": {
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1055,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12229:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1058,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "12272:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1071,
														"nodeType": "IfStatement",
														"src": "12268:64:2",
														"trueBody": {
															"id": 1070,
															"nodeType": "Block",
															"src": "12288:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1066,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "12306:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1069,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1073,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 998,
													"src": "12358:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 996,
												"id": 1074,
												"nodeType": "Return",
												"src": "12351:13:2"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:2",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "11724:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:2"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "11762:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:2"
									},
									"scope": 1116,
									"src": "11708:663:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "12608:174:2",
										"statements": [
											{
												"id": 1113,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:2",
												"statements": [
													{
														"assignments": [
															1088
														],
														"declarations": [
															{
																"constant": false,
																"id": 1088,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1113,
																"src": "12642:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1087,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1092,
														"initialValue": {
															"arguments": [
																{
																	"id": 1090,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "12666:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1089,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1076,
																	1115
																],
																"referencedDeclaration": 1076,
																"src": "12659:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "12693:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$257",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1094,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "12703:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1095,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 257,
																						"src": "12715:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$257_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:2",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 255,
																					"src": "12715:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$257",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1101,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1099,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1088,
																									"src": "12736:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1100,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1102,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1104,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "12751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1086,
														"id": 1112,
														"nodeType": "Return",
														"src": "12686:79:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:2",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "12542:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "12557:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$257",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1080,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 257,
														"src": "12557:8:2"
													},
													"referencedDeclaration": 257,
													"src": "12557:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$257",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:2"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "12599:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:2"
									},
									"scope": 1116,
									"src": "12526:256:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1117,
							"src": "202:12582:2",
							"usedErrors": []
						}
					],
					"src": "103:12682:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1221
						]
					},
					"id": 1222,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1119,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:3",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1221,
							"linearizedBaseContracts": [
								1221
							],
							"name": "SignedMath",
							"nameLocation": "223:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "375:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1129,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "392:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1130,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "396:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "404:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:3",
													"trueExpression": {
														"id": 1132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "400:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1135,
												"nodeType": "Return",
												"src": "385:20:3"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:3",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "324:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1121,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "334:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:3"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "367:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1126,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:3"
									},
									"scope": 1221,
									"src": "311:101:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "554:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1147,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "571:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1148,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "575:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1151,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:3",
													"trueExpression": {
														"id": 1150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "579:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1153,
												"nodeType": "Return",
												"src": "564:20:3"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:3",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "503:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "513:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:3"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "546:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1144,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:3"
									},
									"scope": 1221,
									"src": "490:101:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "796:162:3",
										"statements": [
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "858:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1165,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "870:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1168,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "874:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1171,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "881:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1172,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "885:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1185,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "930:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1184,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1183,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1181,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1190,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1158,
																				"src": "944:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1191,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "948:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1197,
												"nodeType": "Return",
												"src": "903:48:3"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:3",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "745:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1157,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "755:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1159,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:3"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "788:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1162,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:3"
									},
									"scope": 1221,
									"src": "728:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1102:158:3",
										"statements": [
											{
												"id": 1218,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "1227:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:3",
																		"subExpression": {
																			"id": 1213,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "1241:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:3",
																	"trueExpression": {
																		"id": 1212,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "1236:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1207,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1206,
														"id": 1217,
														"nodeType": "Return",
														"src": "1212:31:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:3",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1060:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1201,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:3"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1093:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:3"
									},
									"scope": 1221,
									"src": "1047:213:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1222,
							"src": "215:1047:3",
							"usedErrors": []
						}
					],
					"src": "109:1154:3"
				},
				"id": 3
			},
			"tiny_boop.sol": {
				"ast": {
					"absolutePath": "tiny_boop.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							1532
						],
						"Math": [
							1116
						],
						"SignedMath": [
							1221
						],
						"Strings": [
							250
						]
					},
					"id": 1533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1223,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "454:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1533,
							"sourceUnit": 22,
							"src": "479:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1533,
							"sourceUnit": 251,
							"src": "531:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1226,
										"name": "Context",
										"nameLocations": [
											"602:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "602:7:4"
									},
									"id": 1227,
									"nodeType": "InheritanceSpecifier",
									"src": "602:7:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1532,
							"linearizedBaseContracts": [
								1532,
								21
							],
							"name": "ERC20",
							"nameLocation": "593:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1231,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "678:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "642:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1230,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1228,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "650:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "642:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "661:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1235,
									"mutability": "mutable",
									"name": "_balances_pair",
									"nameLocation": "755:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "719:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 1234,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1232,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "728:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "719:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "738:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1237,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "809:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "793:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1239,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "843:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "828:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1238,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "828:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1241,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "869:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "854:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1240,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "854:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1249,
									"name": "Transfer",
									"nameLocation": "902:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "927:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "911:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "949:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "933:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "961:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "953:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:57:4"
									},
									"src": "896:72:4"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1007:62:4",
										"statements": [
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "1017:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54696e7920426f6f70",
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1025:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c956f90c4d064d9cbc007e2ba1fd01201eadf23364c22e920fffcbd5105fb39b",
															"typeString": "literal_string \"Tiny Boop\""
														},
														"value": "Tiny Boop"
													},
													"src": "1017:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "1017:19:4"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "1046:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "426f6f70",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1056:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_231adb773b657a6e5c7feb999129cc566a88d23ec391cc5a92ec77dc3483ed67",
															"typeString": "literal_string \"Boop\""
														},
														"value": "Boop"
													},
													"src": "1046:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "1046:16:4"
											}
										]
									},
									"id": 1261,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:2:4"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:4"
									},
									"scope": 1532,
									"src": "993:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "1154:29:4",
										"statements": [
											{
												"expression": {
													"id": 1266,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1239,
													"src": "1171:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1267,
												"nodeType": "Return",
												"src": "1164:12:4"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1103:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:4"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1139:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1139:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:15:4"
									},
									"scope": 1532,
									"src": "1094:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "1252:31:4",
										"statements": [
											{
												"expression": {
													"id": 1274,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1241,
													"src": "1269:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1275,
												"nodeType": "Return",
												"src": "1262:14:4"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1199:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:2:4"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "1237:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:4"
									},
									"scope": 1532,
									"src": "1190:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "1345:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1362:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 1281,
												"id": 1283,
												"nodeType": "Return",
												"src": "1355:8:4"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1298:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:4"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1338:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1279,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1338:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:7:4"
									},
									"scope": 1532,
									"src": "1289:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "1437:36:4",
										"statements": [
											{
												"expression": {
													"id": 1290,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1237,
													"src": "1454:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1291,
												"nodeType": "Return",
												"src": "1447:19:4"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1385:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:2:4"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:9:4"
									},
									"scope": 1532,
									"src": "1376:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "1585:638:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1631:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1649:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1304,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1641:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1641:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1631:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6f702053656e646572206164647265737320696e76616c6964",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1653:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																"typeString": "literal_string \"Boop Sender address invalid\""
															},
															"value": "Boop Sender address invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																"typeString": "literal_string \"Boop Sender address invalid\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1623:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1623:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1313,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "1701:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1713:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1713:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1713:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1701:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6f70205265636569766572206164647265737320696e76616c6964",
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1725:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																"typeString": "literal_string \"Boop Receiver address invalid\""
															},
															"value": "Boop Receiver address invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																"typeString": "literal_string \"Boop Receiver address invalid\""
															}
														],
														"id": 1312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1693:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "1693:64:4"
											},
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "_string_sender",
														"nameLocation": "1805:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1791:28:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1322,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1791:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:28:4"
											},
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "_string_to",
														"nameLocation": "1843:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1829:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1325,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"nodeType": "VariableDeclarationStatement",
												"src": "1829:24:4"
											},
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "_pair_value",
														"nameLocation": "1877:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1863:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1328,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"nodeType": "VariableDeclarationStatement",
												"src": "1863:25:4"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "_string_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "1928:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1334,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1965:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1332,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1945:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1953:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "1945:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1945:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1928:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "1928:44:4"
											},
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1338,
														"name": "_string_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "1982:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1341,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2015:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1339,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1995:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2003:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "1995:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1995:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1982:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "1982:42:4"
											},
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1345,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "2035:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1350,
																		"name": "_string_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "2073:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "5f5f",
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		},
																		"value": "__"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		}
																	],
																	"expression": {
																		"id": 1348,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2056:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2060:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2056:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2056:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2049:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1346,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2049:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2049:45:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2035:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "2035:59:4"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "2104:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1361,
																		"name": "_pair_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "2142:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "_string_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "2154:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1359,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2125:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2129:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2125:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2118:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1357,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2118:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2118:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2104:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2104:62:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1367,
														"name": "_balances_pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2184:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 1369,
													"indexExpression": {
														"id": 1368,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "2199:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1370,
												"nodeType": "Return",
												"src": "2177:34:4"
											}
										]
									},
									"functionSelector": "eb55bc6b",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balancePairOf",
									"nameLocation": "1505:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1527:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1519:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1543:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1535:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:34:4"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:9:4"
									},
									"scope": 1532,
									"src": "1496:727:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "2323:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1379,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "2340:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1381,
													"indexExpression": {
														"id": 1380,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "2350:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2340:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1382,
												"nodeType": "Return",
												"src": "2333:25:4"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2258:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2276:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2268:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:4"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:4"
									},
									"scope": 1532,
									"src": "2249:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "2478:104:4",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2496:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "2488:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1393,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2488:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1395,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2504:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2488:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "2536:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2543:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "2547:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "2526:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "2526:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2571:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1392,
												"id": 1405,
												"nodeType": "Return",
												"src": "2564:11:4"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2411:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2428:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2420:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2440:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2432:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:28:4"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "2472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:6:4"
									},
									"scope": 1532,
									"src": "2402:180:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "2696:1116:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "2736:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2744:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2744:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2736:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2756:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "2728:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2814:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2828:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2820:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2820:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2820:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2814:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2832:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2806:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "2806:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "2927:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1440,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2941:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2945:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2941:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2933:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2933:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2933:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2927:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865792120596f752063616e27742074727920746f20626f6f7020796f757273656c6621203e3a63",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2954:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																"typeString": "literal_string \"Hey! You can't try to boop yourself! >:c\""
															},
															"value": "Hey! You can't try to boop yourself! >:c"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																"typeString": "literal_string \"Hey! You can't try to boop yourself! >:c\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2919:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2919:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "2919:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3015:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3015:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206d757374206265206265747765656e203120746f2033",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3028:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															},
															"value": "Calm your crazy paw! Boop Value must be between 1 to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															}
														],
														"id": 1447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3007:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "3007:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1455,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3103:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "33",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3103:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206d757374206265206265747765656e203120746f2033",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3116:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															},
															"value": "Calm your crazy paw! Boop Value must be between 1 to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3095:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3095:78:4"
											},
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "_string_sender",
														"nameLocation": "3221:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "3207:28:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1461,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3207:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"nodeType": "VariableDeclarationStatement",
												"src": "3207:28:4"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "_string_to",
														"nameLocation": "3259:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "3245:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1464,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3245:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"nodeType": "VariableDeclarationStatement",
												"src": "3245:24:4"
											},
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "_pair_value",
														"nameLocation": "3293:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "3279:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1467,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3279:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:25:4"
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1470,
														"name": "_string_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "3337:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1473,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3374:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3378:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3374:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1471,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "3354:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3362:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "3354:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3354:31:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3337:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "3337:48:4"
											},
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "_string_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "3395:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1481,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "3428:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1479,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "3408:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$250_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3416:11:4",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "3408:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3408:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3395:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "3395:36:4"
											},
											{
												"expression": {
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1485,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "3441:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1490,
																		"name": "_string_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1462,
																		"src": "3479:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "5f5f",
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3494:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		},
																		"value": "__"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		}
																	],
																	"expression": {
																		"id": 1488,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3462:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3466:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3462:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3462:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3455:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1486,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3455:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3455:45:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3441:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "3441:59:4"
											},
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1496,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "3510:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1501,
																		"name": "_pair_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "3548:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1502,
																		"name": "_string_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "3560:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1499,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3531:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3535:12:4",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3531:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3531:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3524:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1497,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3524:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3524:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3510:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "3510:62:4"
											},
											{
												"id": 1523,
												"nodeType": "UncheckedBlock",
												"src": "3602:145:4",
												"statements": [
													{
														"expression": {
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1507,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "3626:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1508,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3642:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1510,
														"nodeType": "ExpressionStatement",
														"src": "3626:22:4"
													},
													{
														"expression": {
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1511,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "3662:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1513,
																"indexExpression": {
																	"id": 1512,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "3672:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3662:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1514,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3679:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3662:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1516,
														"nodeType": "ExpressionStatement",
														"src": "3662:23:4"
													},
													{
														"expression": {
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1517,
																	"name": "_balances_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "3699:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																		"typeString": "mapping(string memory => uint256)"
																	}
																},
																"id": 1519,
																"indexExpression": {
																	"id": 1518,
																	"name": "_pair_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "3714:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3699:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1520,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "3730:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3699:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1522,
														"nodeType": "ExpressionStatement",
														"src": "3699:37:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1525,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3787:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3793:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3797:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1524,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "3778:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "EmitStatement",
												"src": "3773:31:4"
											}
										]
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2597:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2624:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2616:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2666:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2658:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:72:4"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:4"
									},
									"scope": 1532,
									"src": "2588:1224:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1533,
							"src": "584:3231:4",
							"usedErrors": []
						}
					],
					"src": "454:3362:4"
				},
				"id": 4
			}
		}
	}
}