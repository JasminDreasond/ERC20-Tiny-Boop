{
	"id": "b06996388bb8445bdafedb9bb9dd7eed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"tiny_boop.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\n/*\n\n    Boop Contract made by Yasmin Seidel (JasminDreasond)\n    WARNING! This contract is designed to be fun! Don't try to use boops as a financial system!!\n\n    This is a better version from the BSC version (made by me too).\n    The original version url is here:\n\n    https://bscscan.com/token/0x00343061bdbc79ad64018fb4b3aed2e1701b0e24#code\n\n*/\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ERC20 is Context {\n    \n    // User Balances\n    mapping(address => uint256) private _balances;\n\n    // Boop Pair Balance\n    mapping (string => uint256) public _balances_pair;\n\n    // Tiny Data\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    // Event\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // Constructor\n    constructor() {\n        _name = 'Tiny Boop';\n        _symbol = 'Boop';\n    }\n\n    // Information\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return 1;\n    }\n\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    // Boop Pair\n    function balancePairOf(address sender, address receiver) external view returns (uint256) {\n\n        // Detect Address.\n        require(sender != address(0), \"Boop Sender address invalid\");\n        require(receiver != address(0), \"Boop Receiver address invalid\");\n\n        // Base Values\n        string memory _string_sender;\n        string memory _string_to;\n        string memory _pair_value;\n\n        // Convert to String\n        _string_sender = Strings.toHexString(sender);\n        _string_to = Strings.toHexString(receiver);\n\n        _pair_value = string(abi.encodePacked(_string_sender,'__'));\n        _pair_value = string(abi.encodePacked(_pair_value,_string_to));\n\n        return _balances_pair[_pair_value];\n    \n    }\n\n    // Token Viewer\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    // Transfer and boop alias\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n\n        // Validator\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        // You can only send 3 boops.\n        require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\");\n        require(amount >= 1, \"Calm your crazy paw! Boop Value must be between 1 to 3\");\n        require(amount <= 3, \"Calm your crazy paw! Boop Value must be between 1 to 3\");\n\n        // Base Values\n        string memory _string_sender;\n        string memory _string_to;\n        string memory _pair_value;\n\n        // Pair Value\n        _string_sender = Strings.toHexString(msg.sender);\n        _string_to = Strings.toHexString(to);\n        _pair_value = string(abi.encodePacked(_string_sender,'__'));\n        _pair_value = string(abi.encodePacked(_pair_value,_string_to));\n\n        // Execute\n        unchecked {\n            _totalSupply += amount;\n            _balances[to] += amount;\n            _balances_pair[_pair_value] += amount;\n        }\n\n        // Emit\n        emit Transfer(from, to, amount);\n\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tiny_boop.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "_balances_pair",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "balancePairOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tiny_boop.sol\":660:3890  contract ERC20 is Context {... */\n  mstore(0x40, 0x80)\n    /* \"tiny_boop.sol\":1068:1144  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"tiny_boop.sol\":1092:1111  _name = 'Tiny Boop' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x54696e7920426f6f700000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"tiny_boop.sol\":1092:1097  _name */\n  0x03\n    /* \"tiny_boop.sol\":1092:1111  _name = 'Tiny Boop' */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"tiny_boop.sol\":1121:1137  _symbol = 'Boop' */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x426f6f7000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"tiny_boop.sol\":1121:1128  _symbol */\n  0x04\n    /* \"tiny_boop.sol\":1121:1137  _symbol = 'Boop' */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"tiny_boop.sol\":660:3890  contract ERC20 is Context {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:106   */\ntag_8:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_9:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_10:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_11:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_33:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_35\n  tag_10\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":714:798   */\ntag_34:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_12:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_13:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_14:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_15:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_14\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_16:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_17:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_18:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1818:1852   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1800:1853   */\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_19:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_20:\n    /* \"#utility.yul\":2056:2095   */\n  tag_50\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_21:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_22:\n    /* \"#utility.yul\":2377:2409   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_23:\n    /* \"#utility.yul\":2555:2675   */\ntag_58:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_61\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_24:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_64\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_12\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2906:2935   */\n  tag_65\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_66:\n    /* \"#utility.yul\":3133:3213   */\n  tag_67\n    /* \"#utility.yul\":3189:3211   */\n  tag_68\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_63:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_25:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_26:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_71\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_27:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_73\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_5:\n    /* \"#utility.yul\":3950:3987   */\n  tag_75\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_77\n  tag_9\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4038:4094   */\ntag_76:\n    /* \"#utility.yul\":4118:4156   */\n  tag_78\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4203:4270   */\n  tag_79\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_82:\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_27\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_80)\n    /* \"#utility.yul\":4365:4983   */\ntag_81:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_84\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_85:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_89\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_88:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_80:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"tiny_boop.sol\":660:3890  contract ERC20 is Context {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tiny_boop.sol\":660:3890  contract ERC20 is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89de1f5f\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x89de1f5f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xeb55bc6b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tiny_boop.sol\":1169:1258  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1451:1548  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1364:1445  function decimals() public view virtual returns (uint8) {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":2324:2440  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":795:844  mapping (string => uint256) public _balances_pair */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1265:1358  function symbol() public view virtual returns (string memory) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":2477:2657  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1571:2298  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n    tag_10:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tiny_boop.sol\":1169:1258  function name() public view virtual returns (string memory) {... */\n    tag_13:\n        /* \"tiny_boop.sol\":1214:1227  string memory */\n      0x60\n        /* \"tiny_boop.sol\":1246:1251  _name */\n      0x03\n        /* \"tiny_boop.sol\":1239:1251  return _name */\n      dup1\n      sload\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_51\n      swap1\n      tag_50\n      jump\t// in\n    tag_51:\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_53\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_52)\n    tag_53:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_54:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_54\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1169:1258  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":1451:1548  function totalSupply() public view virtual returns (uint256) {... */\n    tag_17:\n        /* \"tiny_boop.sol\":1503:1510  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":1529:1541  _totalSupply */\n      sload(0x02)\n        /* \"tiny_boop.sol\":1522:1541  return _totalSupply */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1451:1548  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":1364:1445  function decimals() public view virtual returns (uint8) {... */\n    tag_21:\n        /* \"tiny_boop.sol\":1413:1418  uint8 */\n      0x00\n        /* \"tiny_boop.sol\":1437:1438  1 */\n      0x01\n        /* \"tiny_boop.sol\":1430:1438  return 1 */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1364:1445  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":2324:2440  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_27:\n        /* \"tiny_boop.sol\":2389:2396  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":2415:2424  _balances */\n      dup1\n        /* \"tiny_boop.sol\":2415:2433  _balances[account] */\n      0x00\n        /* \"tiny_boop.sol\":2425:2432  account */\n      dup4\n        /* \"tiny_boop.sol\":2415:2433  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"tiny_boop.sol\":2408:2433  return _balances[account] */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2324:2440  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"tiny_boop.sol\":795:844  mapping (string => uint256) public _balances_pair */\n    tag_32:\n      0x01\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"tiny_boop.sol\":1265:1358  function symbol() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"tiny_boop.sol\":1312:1325  string memory */\n      0x60\n        /* \"tiny_boop.sol\":1344:1351  _symbol */\n      0x04\n        /* \"tiny_boop.sol\":1337:1351  return _symbol */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_50\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_50\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"tiny_boop.sol\":1265:1358  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":2477:2657  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_40:\n        /* \"tiny_boop.sol\":2547:2551  bool */\n      0x00\n        /* \"tiny_boop.sol\":2563:2576  address owner */\n      dup1\n        /* \"tiny_boop.sol\":2579:2591  _msgSender() */\n      tag_65\n        /* \"tiny_boop.sol\":2579:2589  _msgSender */\n      tag_66\n        /* \"tiny_boop.sol\":2579:2591  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"tiny_boop.sol\":2563:2591  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2601:2629  _transfer(owner, to, amount) */\n      tag_67\n        /* \"tiny_boop.sol\":2611:2616  owner */\n      dup2\n        /* \"tiny_boop.sol\":2618:2620  to */\n      dup6\n        /* \"tiny_boop.sol\":2622:2628  amount */\n      dup6\n        /* \"tiny_boop.sol\":2601:2610  _transfer */\n      tag_68\n        /* \"tiny_boop.sol\":2601:2629  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_67:\n        /* \"tiny_boop.sol\":2646:2650  true */\n      0x01\n        /* \"tiny_boop.sol\":2639:2650  return true */\n      swap2\n      pop\n      pop\n        /* \"tiny_boop.sol\":2477:2657  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"tiny_boop.sol\":1571:2298  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n    tag_46:\n        /* \"tiny_boop.sol\":1651:1658  uint256 */\n      0x00\n        /* \"tiny_boop.sol\":1724:1725  0 */\n      dup1\n        /* \"tiny_boop.sol\":1706:1726  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":1706:1712  sender */\n      dup4\n        /* \"tiny_boop.sol\":1706:1726  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":1698:1758  require(sender != address(0), \"Boop Sender address invalid\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"tiny_boop.sol\":1796:1797  0 */\n      0x00\n        /* \"tiny_boop.sol\":1776:1798  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":1776:1784  receiver */\n      dup3\n        /* \"tiny_boop.sol\":1776:1798  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":1768:1832  require(receiver != address(0), \"Boop Receiver address invalid\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"tiny_boop.sol\":1866:1894  string memory _string_sender */\n      0x60\n        /* \"tiny_boop.sol\":1904:1928  string memory _string_to */\n      dup1\n        /* \"tiny_boop.sol\":1938:1963  string memory _pair_value */\n      0x60\n        /* \"tiny_boop.sol\":2020:2047  Strings.toHexString(sender) */\n      tag_76\n        /* \"tiny_boop.sol\":2040:2046  sender */\n      dup7\n        /* \"tiny_boop.sol\":2020:2039  Strings.toHexString */\n      tag_77\n        /* \"tiny_boop.sol\":2020:2047  Strings.toHexString(sender) */\n      jump\t// in\n    tag_76:\n        /* \"tiny_boop.sol\":2003:2047  _string_sender = Strings.toHexString(sender) */\n      swap3\n      pop\n        /* \"tiny_boop.sol\":2070:2099  Strings.toHexString(receiver) */\n      tag_78\n        /* \"tiny_boop.sol\":2090:2098  receiver */\n      dup6\n        /* \"tiny_boop.sol\":2070:2089  Strings.toHexString */\n      tag_77\n        /* \"tiny_boop.sol\":2070:2099  Strings.toHexString(receiver) */\n      jump\t// in\n    tag_78:\n        /* \"tiny_boop.sol\":2057:2099  _string_to = Strings.toHexString(receiver) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":2148:2162  _string_sender */\n      dup3\n        /* \"tiny_boop.sol\":2131:2168  abi.encodePacked(_string_sender,'__') */\n      add(0x20, mload(0x40))\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":2110:2169  _pair_value = string(abi.encodePacked(_string_sender,'__')) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2217:2228  _pair_value */\n      dup1\n        /* \"tiny_boop.sol\":2229:2239  _string_to */\n      dup3\n        /* \"tiny_boop.sol\":2200:2240  abi.encodePacked(_pair_value,_string_to) */\n      add(0x20, mload(0x40))\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":2179:2241  _pair_value = string(abi.encodePacked(_pair_value,_string_to)) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":2259:2273  _balances_pair */\n      0x01\n        /* \"tiny_boop.sol\":2274:2285  _pair_value */\n      dup2\n        /* \"tiny_boop.sol\":2259:2286  _balances_pair[_pair_value] */\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"tiny_boop.sol\":2252:2286  return _balances_pair[_pair_value] */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"tiny_boop.sol\":1571:2298  function balancePairOf(address sender, address receiver) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"tiny_boop.sol\":2663:3887  function _transfer(... */\n    tag_68:\n        /* \"tiny_boop.sol\":2827:2828  0 */\n      0x00\n        /* \"tiny_boop.sol\":2811:2829  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":2811:2815  from */\n      dup4\n        /* \"tiny_boop.sol\":2811:2829  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":2803:2871  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"tiny_boop.sol\":2903:2904  0 */\n      0x00\n        /* \"tiny_boop.sol\":2889:2905  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":2889:2891  to */\n      dup3\n        /* \"tiny_boop.sol\":2889:2905  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":2881:2945  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"tiny_boop.sol\":3016:3026  msg.sender */\n      caller\n        /* \"tiny_boop.sol\":3002:3027  to != address(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":3002:3004  to */\n      dup3\n        /* \"tiny_boop.sol\":3002:3027  to != address(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tiny_boop.sol\":2994:3072  require(to != address(msg.sender), \"Hey! You can't try to boop yourself! >:c\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"tiny_boop.sol\":3100:3101  1 */\n      0x01\n        /* \"tiny_boop.sol\":3090:3096  amount */\n      dup2\n        /* \"tiny_boop.sol\":3090:3101  amount >= 1 */\n      lt\n      iszero\n        /* \"tiny_boop.sol\":3082:3160  require(amount >= 1, \"Calm your crazy paw! Boop Value must be between 1 to 3\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"tiny_boop.sol\":3188:3189  3 */\n      0x03\n        /* \"tiny_boop.sol\":3178:3184  amount */\n      dup2\n        /* \"tiny_boop.sol\":3178:3189  amount <= 3 */\n      gt\n      iszero\n        /* \"tiny_boop.sol\":3170:3248  require(amount <= 3, \"Calm your crazy paw! Boop Value must be between 1 to 3\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"tiny_boop.sol\":3282:3310  string memory _string_sender */\n      0x60\n        /* \"tiny_boop.sol\":3320:3344  string memory _string_to */\n      dup1\n        /* \"tiny_boop.sol\":3354:3379  string memory _pair_value */\n      0x60\n        /* \"tiny_boop.sol\":3429:3460  Strings.toHexString(msg.sender) */\n      tag_101\n        /* \"tiny_boop.sol\":3449:3459  msg.sender */\n      caller\n        /* \"tiny_boop.sol\":3429:3448  Strings.toHexString */\n      tag_77\n        /* \"tiny_boop.sol\":3429:3460  Strings.toHexString(msg.sender) */\n      jump\t// in\n    tag_101:\n        /* \"tiny_boop.sol\":3412:3460  _string_sender = Strings.toHexString(msg.sender) */\n      swap3\n      pop\n        /* \"tiny_boop.sol\":3483:3506  Strings.toHexString(to) */\n      tag_102\n        /* \"tiny_boop.sol\":3503:3505  to */\n      dup6\n        /* \"tiny_boop.sol\":3483:3502  Strings.toHexString */\n      tag_77\n        /* \"tiny_boop.sol\":3483:3506  Strings.toHexString(to) */\n      jump\t// in\n    tag_102:\n        /* \"tiny_boop.sol\":3470:3506  _string_to = Strings.toHexString(to) */\n      swap2\n      pop\n        /* \"tiny_boop.sol\":3554:3568  _string_sender */\n      dup3\n        /* \"tiny_boop.sol\":3537:3574  abi.encodePacked(_string_sender,'__') */\n      add(0x20, mload(0x40))\n      tag_103\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":3516:3575  _pair_value = string(abi.encodePacked(_string_sender,'__')) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":3623:3634  _pair_value */\n      dup1\n        /* \"tiny_boop.sol\":3635:3645  _string_to */\n      dup3\n        /* \"tiny_boop.sol\":3606:3646  abi.encodePacked(_pair_value,_string_to) */\n      add(0x20, mload(0x40))\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"tiny_boop.sol\":3585:3647  _pair_value = string(abi.encodePacked(_pair_value,_string_to)) */\n      swap1\n      pop\n        /* \"tiny_boop.sol\":3717:3723  amount */\n      dup4\n        /* \"tiny_boop.sol\":3701:3713  _totalSupply */\n      0x02\n      0x00\n        /* \"tiny_boop.sol\":3701:3723  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tiny_boop.sol\":3754:3760  amount */\n      dup4\n        /* \"tiny_boop.sol\":3737:3746  _balances */\n      0x00\n        /* \"tiny_boop.sol\":3737:3750  _balances[to] */\n      dup1\n        /* \"tiny_boop.sol\":3747:3749  to */\n      dup8\n        /* \"tiny_boop.sol\":3737:3750  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"tiny_boop.sol\":3737:3760  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tiny_boop.sol\":3805:3811  amount */\n      dup4\n        /* \"tiny_boop.sol\":3774:3788  _balances_pair */\n      0x01\n        /* \"tiny_boop.sol\":3789:3800  _pair_value */\n      dup3\n        /* \"tiny_boop.sol\":3774:3801  _balances_pair[_pair_value] */\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_105:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"tiny_boop.sol\":3774:3811  _balances_pair[_pair_value] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tiny_boop.sol\":3868:3870  to */\n      dup5\n        /* \"tiny_boop.sol\":3853:3879  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tiny_boop.sol\":3862:3866  from */\n      dup7\n        /* \"tiny_boop.sol\":3853:3879  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"tiny_boop.sol\":3872:3878  amount */\n      dup7\n        /* \"tiny_boop.sol\":3853:3879  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"tiny_boop.sol\":2771:3887  {... */\n      pop\n      pop\n      pop\n        /* \"tiny_boop.sol\":2663:3887  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_115\n      jumpi\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n    tag_115:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_118:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n    tag_119:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_123\n      tag_121\n      jump\t// in\n    tag_123:\n    tag_122:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_127\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_128\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_121\n      jump\t// in\n    tag_130:\n    tag_129:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_121\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_124)\n    tag_125:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_138:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_139:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_140:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_190:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_190)\n    tag_192:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_141:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_142:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_195\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_138\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":818:889   */\n      tag_196\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_197\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_140\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":988:1017   */\n      tag_198\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_141\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_15:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_200\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_142\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1426   */\n    tag_143:\n        /* \"#utility.yul\":1386:1393   */\n      0x00\n        /* \"#utility.yul\":1415:1420   */\n      dup2\n        /* \"#utility.yul\":1404:1420   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1550   */\n    tag_144:\n        /* \"#utility.yul\":1519:1543   */\n      tag_203\n        /* \"#utility.yul\":1537:1542   */\n      dup2\n        /* \"#utility.yul\":1519:1543   */\n      tag_143\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1514:1517   */\n      dup3\n        /* \"#utility.yul\":1507:1544   */\n      mstore\n        /* \"#utility.yul\":1432:1550   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1778   */\n    tag_19:\n        /* \"#utility.yul\":1649:1653   */\n      0x00\n        /* \"#utility.yul\":1687:1689   */\n      0x20\n        /* \"#utility.yul\":1676:1685   */\n      dup3\n        /* \"#utility.yul\":1672:1690   */\n      add\n        /* \"#utility.yul\":1664:1690   */\n      swap1\n      pop\n        /* \"#utility.yul\":1700:1771   */\n      tag_205\n        /* \"#utility.yul\":1768:1769   */\n      0x00\n        /* \"#utility.yul\":1757:1766   */\n      dup4\n        /* \"#utility.yul\":1753:1770   */\n      add\n        /* \"#utility.yul\":1744:1750   */\n      dup5\n        /* \"#utility.yul\":1700:1771   */\n      tag_144\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1556:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1784:1870   */\n    tag_145:\n        /* \"#utility.yul\":1819:1826   */\n      0x00\n        /* \"#utility.yul\":1859:1863   */\n      0xff\n        /* \"#utility.yul\":1852:1857   */\n      dup3\n        /* \"#utility.yul\":1848:1864   */\n      and\n        /* \"#utility.yul\":1837:1864   */\n      swap1\n      pop\n        /* \"#utility.yul\":1784:1870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1876:1988   */\n    tag_146:\n        /* \"#utility.yul\":1959:1981   */\n      tag_208\n        /* \"#utility.yul\":1975:1980   */\n      dup2\n        /* \"#utility.yul\":1959:1981   */\n      tag_145\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1954:1957   */\n      dup3\n        /* \"#utility.yul\":1947:1982   */\n      mstore\n        /* \"#utility.yul\":1876:1988   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2208   */\n    tag_23:\n        /* \"#utility.yul\":2083:2087   */\n      0x00\n        /* \"#utility.yul\":2121:2123   */\n      0x20\n        /* \"#utility.yul\":2110:2119   */\n      dup3\n        /* \"#utility.yul\":2106:2124   */\n      add\n        /* \"#utility.yul\":2098:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2201   */\n      tag_210\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2183:2200   */\n      add\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2134:2201   */\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1994:2208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2214:2289   */\n    tag_147:\n        /* \"#utility.yul\":2247:2253   */\n      0x00\n        /* \"#utility.yul\":2280:2282   */\n      0x40\n        /* \"#utility.yul\":2274:2283   */\n      mload\n        /* \"#utility.yul\":2264:2283   */\n      swap1\n      pop\n        /* \"#utility.yul\":2214:2289   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2295:2412   */\n    tag_148:\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2418:2535   */\n    tag_149:\n        /* \"#utility.yul\":2527:2528   */\n      0x00\n        /* \"#utility.yul\":2524:2525   */\n      dup1\n        /* \"#utility.yul\":2517:2529   */\n      revert\n        /* \"#utility.yul\":2541:2667   */\n    tag_150:\n        /* \"#utility.yul\":2578:2585   */\n      0x00\n        /* \"#utility.yul\":2618:2660   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2611:2616   */\n      dup3\n        /* \"#utility.yul\":2607:2661   */\n      and\n        /* \"#utility.yul\":2596:2661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2673:2769   */\n    tag_151:\n        /* \"#utility.yul\":2710:2717   */\n      0x00\n        /* \"#utility.yul\":2739:2763   */\n      tag_216\n        /* \"#utility.yul\":2757:2762   */\n      dup3\n        /* \"#utility.yul\":2739:2763   */\n      tag_150\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2728:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:2897   */\n    tag_152:\n        /* \"#utility.yul\":2848:2872   */\n      tag_218\n        /* \"#utility.yul\":2866:2871   */\n      dup2\n        /* \"#utility.yul\":2848:2872   */\n      tag_151\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2841:2846   */\n      dup2\n        /* \"#utility.yul\":2838:2873   */\n      eq\n        /* \"#utility.yul\":2828:2891   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2884:2885   */\n      dup1\n        /* \"#utility.yul\":2877:2889   */\n      revert\n        /* \"#utility.yul\":2828:2891   */\n    tag_219:\n        /* \"#utility.yul\":2775:2897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3042   */\n    tag_153:\n        /* \"#utility.yul\":2949:2954   */\n      0x00\n        /* \"#utility.yul\":2987:2993   */\n      dup2\n        /* \"#utility.yul\":2974:2994   */\n      calldataload\n        /* \"#utility.yul\":2965:2994   */\n      swap1\n      pop\n        /* \"#utility.yul\":3003:3036   */\n      tag_221\n        /* \"#utility.yul\":3030:3035   */\n      dup2\n        /* \"#utility.yul\":3003:3036   */\n      tag_152\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2903:3042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3377   */\n    tag_26:\n        /* \"#utility.yul\":3107:3113   */\n      0x00\n        /* \"#utility.yul\":3156:3158   */\n      0x20\n        /* \"#utility.yul\":3144:3153   */\n      dup3\n        /* \"#utility.yul\":3135:3142   */\n      dup5\n        /* \"#utility.yul\":3131:3154   */\n      sub\n        /* \"#utility.yul\":3127:3159   */\n      slt\n        /* \"#utility.yul\":3124:3243   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3162:3241   */\n      tag_224\n      tag_148\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3124:3243   */\n    tag_223:\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3307:3360   */\n      tag_225\n        /* \"#utility.yul\":3352:3359   */\n      dup5\n        /* \"#utility.yul\":3343:3349   */\n      dup3\n        /* \"#utility.yul\":3332:3341   */\n      dup6\n        /* \"#utility.yul\":3328:3350   */\n      add\n        /* \"#utility.yul\":3307:3360   */\n      tag_153\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3297:3360   */\n      swap2\n      pop\n        /* \"#utility.yul\":3253:3370   */\n      pop\n        /* \"#utility.yul\":3048:3377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3500   */\n    tag_154:\n        /* \"#utility.yul\":3492:3493   */\n      0x00\n        /* \"#utility.yul\":3489:3490   */\n      dup1\n        /* \"#utility.yul\":3482:3494   */\n      revert\n        /* \"#utility.yul\":3506:3623   */\n    tag_155:\n        /* \"#utility.yul\":3615:3616   */\n      0x00\n        /* \"#utility.yul\":3612:3613   */\n      dup1\n        /* \"#utility.yul\":3605:3617   */\n      revert\n        /* \"#utility.yul\":3629:3809   */\n    tag_117:\n        /* \"#utility.yul\":3677:3754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3674:3675   */\n      0x00\n        /* \"#utility.yul\":3667:3755   */\n      mstore\n        /* \"#utility.yul\":3774:3778   */\n      0x41\n        /* \"#utility.yul\":3771:3772   */\n      0x04\n        /* \"#utility.yul\":3764:3779   */\n      mstore\n        /* \"#utility.yul\":3798:3802   */\n      0x24\n        /* \"#utility.yul\":3795:3796   */\n      0x00\n        /* \"#utility.yul\":3788:3803   */\n      revert\n        /* \"#utility.yul\":3815:4096   */\n    tag_156:\n        /* \"#utility.yul\":3898:3925   */\n      tag_230\n        /* \"#utility.yul\":3920:3924   */\n      dup3\n        /* \"#utility.yul\":3898:3925   */\n      tag_141\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3890:3896   */\n      dup2\n        /* \"#utility.yul\":3886:3926   */\n      add\n        /* \"#utility.yul\":4028:4034   */\n      dup2\n        /* \"#utility.yul\":4016:4026   */\n      dup2\n        /* \"#utility.yul\":4013:4035   */\n      lt\n        /* \"#utility.yul\":3992:4010   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3980:3990   */\n      dup3\n        /* \"#utility.yul\":3977:4011   */\n      gt\n        /* \"#utility.yul\":3974:4036   */\n      or\n        /* \"#utility.yul\":3971:4059   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4039:4057   */\n      tag_232\n      tag_117\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3971:4059   */\n    tag_231:\n        /* \"#utility.yul\":4079:4089   */\n      dup1\n        /* \"#utility.yul\":4075:4077   */\n      0x40\n        /* \"#utility.yul\":4068:4090   */\n      mstore\n        /* \"#utility.yul\":3858:4096   */\n      pop\n        /* \"#utility.yul\":3815:4096   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4102:4231   */\n    tag_157:\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4163:4183   */\n      tag_234\n      tag_147\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4153:4183   */\n      swap1\n      pop\n        /* \"#utility.yul\":4192:4225   */\n      tag_235\n        /* \"#utility.yul\":4220:4224   */\n      dup3\n        /* \"#utility.yul\":4212:4218   */\n      dup3\n        /* \"#utility.yul\":4192:4225   */\n      tag_156\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4102:4231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4237:4545   */\n    tag_158:\n        /* \"#utility.yul\":4299:4303   */\n      0x00\n        /* \"#utility.yul\":4389:4407   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4381:4387   */\n      dup3\n        /* \"#utility.yul\":4378:4408   */\n      gt\n        /* \"#utility.yul\":4375:4431   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":4411:4429   */\n      tag_238\n      tag_117\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4375:4431   */\n    tag_237:\n        /* \"#utility.yul\":4449:4478   */\n      tag_239\n        /* \"#utility.yul\":4471:4477   */\n      dup3\n        /* \"#utility.yul\":4449:4478   */\n      tag_141\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4441:4478   */\n      swap1\n      pop\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4527:4531   */\n      dup2\n        /* \"#utility.yul\":4523:4538   */\n      add\n        /* \"#utility.yul\":4515:4538   */\n      swap1\n      pop\n        /* \"#utility.yul\":4237:4545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4551:4697   */\n    tag_159:\n        /* \"#utility.yul\":4648:4654   */\n      dup3\n        /* \"#utility.yul\":4643:4646   */\n      dup2\n        /* \"#utility.yul\":4638:4641   */\n      dup4\n        /* \"#utility.yul\":4625:4655   */\n      calldatacopy\n        /* \"#utility.yul\":4689:4690   */\n      0x00\n        /* \"#utility.yul\":4680:4686   */\n      dup4\n        /* \"#utility.yul\":4675:4678   */\n      dup4\n        /* \"#utility.yul\":4671:4687   */\n      add\n        /* \"#utility.yul\":4664:4691   */\n      mstore\n        /* \"#utility.yul\":4551:4697   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4703:5128   */\n    tag_160:\n        /* \"#utility.yul\":4781:4786   */\n      0x00\n        /* \"#utility.yul\":4806:4872   */\n      tag_242\n        /* \"#utility.yul\":4822:4871   */\n      tag_243\n        /* \"#utility.yul\":4864:4870   */\n      dup5\n        /* \"#utility.yul\":4822:4871   */\n      tag_158\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4806:4872   */\n      tag_157\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4797:4872   */\n      swap1\n      pop\n        /* \"#utility.yul\":4895:4901   */\n      dup3\n        /* \"#utility.yul\":4888:4893   */\n      dup2\n        /* \"#utility.yul\":4881:4902   */\n      mstore\n        /* \"#utility.yul\":4933:4937   */\n      0x20\n        /* \"#utility.yul\":4926:4931   */\n      dup2\n        /* \"#utility.yul\":4922:4938   */\n      add\n        /* \"#utility.yul\":4971:4974   */\n      dup5\n        /* \"#utility.yul\":4962:4968   */\n      dup5\n        /* \"#utility.yul\":4957:4960   */\n      dup5\n        /* \"#utility.yul\":4953:4969   */\n      add\n        /* \"#utility.yul\":4950:4975   */\n      gt\n        /* \"#utility.yul\":4947:5059   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":4978:5057   */\n      tag_245\n      tag_155\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4947:5059   */\n    tag_244:\n        /* \"#utility.yul\":5068:5122   */\n      tag_246\n        /* \"#utility.yul\":5115:5121   */\n      dup5\n        /* \"#utility.yul\":5110:5113   */\n      dup3\n        /* \"#utility.yul\":5105:5108   */\n      dup6\n        /* \"#utility.yul\":5068:5122   */\n      tag_159\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4787:5128   */\n      pop\n        /* \"#utility.yul\":4703:5128   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5148:5488   */\n    tag_161:\n        /* \"#utility.yul\":5204:5209   */\n      0x00\n        /* \"#utility.yul\":5253:5256   */\n      dup3\n        /* \"#utility.yul\":5246:5250   */\n      0x1f\n        /* \"#utility.yul\":5238:5244   */\n      dup4\n        /* \"#utility.yul\":5234:5251   */\n      add\n        /* \"#utility.yul\":5230:5257   */\n      slt\n        /* \"#utility.yul\":5220:5342   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":5261:5340   */\n      tag_249\n      tag_154\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5220:5342   */\n    tag_248:\n        /* \"#utility.yul\":5378:5384   */\n      dup2\n        /* \"#utility.yul\":5365:5385   */\n      calldataload\n        /* \"#utility.yul\":5403:5482   */\n      tag_250\n        /* \"#utility.yul\":5478:5481   */\n      dup5\n        /* \"#utility.yul\":5470:5476   */\n      dup3\n        /* \"#utility.yul\":5463:5467   */\n      0x20\n        /* \"#utility.yul\":5455:5461   */\n      dup7\n        /* \"#utility.yul\":5451:5468   */\n      add\n        /* \"#utility.yul\":5403:5482   */\n      tag_160\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5394:5482   */\n      swap2\n      pop\n        /* \"#utility.yul\":5210:5488   */\n      pop\n        /* \"#utility.yul\":5148:5488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5494:6003   */\n    tag_31:\n        /* \"#utility.yul\":5563:5569   */\n      0x00\n        /* \"#utility.yul\":5612:5614   */\n      0x20\n        /* \"#utility.yul\":5600:5609   */\n      dup3\n        /* \"#utility.yul\":5591:5598   */\n      dup5\n        /* \"#utility.yul\":5587:5610   */\n      sub\n        /* \"#utility.yul\":5583:5615   */\n      slt\n        /* \"#utility.yul\":5580:5699   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":5618:5697   */\n      tag_253\n      tag_148\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5580:5699   */\n    tag_252:\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5751:5768   */\n      add\n        /* \"#utility.yul\":5738:5769   */\n      calldataload\n        /* \"#utility.yul\":5796:5814   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5788:5794   */\n      dup2\n        /* \"#utility.yul\":5785:5815   */\n      gt\n        /* \"#utility.yul\":5782:5899   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":5818:5897   */\n      tag_255\n      tag_149\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5782:5899   */\n    tag_254:\n        /* \"#utility.yul\":5923:5986   */\n      tag_256\n        /* \"#utility.yul\":5978:5985   */\n      dup5\n        /* \"#utility.yul\":5969:5975   */\n      dup3\n        /* \"#utility.yul\":5958:5967   */\n      dup6\n        /* \"#utility.yul\":5954:5976   */\n      add\n        /* \"#utility.yul\":5923:5986   */\n      tag_161\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5913:5986   */\n      swap2\n      pop\n        /* \"#utility.yul\":5709:5996   */\n      pop\n        /* \"#utility.yul\":5494:6003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6009:6131   */\n    tag_162:\n        /* \"#utility.yul\":6082:6106   */\n      tag_258\n        /* \"#utility.yul\":6100:6105   */\n      dup2\n        /* \"#utility.yul\":6082:6106   */\n      tag_143\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6075:6080   */\n      dup2\n        /* \"#utility.yul\":6072:6107   */\n      eq\n        /* \"#utility.yul\":6062:6125   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":6121:6122   */\n      0x00\n        /* \"#utility.yul\":6118:6119   */\n      dup1\n        /* \"#utility.yul\":6111:6123   */\n      revert\n        /* \"#utility.yul\":6062:6125   */\n    tag_259:\n        /* \"#utility.yul\":6009:6131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6276   */\n    tag_163:\n        /* \"#utility.yul\":6183:6188   */\n      0x00\n        /* \"#utility.yul\":6221:6227   */\n      dup2\n        /* \"#utility.yul\":6208:6228   */\n      calldataload\n        /* \"#utility.yul\":6199:6228   */\n      swap1\n      pop\n        /* \"#utility.yul\":6237:6270   */\n      tag_261\n        /* \"#utility.yul\":6264:6269   */\n      dup2\n        /* \"#utility.yul\":6237:6270   */\n      tag_162\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6137:6276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6756   */\n    tag_39:\n        /* \"#utility.yul\":6350:6356   */\n      0x00\n        /* \"#utility.yul\":6358:6364   */\n      dup1\n        /* \"#utility.yul\":6407:6409   */\n      0x40\n        /* \"#utility.yul\":6395:6404   */\n      dup4\n        /* \"#utility.yul\":6386:6393   */\n      dup6\n        /* \"#utility.yul\":6382:6405   */\n      sub\n        /* \"#utility.yul\":6378:6410   */\n      slt\n        /* \"#utility.yul\":6375:6494   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":6413:6492   */\n      tag_264\n      tag_148\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6375:6494   */\n    tag_263:\n        /* \"#utility.yul\":6533:6534   */\n      0x00\n        /* \"#utility.yul\":6558:6611   */\n      tag_265\n        /* \"#utility.yul\":6603:6610   */\n      dup6\n        /* \"#utility.yul\":6594:6600   */\n      dup3\n        /* \"#utility.yul\":6583:6592   */\n      dup7\n        /* \"#utility.yul\":6579:6601   */\n      add\n        /* \"#utility.yul\":6558:6611   */\n      tag_153\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6548:6611   */\n      swap3\n      pop\n        /* \"#utility.yul\":6504:6621   */\n      pop\n        /* \"#utility.yul\":6660:6662   */\n      0x20\n        /* \"#utility.yul\":6686:6739   */\n      tag_266\n        /* \"#utility.yul\":6731:6738   */\n      dup6\n        /* \"#utility.yul\":6722:6728   */\n      dup3\n        /* \"#utility.yul\":6711:6720   */\n      dup7\n        /* \"#utility.yul\":6707:6729   */\n      add\n        /* \"#utility.yul\":6686:6739   */\n      tag_163\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6676:6739   */\n      swap2\n      pop\n        /* \"#utility.yul\":6631:6749   */\n      pop\n        /* \"#utility.yul\":6282:6756   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6762:6852   */\n    tag_164:\n        /* \"#utility.yul\":6796:6803   */\n      0x00\n        /* \"#utility.yul\":6839:6844   */\n      dup2\n        /* \"#utility.yul\":6832:6845   */\n      iszero\n        /* \"#utility.yul\":6825:6846   */\n      iszero\n        /* \"#utility.yul\":6814:6846   */\n      swap1\n      pop\n        /* \"#utility.yul\":6762:6852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6858:6967   */\n    tag_165:\n        /* \"#utility.yul\":6939:6960   */\n      tag_269\n        /* \"#utility.yul\":6954:6959   */\n      dup2\n        /* \"#utility.yul\":6939:6960   */\n      tag_164\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6934:6937   */\n      dup3\n        /* \"#utility.yul\":6927:6961   */\n      mstore\n        /* \"#utility.yul\":6858:6967   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6973:7183   */\n    tag_42:\n        /* \"#utility.yul\":7060:7064   */\n      0x00\n        /* \"#utility.yul\":7098:7100   */\n      0x20\n        /* \"#utility.yul\":7087:7096   */\n      dup3\n        /* \"#utility.yul\":7083:7101   */\n      add\n        /* \"#utility.yul\":7075:7101   */\n      swap1\n      pop\n        /* \"#utility.yul\":7111:7176   */\n      tag_271\n        /* \"#utility.yul\":7173:7174   */\n      0x00\n        /* \"#utility.yul\":7162:7171   */\n      dup4\n        /* \"#utility.yul\":7158:7175   */\n      add\n        /* \"#utility.yul\":7149:7155   */\n      dup5\n        /* \"#utility.yul\":7111:7176   */\n      tag_165\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6973:7183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7189:7663   */\n    tag_45:\n        /* \"#utility.yul\":7257:7263   */\n      0x00\n        /* \"#utility.yul\":7265:7271   */\n      dup1\n        /* \"#utility.yul\":7314:7316   */\n      0x40\n        /* \"#utility.yul\":7302:7311   */\n      dup4\n        /* \"#utility.yul\":7293:7300   */\n      dup6\n        /* \"#utility.yul\":7289:7312   */\n      sub\n        /* \"#utility.yul\":7285:7317   */\n      slt\n        /* \"#utility.yul\":7282:7401   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":7320:7399   */\n      tag_274\n      tag_148\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7282:7401   */\n    tag_273:\n        /* \"#utility.yul\":7440:7441   */\n      0x00\n        /* \"#utility.yul\":7465:7518   */\n      tag_275\n        /* \"#utility.yul\":7510:7517   */\n      dup6\n        /* \"#utility.yul\":7501:7507   */\n      dup3\n        /* \"#utility.yul\":7490:7499   */\n      dup7\n        /* \"#utility.yul\":7486:7508   */\n      add\n        /* \"#utility.yul\":7465:7518   */\n      tag_153\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7455:7518   */\n      swap3\n      pop\n        /* \"#utility.yul\":7411:7528   */\n      pop\n        /* \"#utility.yul\":7567:7569   */\n      0x20\n        /* \"#utility.yul\":7593:7646   */\n      tag_276\n        /* \"#utility.yul\":7638:7645   */\n      dup6\n        /* \"#utility.yul\":7629:7635   */\n      dup3\n        /* \"#utility.yul\":7618:7627   */\n      dup7\n        /* \"#utility.yul\":7614:7636   */\n      add\n        /* \"#utility.yul\":7593:7646   */\n      tag_153\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7583:7646   */\n      swap2\n      pop\n        /* \"#utility.yul\":7538:7656   */\n      pop\n        /* \"#utility.yul\":7189:7663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7669:7849   */\n    tag_166:\n        /* \"#utility.yul\":7717:7794   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7707:7795   */\n      mstore\n        /* \"#utility.yul\":7814:7818   */\n      0x22\n        /* \"#utility.yul\":7811:7812   */\n      0x04\n        /* \"#utility.yul\":7804:7819   */\n      mstore\n        /* \"#utility.yul\":7838:7842   */\n      0x24\n        /* \"#utility.yul\":7835:7836   */\n      0x00\n        /* \"#utility.yul\":7828:7843   */\n      revert\n        /* \"#utility.yul\":7855:8175   */\n    tag_50:\n        /* \"#utility.yul\":7899:7905   */\n      0x00\n        /* \"#utility.yul\":7936:7937   */\n      0x02\n        /* \"#utility.yul\":7930:7934   */\n      dup3\n        /* \"#utility.yul\":7926:7938   */\n      div\n        /* \"#utility.yul\":7916:7938   */\n      swap1\n      pop\n        /* \"#utility.yul\":7983:7984   */\n      0x01\n        /* \"#utility.yul\":7977:7981   */\n      dup3\n        /* \"#utility.yul\":7973:7985   */\n      and\n        /* \"#utility.yul\":8004:8022   */\n      dup1\n        /* \"#utility.yul\":7994:8075   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":8060:8064   */\n      0x7f\n        /* \"#utility.yul\":8052:8058   */\n      dup3\n        /* \"#utility.yul\":8048:8065   */\n      and\n        /* \"#utility.yul\":8038:8065   */\n      swap2\n      pop\n        /* \"#utility.yul\":7994:8075   */\n    tag_279:\n        /* \"#utility.yul\":8122:8124   */\n      0x20\n        /* \"#utility.yul\":8114:8120   */\n      dup3\n        /* \"#utility.yul\":8111:8125   */\n      lt\n        /* \"#utility.yul\":8091:8109   */\n      dup2\n        /* \"#utility.yul\":8088:8126   */\n      sub\n        /* \"#utility.yul\":8085:8169   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":8141:8159   */\n      tag_281\n      tag_166\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8085:8169   */\n    tag_280:\n        /* \"#utility.yul\":7906:8175   */\n      pop\n        /* \"#utility.yul\":7855:8175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8181:8358   */\n    tag_167:\n        /* \"#utility.yul\":8321:8350   */\n      0x426f6f702053656e646572206164647265737320696e76616c69640000000000\n        /* \"#utility.yul\":8317:8318   */\n      0x00\n        /* \"#utility.yul\":8309:8315   */\n      dup3\n        /* \"#utility.yul\":8305:8319   */\n      add\n        /* \"#utility.yul\":8298:8351   */\n      mstore\n        /* \"#utility.yul\":8181:8358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8364:8730   */\n    tag_168:\n        /* \"#utility.yul\":8506:8509   */\n      0x00\n        /* \"#utility.yul\":8527:8594   */\n      tag_284\n        /* \"#utility.yul\":8591:8593   */\n      0x1b\n        /* \"#utility.yul\":8586:8589   */\n      dup4\n        /* \"#utility.yul\":8527:8594   */\n      tag_139\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8520:8594   */\n      swap2\n      pop\n        /* \"#utility.yul\":8603:8696   */\n      tag_285\n        /* \"#utility.yul\":8692:8695   */\n      dup3\n        /* \"#utility.yul\":8603:8696   */\n      tag_167\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8721:8723   */\n      0x20\n        /* \"#utility.yul\":8716:8719   */\n      dup3\n        /* \"#utility.yul\":8712:8724   */\n      add\n        /* \"#utility.yul\":8705:8724   */\n      swap1\n      pop\n        /* \"#utility.yul\":8364:8730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8736:9155   */\n    tag_72:\n        /* \"#utility.yul\":8902:8906   */\n      0x00\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8929:8938   */\n      dup3\n        /* \"#utility.yul\":8925:8943   */\n      add\n        /* \"#utility.yul\":8917:8943   */\n      swap1\n      pop\n        /* \"#utility.yul\":8989:8998   */\n      dup2\n        /* \"#utility.yul\":8983:8987   */\n      dup2\n        /* \"#utility.yul\":8979:8999   */\n      sub\n        /* \"#utility.yul\":8975:8976   */\n      0x00\n        /* \"#utility.yul\":8964:8973   */\n      dup4\n        /* \"#utility.yul\":8960:8977   */\n      add\n        /* \"#utility.yul\":8953:9000   */\n      mstore\n        /* \"#utility.yul\":9017:9148   */\n      tag_287\n        /* \"#utility.yul\":9143:9147   */\n      dup2\n        /* \"#utility.yul\":9017:9148   */\n      tag_168\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9009:9148   */\n      swap1\n      pop\n        /* \"#utility.yul\":8736:9155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9161:9340   */\n    tag_169:\n        /* \"#utility.yul\":9301:9332   */\n      0x426f6f70205265636569766572206164647265737320696e76616c6964000000\n        /* \"#utility.yul\":9297:9298   */\n      0x00\n        /* \"#utility.yul\":9289:9295   */\n      dup3\n        /* \"#utility.yul\":9285:9299   */\n      add\n        /* \"#utility.yul\":9278:9333   */\n      mstore\n        /* \"#utility.yul\":9161:9340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9346:9712   */\n    tag_170:\n        /* \"#utility.yul\":9488:9491   */\n      0x00\n        /* \"#utility.yul\":9509:9576   */\n      tag_290\n        /* \"#utility.yul\":9573:9575   */\n      0x1d\n        /* \"#utility.yul\":9568:9571   */\n      dup4\n        /* \"#utility.yul\":9509:9576   */\n      tag_139\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9502:9576   */\n      swap2\n      pop\n        /* \"#utility.yul\":9585:9678   */\n      tag_291\n        /* \"#utility.yul\":9674:9677   */\n      dup3\n        /* \"#utility.yul\":9585:9678   */\n      tag_169\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9703:9705   */\n      0x20\n        /* \"#utility.yul\":9698:9701   */\n      dup3\n        /* \"#utility.yul\":9694:9706   */\n      add\n        /* \"#utility.yul\":9687:9706   */\n      swap1\n      pop\n        /* \"#utility.yul\":9346:9712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9718:10137   */\n    tag_75:\n        /* \"#utility.yul\":9884:9888   */\n      0x00\n        /* \"#utility.yul\":9922:9924   */\n      0x20\n        /* \"#utility.yul\":9911:9920   */\n      dup3\n        /* \"#utility.yul\":9907:9925   */\n      add\n        /* \"#utility.yul\":9899:9925   */\n      swap1\n      pop\n        /* \"#utility.yul\":9971:9980   */\n      dup2\n        /* \"#utility.yul\":9965:9969   */\n      dup2\n        /* \"#utility.yul\":9961:9981   */\n      sub\n        /* \"#utility.yul\":9957:9958   */\n      0x00\n        /* \"#utility.yul\":9946:9955   */\n      dup4\n        /* \"#utility.yul\":9942:9959   */\n      add\n        /* \"#utility.yul\":9935:9982   */\n      mstore\n        /* \"#utility.yul\":9999:10130   */\n      tag_293\n        /* \"#utility.yul\":10125:10129   */\n      dup2\n        /* \"#utility.yul\":9999:10130   */\n      tag_170\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9991:10130   */\n      swap1\n      pop\n        /* \"#utility.yul\":9718:10137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10143:10291   */\n    tag_171:\n        /* \"#utility.yul\":10245:10256   */\n      0x00\n        /* \"#utility.yul\":10282:10285   */\n      dup2\n        /* \"#utility.yul\":10267:10285   */\n      swap1\n      pop\n        /* \"#utility.yul\":10143:10291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10297:10687   */\n    tag_172:\n        /* \"#utility.yul\":10403:10406   */\n      0x00\n        /* \"#utility.yul\":10431:10470   */\n      tag_296\n        /* \"#utility.yul\":10464:10469   */\n      dup3\n        /* \"#utility.yul\":10431:10470   */\n      tag_138\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10486:10575   */\n      tag_297\n        /* \"#utility.yul\":10568:10574   */\n      dup2\n        /* \"#utility.yul\":10563:10566   */\n      dup6\n        /* \"#utility.yul\":10486:10575   */\n      tag_171\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10479:10575   */\n      swap4\n      pop\n        /* \"#utility.yul\":10584:10649   */\n      tag_298\n        /* \"#utility.yul\":10642:10648   */\n      dup2\n        /* \"#utility.yul\":10637:10640   */\n      dup6\n        /* \"#utility.yul\":10630:10634   */\n      0x20\n        /* \"#utility.yul\":10623:10628   */\n      dup7\n        /* \"#utility.yul\":10619:10635   */\n      add\n        /* \"#utility.yul\":10584:10649   */\n      tag_140\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10674:10680   */\n      dup1\n        /* \"#utility.yul\":10669:10672   */\n      dup5\n        /* \"#utility.yul\":10665:10681   */\n      add\n        /* \"#utility.yul\":10658:10681   */\n      swap2\n      pop\n        /* \"#utility.yul\":10407:10687   */\n      pop\n        /* \"#utility.yul\":10297:10687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10693:10845   */\n    tag_173:\n        /* \"#utility.yul\":10833:10837   */\n      0x5f5f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10829:10830   */\n      0x00\n        /* \"#utility.yul\":10821:10827   */\n      dup3\n        /* \"#utility.yul\":10817:10831   */\n      add\n        /* \"#utility.yul\":10810:10838   */\n      mstore\n        /* \"#utility.yul\":10693:10845   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10851:11251   */\n    tag_174:\n        /* \"#utility.yul\":11011:11014   */\n      0x00\n        /* \"#utility.yul\":11032:11116   */\n      tag_301\n        /* \"#utility.yul\":11114:11115   */\n      0x02\n        /* \"#utility.yul\":11109:11112   */\n      dup4\n        /* \"#utility.yul\":11032:11116   */\n      tag_171\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11025:11116   */\n      swap2\n      pop\n        /* \"#utility.yul\":11125:11218   */\n      tag_302\n        /* \"#utility.yul\":11214:11217   */\n      dup3\n        /* \"#utility.yul\":11125:11218   */\n      tag_173\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11243:11244   */\n      0x02\n        /* \"#utility.yul\":11238:11241   */\n      dup3\n        /* \"#utility.yul\":11234:11245   */\n      add\n        /* \"#utility.yul\":11227:11245   */\n      swap1\n      pop\n        /* \"#utility.yul\":10851:11251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11257:11798   */\n    tag_80:\n        /* \"#utility.yul\":11490:11493   */\n      0x00\n        /* \"#utility.yul\":11512:11607   */\n      tag_304\n        /* \"#utility.yul\":11603:11606   */\n      dup3\n        /* \"#utility.yul\":11594:11600   */\n      dup5\n        /* \"#utility.yul\":11512:11607   */\n      tag_172\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11505:11607   */\n      swap2\n      pop\n        /* \"#utility.yul\":11624:11772   */\n      tag_305\n        /* \"#utility.yul\":11768:11771   */\n      dup3\n        /* \"#utility.yul\":11624:11772   */\n      tag_174\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11617:11772   */\n      swap2\n      pop\n        /* \"#utility.yul\":11789:11792   */\n      dup2\n        /* \"#utility.yul\":11782:11792   */\n      swap1\n      pop\n        /* \"#utility.yul\":11257:11798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11804:12239   */\n    tag_82:\n        /* \"#utility.yul\":11984:11987   */\n      0x00\n        /* \"#utility.yul\":12006:12101   */\n      tag_307\n        /* \"#utility.yul\":12097:12100   */\n      dup3\n        /* \"#utility.yul\":12088:12094   */\n      dup6\n        /* \"#utility.yul\":12006:12101   */\n      tag_172\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11999:12101   */\n      swap2\n      pop\n        /* \"#utility.yul\":12118:12213   */\n      tag_308\n        /* \"#utility.yul\":12209:12212   */\n      dup3\n        /* \"#utility.yul\":12200:12206   */\n      dup5\n        /* \"#utility.yul\":12118:12213   */\n      tag_172\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12111:12213   */\n      swap2\n      pop\n        /* \"#utility.yul\":12230:12233   */\n      dup2\n        /* \"#utility.yul\":12223:12233   */\n      swap1\n      pop\n        /* \"#utility.yul\":11804:12239   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12520   */\n    tag_84:\n        /* \"#utility.yul\":12377:12380   */\n      0x00\n        /* \"#utility.yul\":12399:12494   */\n      tag_310\n        /* \"#utility.yul\":12490:12493   */\n      dup3\n        /* \"#utility.yul\":12481:12487   */\n      dup5\n        /* \"#utility.yul\":12399:12494   */\n      tag_172\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12392:12494   */\n      swap2\n      pop\n        /* \"#utility.yul\":12511:12514   */\n      dup2\n        /* \"#utility.yul\":12504:12514   */\n      swap1\n      pop\n        /* \"#utility.yul\":12245:12520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12526:12750   */\n    tag_175:\n        /* \"#utility.yul\":12666:12700   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12662:12663   */\n      0x00\n        /* \"#utility.yul\":12654:12660   */\n      dup3\n        /* \"#utility.yul\":12650:12664   */\n      add\n        /* \"#utility.yul\":12643:12701   */\n      mstore\n        /* \"#utility.yul\":12735:12742   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12730:12732   */\n      0x20\n        /* \"#utility.yul\":12722:12728   */\n      dup3\n        /* \"#utility.yul\":12718:12733   */\n      add\n        /* \"#utility.yul\":12711:12743   */\n      mstore\n        /* \"#utility.yul\":12526:12750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12756:13122   */\n    tag_176:\n        /* \"#utility.yul\":12898:12901   */\n      0x00\n        /* \"#utility.yul\":12919:12986   */\n      tag_313\n        /* \"#utility.yul\":12983:12985   */\n      0x25\n        /* \"#utility.yul\":12978:12981   */\n      dup4\n        /* \"#utility.yul\":12919:12986   */\n      tag_139\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12912:12986   */\n      swap2\n      pop\n        /* \"#utility.yul\":12995:13088   */\n      tag_314\n        /* \"#utility.yul\":13084:13087   */\n      dup3\n        /* \"#utility.yul\":12995:13088   */\n      tag_175\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13113:13115   */\n      0x40\n        /* \"#utility.yul\":13108:13111   */\n      dup3\n        /* \"#utility.yul\":13104:13116   */\n      add\n        /* \"#utility.yul\":13097:13116   */\n      swap1\n      pop\n        /* \"#utility.yul\":12756:13122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13128:13547   */\n    tag_89:\n        /* \"#utility.yul\":13294:13298   */\n      0x00\n        /* \"#utility.yul\":13332:13334   */\n      0x20\n        /* \"#utility.yul\":13321:13330   */\n      dup3\n        /* \"#utility.yul\":13317:13335   */\n      add\n        /* \"#utility.yul\":13309:13335   */\n      swap1\n      pop\n        /* \"#utility.yul\":13381:13390   */\n      dup2\n        /* \"#utility.yul\":13375:13379   */\n      dup2\n        /* \"#utility.yul\":13371:13391   */\n      sub\n        /* \"#utility.yul\":13367:13368   */\n      0x00\n        /* \"#utility.yul\":13356:13365   */\n      dup4\n        /* \"#utility.yul\":13352:13369   */\n      add\n        /* \"#utility.yul\":13345:13392   */\n      mstore\n        /* \"#utility.yul\":13409:13540   */\n      tag_316\n        /* \"#utility.yul\":13535:13539   */\n      dup2\n        /* \"#utility.yul\":13409:13540   */\n      tag_176\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":13401:13540   */\n      swap1\n      pop\n        /* \"#utility.yul\":13128:13547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13553:13775   */\n    tag_177:\n        /* \"#utility.yul\":13693:13727   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13689:13690   */\n      0x00\n        /* \"#utility.yul\":13681:13687   */\n      dup3\n        /* \"#utility.yul\":13677:13691   */\n      add\n        /* \"#utility.yul\":13670:13728   */\n      mstore\n        /* \"#utility.yul\":13762:13767   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13757:13759   */\n      0x20\n        /* \"#utility.yul\":13749:13755   */\n      dup3\n        /* \"#utility.yul\":13745:13760   */\n      add\n        /* \"#utility.yul\":13738:13768   */\n      mstore\n        /* \"#utility.yul\":13553:13775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13781:14147   */\n    tag_178:\n        /* \"#utility.yul\":13923:13926   */\n      0x00\n        /* \"#utility.yul\":13944:14011   */\n      tag_319\n        /* \"#utility.yul\":14008:14010   */\n      0x23\n        /* \"#utility.yul\":14003:14006   */\n      dup4\n        /* \"#utility.yul\":13944:14011   */\n      tag_139\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":13937:14011   */\n      swap2\n      pop\n        /* \"#utility.yul\":14020:14113   */\n      tag_320\n        /* \"#utility.yul\":14109:14112   */\n      dup3\n        /* \"#utility.yul\":14020:14113   */\n      tag_177\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":14138:14140   */\n      0x40\n        /* \"#utility.yul\":14133:14136   */\n      dup3\n        /* \"#utility.yul\":14129:14141   */\n      add\n        /* \"#utility.yul\":14122:14141   */\n      swap1\n      pop\n        /* \"#utility.yul\":13781:14147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14153:14572   */\n    tag_92:\n        /* \"#utility.yul\":14319:14323   */\n      0x00\n        /* \"#utility.yul\":14357:14359   */\n      0x20\n        /* \"#utility.yul\":14346:14355   */\n      dup3\n        /* \"#utility.yul\":14342:14360   */\n      add\n        /* \"#utility.yul\":14334:14360   */\n      swap1\n      pop\n        /* \"#utility.yul\":14406:14415   */\n      dup2\n        /* \"#utility.yul\":14400:14404   */\n      dup2\n        /* \"#utility.yul\":14396:14416   */\n      sub\n        /* \"#utility.yul\":14392:14393   */\n      0x00\n        /* \"#utility.yul\":14381:14390   */\n      dup4\n        /* \"#utility.yul\":14377:14394   */\n      add\n        /* \"#utility.yul\":14370:14417   */\n      mstore\n        /* \"#utility.yul\":14434:14565   */\n      tag_322\n        /* \"#utility.yul\":14560:14564   */\n      dup2\n        /* \"#utility.yul\":14434:14565   */\n      tag_178\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14426:14565   */\n      swap1\n      pop\n        /* \"#utility.yul\":14153:14572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14578:14805   */\n    tag_179:\n        /* \"#utility.yul\":14718:14752   */\n      0x4865792120596f752063616e27742074727920746f20626f6f7020796f757273\n        /* \"#utility.yul\":14714:14715   */\n      0x00\n        /* \"#utility.yul\":14706:14712   */\n      dup3\n        /* \"#utility.yul\":14702:14716   */\n      add\n        /* \"#utility.yul\":14695:14753   */\n      mstore\n        /* \"#utility.yul\":14787:14797   */\n      0x656c6621203e3a63000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14782:14784   */\n      0x20\n        /* \"#utility.yul\":14774:14780   */\n      dup3\n        /* \"#utility.yul\":14770:14785   */\n      add\n        /* \"#utility.yul\":14763:14798   */\n      mstore\n        /* \"#utility.yul\":14578:14805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14811:15177   */\n    tag_180:\n        /* \"#utility.yul\":14953:14956   */\n      0x00\n        /* \"#utility.yul\":14974:15041   */\n      tag_325\n        /* \"#utility.yul\":15038:15040   */\n      0x28\n        /* \"#utility.yul\":15033:15036   */\n      dup4\n        /* \"#utility.yul\":14974:15041   */\n      tag_139\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14967:15041   */\n      swap2\n      pop\n        /* \"#utility.yul\":15050:15143   */\n      tag_326\n        /* \"#utility.yul\":15139:15142   */\n      dup3\n        /* \"#utility.yul\":15050:15143   */\n      tag_179\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":15168:15170   */\n      0x40\n        /* \"#utility.yul\":15163:15166   */\n      dup3\n        /* \"#utility.yul\":15159:15171   */\n      add\n        /* \"#utility.yul\":15152:15171   */\n      swap1\n      pop\n        /* \"#utility.yul\":14811:15177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15183:15602   */\n    tag_95:\n        /* \"#utility.yul\":15349:15353   */\n      0x00\n        /* \"#utility.yul\":15387:15389   */\n      0x20\n        /* \"#utility.yul\":15376:15385   */\n      dup3\n        /* \"#utility.yul\":15372:15390   */\n      add\n        /* \"#utility.yul\":15364:15390   */\n      swap1\n      pop\n        /* \"#utility.yul\":15436:15445   */\n      dup2\n        /* \"#utility.yul\":15430:15434   */\n      dup2\n        /* \"#utility.yul\":15426:15446   */\n      sub\n        /* \"#utility.yul\":15422:15423   */\n      0x00\n        /* \"#utility.yul\":15411:15420   */\n      dup4\n        /* \"#utility.yul\":15407:15424   */\n      add\n        /* \"#utility.yul\":15400:15447   */\n      mstore\n        /* \"#utility.yul\":15464:15595   */\n      tag_328\n        /* \"#utility.yul\":15590:15594   */\n      dup2\n        /* \"#utility.yul\":15464:15595   */\n      tag_180\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":15456:15595   */\n      swap1\n      pop\n        /* \"#utility.yul\":15183:15602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15608:15849   */\n    tag_181:\n        /* \"#utility.yul\":15748:15782   */\n      0x43616c6d20796f7572206372617a79207061772120426f6f702056616c756520\n        /* \"#utility.yul\":15744:15745   */\n      0x00\n        /* \"#utility.yul\":15736:15742   */\n      dup3\n        /* \"#utility.yul\":15732:15746   */\n      add\n        /* \"#utility.yul\":15725:15783   */\n      mstore\n        /* \"#utility.yul\":15817:15841   */\n      0x6d757374206265206265747765656e203120746f203300000000000000000000\n        /* \"#utility.yul\":15812:15814   */\n      0x20\n        /* \"#utility.yul\":15804:15810   */\n      dup3\n        /* \"#utility.yul\":15800:15815   */\n      add\n        /* \"#utility.yul\":15793:15842   */\n      mstore\n        /* \"#utility.yul\":15608:15849   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15855:16221   */\n    tag_182:\n        /* \"#utility.yul\":15997:16000   */\n      0x00\n        /* \"#utility.yul\":16018:16085   */\n      tag_331\n        /* \"#utility.yul\":16082:16084   */\n      0x36\n        /* \"#utility.yul\":16077:16080   */\n      dup4\n        /* \"#utility.yul\":16018:16085   */\n      tag_139\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":16011:16085   */\n      swap2\n      pop\n        /* \"#utility.yul\":16094:16187   */\n      tag_332\n        /* \"#utility.yul\":16183:16186   */\n      dup3\n        /* \"#utility.yul\":16094:16187   */\n      tag_181\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":16212:16214   */\n      0x40\n        /* \"#utility.yul\":16207:16210   */\n      dup3\n        /* \"#utility.yul\":16203:16215   */\n      add\n        /* \"#utility.yul\":16196:16215   */\n      swap1\n      pop\n        /* \"#utility.yul\":15855:16221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16227:16646   */\n    tag_98:\n        /* \"#utility.yul\":16393:16397   */\n      0x00\n        /* \"#utility.yul\":16431:16433   */\n      0x20\n        /* \"#utility.yul\":16420:16429   */\n      dup3\n        /* \"#utility.yul\":16416:16434   */\n      add\n        /* \"#utility.yul\":16408:16434   */\n      swap1\n      pop\n        /* \"#utility.yul\":16480:16489   */\n      dup2\n        /* \"#utility.yul\":16474:16478   */\n      dup2\n        /* \"#utility.yul\":16470:16490   */\n      sub\n        /* \"#utility.yul\":16466:16467   */\n      0x00\n        /* \"#utility.yul\":16455:16464   */\n      dup4\n        /* \"#utility.yul\":16451:16468   */\n      add\n        /* \"#utility.yul\":16444:16491   */\n      mstore\n        /* \"#utility.yul\":16508:16639   */\n      tag_334\n        /* \"#utility.yul\":16634:16638   */\n      dup2\n        /* \"#utility.yul\":16508:16639   */\n      tag_182\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":16500:16639   */\n      swap1\n      pop\n        /* \"#utility.yul\":16227:16646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16652:16832   */\n    tag_183:\n        /* \"#utility.yul\":16700:16777   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16697:16698   */\n      0x00\n        /* \"#utility.yul\":16690:16778   */\n      mstore\n        /* \"#utility.yul\":16797:16801   */\n      0x11\n        /* \"#utility.yul\":16794:16795   */\n      0x04\n        /* \"#utility.yul\":16787:16802   */\n      mstore\n        /* \"#utility.yul\":16821:16825   */\n      0x24\n        /* \"#utility.yul\":16818:16819   */\n      0x00\n        /* \"#utility.yul\":16811:16826   */\n      revert\n        /* \"#utility.yul\":16838:17248   */\n    tag_112:\n        /* \"#utility.yul\":16878:16885   */\n      0x00\n        /* \"#utility.yul\":16901:16921   */\n      tag_337\n        /* \"#utility.yul\":16919:16920   */\n      dup3\n        /* \"#utility.yul\":16901:16921   */\n      tag_143\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":16896:16921   */\n      swap2\n      pop\n        /* \"#utility.yul\":16935:16955   */\n      tag_338\n        /* \"#utility.yul\":16953:16954   */\n      dup4\n        /* \"#utility.yul\":16935:16955   */\n      tag_143\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":16930:16955   */\n      swap3\n      pop\n        /* \"#utility.yul\":16990:16991   */\n      dup3\n        /* \"#utility.yul\":16987:16988   */\n      dup3\n        /* \"#utility.yul\":16983:16992   */\n      mul\n        /* \"#utility.yul\":17012:17042   */\n      tag_339\n        /* \"#utility.yul\":17030:17041   */\n      dup2\n        /* \"#utility.yul\":17012:17042   */\n      tag_143\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":17001:17042   */\n      swap2\n      pop\n        /* \"#utility.yul\":17191:17192   */\n      dup3\n        /* \"#utility.yul\":17182:17189   */\n      dup3\n        /* \"#utility.yul\":17178:17193   */\n      div\n        /* \"#utility.yul\":17175:17176   */\n      dup5\n        /* \"#utility.yul\":17172:17194   */\n      eq\n        /* \"#utility.yul\":17152:17153   */\n      dup4\n        /* \"#utility.yul\":17145:17154   */\n      iszero\n        /* \"#utility.yul\":17125:17208   */\n      or\n        /* \"#utility.yul\":17102:17241   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":17221:17239   */\n      tag_341\n      tag_183\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":17102:17241   */\n    tag_340:\n        /* \"#utility.yul\":16886:17248   */\n      pop\n        /* \"#utility.yul\":16838:17248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17254:17445   */\n    tag_114:\n        /* \"#utility.yul\":17294:17297   */\n      0x00\n        /* \"#utility.yul\":17313:17333   */\n      tag_343\n        /* \"#utility.yul\":17331:17332   */\n      dup3\n        /* \"#utility.yul\":17313:17333   */\n      tag_143\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":17308:17333   */\n      swap2\n      pop\n        /* \"#utility.yul\":17347:17367   */\n      tag_344\n        /* \"#utility.yul\":17365:17366   */\n      dup4\n        /* \"#utility.yul\":17347:17367   */\n      tag_143\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":17342:17367   */\n      swap3\n      pop\n        /* \"#utility.yul\":17390:17391   */\n      dup3\n        /* \"#utility.yul\":17387:17388   */\n      dup3\n        /* \"#utility.yul\":17383:17392   */\n      add\n        /* \"#utility.yul\":17376:17392   */\n      swap1\n      pop\n        /* \"#utility.yul\":17411:17414   */\n      dup1\n        /* \"#utility.yul\":17408:17409   */\n      dup3\n        /* \"#utility.yul\":17405:17415   */\n      gt\n        /* \"#utility.yul\":17402:17438   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":17418:17436   */\n      tag_346\n      tag_183\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":17402:17438   */\n    tag_345:\n        /* \"#utility.yul\":17254:17445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17451:17631   */\n    tag_121:\n        /* \"#utility.yul\":17499:17576   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17496:17497   */\n      0x00\n        /* \"#utility.yul\":17489:17577   */\n      mstore\n        /* \"#utility.yul\":17596:17600   */\n      0x32\n        /* \"#utility.yul\":17593:17594   */\n      0x04\n        /* \"#utility.yul\":17586:17601   */\n      mstore\n        /* \"#utility.yul\":17620:17624   */\n      0x24\n        /* \"#utility.yul\":17617:17618   */\n      0x00\n        /* \"#utility.yul\":17610:17625   */\n      revert\n        /* \"#utility.yul\":17637:17808   */\n    tag_134:\n        /* \"#utility.yul\":17676:17679   */\n      0x00\n        /* \"#utility.yul\":17699:17723   */\n      tag_349\n        /* \"#utility.yul\":17717:17722   */\n      dup3\n        /* \"#utility.yul\":17699:17723   */\n      tag_143\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":17690:17723   */\n      swap2\n      pop\n        /* \"#utility.yul\":17745:17749   */\n      0x00\n        /* \"#utility.yul\":17738:17743   */\n      dup3\n        /* \"#utility.yul\":17735:17750   */\n      sub\n        /* \"#utility.yul\":17732:17773   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":17753:17771   */\n      tag_351\n      tag_183\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":17732:17773   */\n    tag_350:\n        /* \"#utility.yul\":17800:17801   */\n      0x01\n        /* \"#utility.yul\":17793:17798   */\n      dup3\n        /* \"#utility.yul\":17789:17802   */\n      sub\n        /* \"#utility.yul\":17782:17802   */\n      swap1\n      pop\n        /* \"#utility.yul\":17637:17808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17814:17996   */\n    tag_184:\n        /* \"#utility.yul\":17954:17988   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":17950:17951   */\n      0x00\n        /* \"#utility.yul\":17942:17948   */\n      dup3\n        /* \"#utility.yul\":17938:17952   */\n      add\n        /* \"#utility.yul\":17931:17989   */\n      mstore\n        /* \"#utility.yul\":17814:17996   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18002:18368   */\n    tag_185:\n        /* \"#utility.yul\":18144:18147   */\n      0x00\n        /* \"#utility.yul\":18165:18232   */\n      tag_354\n        /* \"#utility.yul\":18229:18231   */\n      0x20\n        /* \"#utility.yul\":18224:18227   */\n      dup4\n        /* \"#utility.yul\":18165:18232   */\n      tag_139\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":18158:18232   */\n      swap2\n      pop\n        /* \"#utility.yul\":18241:18334   */\n      tag_355\n        /* \"#utility.yul\":18330:18333   */\n      dup3\n        /* \"#utility.yul\":18241:18334   */\n      tag_184\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":18359:18361   */\n      0x20\n        /* \"#utility.yul\":18354:18357   */\n      dup3\n        /* \"#utility.yul\":18350:18362   */\n      add\n        /* \"#utility.yul\":18343:18362   */\n      swap1\n      pop\n        /* \"#utility.yul\":18002:18368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18374:18793   */\n    tag_137:\n        /* \"#utility.yul\":18540:18544   */\n      0x00\n        /* \"#utility.yul\":18578:18580   */\n      0x20\n        /* \"#utility.yul\":18567:18576   */\n      dup3\n        /* \"#utility.yul\":18563:18581   */\n      add\n        /* \"#utility.yul\":18555:18581   */\n      swap1\n      pop\n        /* \"#utility.yul\":18627:18636   */\n      dup2\n        /* \"#utility.yul\":18621:18625   */\n      dup2\n        /* \"#utility.yul\":18617:18637   */\n      sub\n        /* \"#utility.yul\":18613:18614   */\n      0x00\n        /* \"#utility.yul\":18602:18611   */\n      dup4\n        /* \"#utility.yul\":18598:18615   */\n      add\n        /* \"#utility.yul\":18591:18638   */\n      mstore\n        /* \"#utility.yul\":18655:18786   */\n      tag_357\n        /* \"#utility.yul\":18781:18785   */\n      dup2\n        /* \"#utility.yul\":18655:18786   */\n      tag_185\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":18647:18786   */\n      swap1\n      pop\n        /* \"#utility.yul\":18374:18793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e574f3b747ca233c4d159f4a8f446b4d552f839ecd9e7f3dd54cfefe3fd1455f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1365": {
									"entryPoint": null,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600981526020017f54696e7920426f6f7000000000000000000000000000000000000000000000008152506003908162000058919062000320565b506040518060400160405280600481526020017f426f6f7000000000000000000000000000000000000000000000000000000000815250600490816200009f919062000320565b5062000407565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012857607f821691505b6020821081036200013e576200013d620000e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000169565b620001b4868362000169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000201620001fb620001f584620001cc565b620001d6565b620001cc565b9050919050565b6000819050919050565b6200021d83620001e0565b620002356200022c8262000208565b84845462000176565b825550505050565b600090565b6200024c6200023d565b6200025981848462000212565b505050565b5b8181101562000281576200027560008262000242565b6001810190506200025f565b5050565b601f821115620002d0576200029a8162000144565b620002a58462000159565b81016020851015620002b5578190505b620002cd620002c48562000159565b8301826200025e565b50505b505050565b600082821c905092915050565b6000620002f560001984600802620002d5565b1980831691505092915050565b6000620003108383620002e2565b9150826002028217905092915050565b6200032b82620000a6565b67ffffffffffffffff811115620003475762000346620000b1565b5b6200035382546200010f565b6200036082828562000285565b600060209050601f83116001811462000398576000841562000383578287015190505b6200038f858262000302565b865550620003ff565b601f198416620003a88662000144565b60005b82811015620003d257848901518255600182019150602085019450602081019050620003ab565b86831015620003f25784890151620003ee601f891682620002e2565b8355505b6001600288020188555050505b505050505050565b6114ba80620004176000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389de1f5f1161005b57806389de1f5f1461011757806395d89b4114610147578063a9059cbb14610165578063eb55bc6b1461019557610088565b806306fdde031461008d57806318160ddd146100ab578063313ce567146100c957806370a08231146100e7575b600080fd5b6100956101c5565b6040516100a29190610b2a565b60405180910390f35b6100b3610257565b6040516100c09190610b65565b60405180910390f35b6100d1610261565b6040516100de9190610b9c565b60405180910390f35b61010160048036038101906100fc9190610c29565b61026a565b60405161010e9190610b65565b60405180910390f35b610131600480360381019061012c9190610d8b565b6102b2565b60405161013e9190610b65565b60405180910390f35b61014f6102e0565b60405161015c9190610b2a565b60405180910390f35b61017f600480360381019061017a9190610e00565b610372565b60405161018c9190610e5b565b60405180910390f35b6101af60048036038101906101aa9190610e76565b610395565b6040516101bc9190610b65565b60405180910390f35b6060600380546101d490610ee5565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610ee5565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b6000600254905090565b60006001905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6060600480546102ef90610ee5565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90610ee5565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60008061037d6104ff565b905061038a818585610507565b600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc90610f62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b90610fce565b60405180910390fd5b606080606061048286610831565b925061048d85610831565b9150826040516020016104a09190611076565b604051602081830303815290604052905080826040516020016104c4929190611098565b60405160208183030381529060405290506001816040516104e591906110bc565b908152602001604051809103902054935050505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90611145565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc906111d7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611269565b60405180910390fd5b6001811015610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e906112fb565b60405180910390fd5b60038111156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d2906112fb565b60405180910390fd5b60608060606106e933610831565b92506106f485610831565b9150826040516020016107079190611076565b6040516020818303038152906040529050808260405160200161072b929190611098565b604051602081830303815290604052905083600260008282540192505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550836001826040516107a991906110bc565b9081526020016040518091039020600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516108219190610b65565b60405180910390a3505050505050565b60606108578273ffffffffffffffffffffffffffffffffffffffff16601460ff1661085e565b9050919050565b606060006002836002610871919061134a565b61087b919061138c565b67ffffffffffffffff81111561089457610893610c60565b5b6040519080825280601f01601f1916602001820160405280156108c65781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106108fe576108fd6113c0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610962576109616113c0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026109a2919061134a565b6109ac919061138c565b90505b6001811115610a4c577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106109ee576109ed6113c0565b5b1a60f81b828281518110610a0557610a046113c0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610a45906113ef565b90506109af565b5060008414610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8790611464565b60405180910390fd5b8091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad4578082015181840152602081019050610ab9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610afc82610a9a565b610b068185610aa5565b9350610b16818560208601610ab6565b610b1f81610ae0565b840191505092915050565b60006020820190508181036000830152610b448184610af1565b905092915050565b6000819050919050565b610b5f81610b4c565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b600060ff82169050919050565b610b9681610b80565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf682610bcb565b9050919050565b610c0681610beb565b8114610c1157600080fd5b50565b600081359050610c2381610bfd565b92915050565b600060208284031215610c3f57610c3e610bc1565b5b6000610c4d84828501610c14565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c9882610ae0565b810181811067ffffffffffffffff82111715610cb757610cb6610c60565b5b80604052505050565b6000610cca610bb7565b9050610cd68282610c8f565b919050565b600067ffffffffffffffff821115610cf657610cf5610c60565b5b610cff82610ae0565b9050602081019050919050565b82818337600083830152505050565b6000610d2e610d2984610cdb565b610cc0565b905082815260208101848484011115610d4a57610d49610c5b565b5b610d55848285610d0c565b509392505050565b600082601f830112610d7257610d71610c56565b5b8135610d82848260208601610d1b565b91505092915050565b600060208284031215610da157610da0610bc1565b5b600082013567ffffffffffffffff811115610dbf57610dbe610bc6565b5b610dcb84828501610d5d565b91505092915050565b610ddd81610b4c565b8114610de857600080fd5b50565b600081359050610dfa81610dd4565b92915050565b60008060408385031215610e1757610e16610bc1565b5b6000610e2585828601610c14565b9250506020610e3685828601610deb565b9150509250929050565b60008115159050919050565b610e5581610e40565b82525050565b6000602082019050610e706000830184610e4c565b92915050565b60008060408385031215610e8d57610e8c610bc1565b5b6000610e9b85828601610c14565b9250506020610eac85828601610c14565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610efd57607f821691505b602082108103610f1057610f0f610eb6565b5b50919050565b7f426f6f702053656e646572206164647265737320696e76616c69640000000000600082015250565b6000610f4c601b83610aa5565b9150610f5782610f16565b602082019050919050565b60006020820190508181036000830152610f7b81610f3f565b9050919050565b7f426f6f70205265636569766572206164647265737320696e76616c6964000000600082015250565b6000610fb8601d83610aa5565b9150610fc382610f82565b602082019050919050565b60006020820190508181036000830152610fe781610fab565b9050919050565b600081905092915050565b600061100482610a9a565b61100e8185610fee565b935061101e818560208601610ab6565b80840191505092915050565b7f5f5f000000000000000000000000000000000000000000000000000000000000600082015250565b6000611060600283610fee565b915061106b8261102a565b600282019050919050565b60006110828284610ff9565b915061108d82611053565b915081905092915050565b60006110a48285610ff9565b91506110b08284610ff9565b91508190509392505050565b60006110c88284610ff9565b915081905092915050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061112f602583610aa5565b915061113a826110d3565b604082019050919050565b6000602082019050818103600083015261115e81611122565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006111c1602383610aa5565b91506111cc82611165565b604082019050919050565b600060208201905081810360008301526111f0816111b4565b9050919050565b7f4865792120596f752063616e27742074727920746f20626f6f7020796f75727360008201527f656c6621203e3a63000000000000000000000000000000000000000000000000602082015250565b6000611253602883610aa5565b915061125e826111f7565b604082019050919050565b6000602082019050818103600083015261128281611246565b9050919050565b7f43616c6d20796f7572206372617a79207061772120426f6f702056616c75652060008201527f6d757374206265206265747765656e203120746f203300000000000000000000602082015250565b60006112e5603683610aa5565b91506112f082611289565b604082019050919050565b60006020820190508181036000830152611314816112d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135582610b4c565b915061136083610b4c565b925082820261136e81610b4c565b915082820484148315176113855761138461131b565b5b5092915050565b600061139782610b4c565b91506113a283610b4c565b92508282019050808211156113ba576113b961131b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113fa82610b4c565b91506000820361140d5761140c61131b565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061144e602083610aa5565b915061145982611418565b602082019050919050565b6000602082019050818103600083015261147d81611441565b905091905056fea2646970667358221220e574f3b747ca233c4d159f4a8f446b4d552f839ecd9e7f3dd54cfefe3fd1455f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54696E7920426F6F700000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP2 PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x320 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F6F7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH3 0x9F SWAP2 SWAP1 PUSH3 0x320 JUMP JUMPDEST POP PUSH3 0x407 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x128 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x13E JUMPI PUSH3 0x13D PUSH3 0xE0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1A8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x169 JUMP JUMPDEST PUSH3 0x1B4 DUP7 DUP4 PUSH3 0x169 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x201 PUSH3 0x1FB PUSH3 0x1F5 DUP5 PUSH3 0x1CC JUMP JUMPDEST PUSH3 0x1D6 JUMP JUMPDEST PUSH3 0x1CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21D DUP4 PUSH3 0x1E0 JUMP JUMPDEST PUSH3 0x235 PUSH3 0x22C DUP3 PUSH3 0x208 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x176 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x24C PUSH3 0x23D JUMP JUMPDEST PUSH3 0x259 DUP2 DUP5 DUP5 PUSH3 0x212 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x281 JUMPI PUSH3 0x275 PUSH1 0x0 DUP3 PUSH3 0x242 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x25F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D0 JUMPI PUSH3 0x29A DUP2 PUSH3 0x144 JUMP JUMPDEST PUSH3 0x2A5 DUP5 PUSH3 0x159 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2B5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2CD PUSH3 0x2C4 DUP6 PUSH3 0x159 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x25E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2D5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x310 DUP4 DUP4 PUSH3 0x2E2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x32B DUP3 PUSH3 0xA6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x347 JUMPI PUSH3 0x346 PUSH3 0xB1 JUMP JUMPDEST JUMPDEST PUSH3 0x353 DUP3 SLOAD PUSH3 0x10F JUMP JUMPDEST PUSH3 0x360 DUP3 DUP3 DUP6 PUSH3 0x285 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x398 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x383 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x38F DUP6 DUP3 PUSH3 0x302 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3FF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3A8 DUP7 PUSH3 0x144 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3D2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3AB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3F2 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3EE PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2E2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14BA DUP1 PUSH3 0x417 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89DE1F5F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x89DE1F5F EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xEB55BC6B EQ PUSH2 0x195 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D4 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x200 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x222 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x230 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x368 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x368 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37D PUSH2 0x4FF JUMP JUMPDEST SWAP1 POP PUSH2 0x38A DUP2 DUP6 DUP6 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP1 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46B SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x482 DUP7 PUSH2 0x831 JUMP JUMPDEST SWAP3 POP PUSH2 0x48D DUP6 PUSH2 0x831 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C4 SWAP3 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56D SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x6E9 CALLER PUSH2 0x831 JUMP JUMPDEST SWAP3 POP PUSH2 0x6F4 DUP6 PUSH2 0x831 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72B SWAP3 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x857 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x85E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0xC60 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x962 JUMPI PUSH2 0x961 PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA4C JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xA45 SWAP1 PUSH2 0x13EF JUMP JUMPDEST SWAP1 POP PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0xB06 DUP2 DUP6 PUSH2 0xAA5 JUMP JUMPDEST SWAP4 POP PUSH2 0xB16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xAE0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB44 DUP2 DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5F DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xB80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF6 DUP3 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0xBEB JUMP JUMPDEST DUP2 EQ PUSH2 0xC11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC23 DUP2 PUSH2 0xBFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH2 0xC3E PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC4D DUP5 DUP3 DUP6 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC98 DUP3 PUSH2 0xAE0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCB7 JUMPI PUSH2 0xCB6 PUSH2 0xC60 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP PUSH2 0xCD6 DUP3 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF5 PUSH2 0xC60 JUMP JUMPDEST JUMPDEST PUSH2 0xCFF DUP3 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2E PUSH2 0xD29 DUP5 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0xC5B JUMP JUMPDEST JUMPDEST PUSH2 0xD55 DUP5 DUP3 DUP6 PUSH2 0xD0C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD72 JUMPI PUSH2 0xD71 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD82 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xBC6 JUMP JUMPDEST JUMPDEST PUSH2 0xDCB DUP5 DUP3 DUP6 ADD PUSH2 0xD5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDD DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP2 EQ PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDFA DUP2 PUSH2 0xDD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE17 JUMPI PUSH2 0xE16 PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE25 DUP6 DUP3 DUP7 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE36 DUP6 DUP3 DUP7 ADD PUSH2 0xDEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE55 DUP2 PUSH2 0xE40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8C PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9B DUP6 DUP3 DUP7 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEAC DUP6 DUP3 DUP7 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEFD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF10 JUMPI PUSH2 0xF0F PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F702053656E646572206164647265737320696E76616C69640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4C PUSH1 0x1B DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF57 DUP3 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7B DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F70205265636569766572206164647265737320696E76616C6964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB8 PUSH1 0x1D DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC3 DUP3 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFE7 DUP2 PUSH2 0xFAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1004 DUP3 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x100E DUP2 DUP6 PUSH2 0xFEE JUMP JUMPDEST SWAP4 POP PUSH2 0x101E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F5F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1060 PUSH1 0x2 DUP4 PUSH2 0xFEE JUMP JUMPDEST SWAP2 POP PUSH2 0x106B DUP3 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 DUP3 DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x108D DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A4 DUP3 DUP6 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B0 DUP3 DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C8 DUP3 DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112F PUSH1 0x25 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x113A DUP3 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x115E DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C1 PUSH1 0x23 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CC DUP3 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F0 DUP2 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865792120596F752063616E27742074727920746F20626F6F7020796F757273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656C6621203E3A63000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1253 PUSH1 0x28 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x125E DUP3 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1282 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6D20796F7572206372617A79207061772120426F6F702056616C756520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D757374206265206265747765656E203120746F203300000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E5 PUSH1 0x36 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F0 DUP3 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1314 DUP2 PUSH2 0x12D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x136E DUP2 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x131B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1397 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH2 0x13A2 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13BA JUMPI PUSH2 0x13B9 PUSH2 0x131B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13FA DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x131B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144E PUSH1 0x20 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1459 DUP3 PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147D DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH21 0xF3B747CA233C4D159F4A8F446B4D552F839ECD9E7F RETURNDATASIZE 0xD5 0x4C INVALID INVALID EXTCODEHASH 0xD1 GASLIMIT 0x5F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "660:3230:6:-:0;;;1068:76;;;;;;;;;;1092:19;;;;;;;;;;;;;;;;;:5;:19;;;;;;:::i;:::-;;1121:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;:::i;:::-;;660:3230;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;660:3230:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balances_pair_1339": {
									"entryPoint": 690,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_114": {
									"entryPoint": 1279,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1635": {
									"entryPoint": 1287,
									"id": 1635,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOf_1488": {
									"entryPoint": 618,
									"id": 1488,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balancePairOf_1476": {
									"entryPoint": 917,
									"id": 1476,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_1389": {
									"entryPoint": 609,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_1373": {
									"entryPoint": 453,
									"id": 1373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_1381": {
									"entryPoint": 736,
									"id": 1381,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_307": {
									"entryPoint": 2142,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_327": {
									"entryPoint": 2097,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1397": {
									"entryPoint": 599,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transfer_1511": {
									"entryPoint": 882,
									"id": 1511,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18796:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1415:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1404:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1376:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1386:7:7",
														"type": ""
													}
												],
												"src": "1349:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1514:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1537:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1519:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1485:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1492:3:7",
														"type": ""
													}
												],
												"src": "1432:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1664:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1676:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1664:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1744:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1757:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1768:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1753:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1700:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1626:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1638:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1649:4:7",
														"type": ""
													}
												],
												"src": "1556:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1827:43:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1837:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1852:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1859:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1848:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1837:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1809:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1819:7:7",
														"type": ""
													}
												],
												"src": "1784:86:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1975:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1959:15:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1947:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1925:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1932:3:7",
														"type": ""
													}
												],
												"src": "1876:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:120:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2110:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2134:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2134:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2060:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2072:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2083:4:7",
														"type": ""
													}
												],
												"src": "1994:214:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2274:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2247:6:7",
														"type": ""
													}
												],
												"src": "2214:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2394:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2295:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2418:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2611:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2596:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2578:7:7",
														"type": ""
													}
												],
												"src": "2541:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2728:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2757:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2739:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2728:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2700:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2710:7:7",
														"type": ""
													}
												],
												"src": "2673:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2884:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2841:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2866:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2848:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2848:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2838:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:43:7"
															},
															"nodeType": "YulIf",
															"src": "2828:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2811:5:7",
														"type": ""
													}
												],
												"src": "2775:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2965:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2987:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2974:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2965:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3003:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3003:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2933:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2941:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2949:5:7",
														"type": ""
													}
												],
												"src": "2903:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3114:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3160:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3162:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3162:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3162:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3135:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3127:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3127:32:7"
															},
															"nodeType": "YulIf",
															"src": "3124:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3253:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3268:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3272:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3297:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3332:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3343:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3328:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3328:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3352:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3307:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3297:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3084:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3095:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3107:6:7",
														"type": ""
													}
												],
												"src": "3048:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3472:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3492:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3482:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3482:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3482:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3383:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3605:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3506:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3657:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3677:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3667:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3771:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3774:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3764:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3795:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3798:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3788:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3629:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3868:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3890:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3920:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3898:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3872:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4037:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4039:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4039:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4039:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3980:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3992:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3977:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3977:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4016:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4028:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4013:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3974:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:62:7"
															},
															"nodeType": "YulIf",
															"src": "3971:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4075:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4079:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4068:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3844:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3852:4:7",
														"type": ""
													}
												],
												"src": "3815:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4143:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4153:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4163:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4153:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4220:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4192:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4127:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4136:6:7",
														"type": ""
													}
												],
												"src": "4102:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4304:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4409:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4411:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4411:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4411:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4381:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4389:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4378:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:30:7"
															},
															"nodeType": "YulIf",
															"src": "4375:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4441:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4471:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4449:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4441:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4515:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4527:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4533:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4515:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4288:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4299:4:7",
														"type": ""
													}
												],
												"src": "4237:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4615:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4638:3:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4643:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4625:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4625:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4675:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4680:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4671:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4671:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4689:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4664:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4597:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4602:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4607:6:7",
														"type": ""
													}
												],
												"src": "4551:146:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4787:341:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4797:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4864:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4822:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4806:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4797:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4888:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4895:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4881:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4881:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4881:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4911:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4926:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4933:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4922:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4915:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4976:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4978:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4978:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4978:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4957:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4962:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4953:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4953:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4971:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4950:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:25:7"
															},
															"nodeType": "YulIf",
															"src": "4947:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5105:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5110:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5115:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5068:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4760:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4765:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4773:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4781:5:7",
														"type": ""
													}
												],
												"src": "4703:425:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5210:278:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5259:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5261:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5261:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5261:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:35:7"
															},
															"nodeType": "YulIf",
															"src": "5220:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5351:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5378:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5365:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5365:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5355:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5394:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5455:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5463:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5470:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5403:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5394:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5188:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5196:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5204:5:7",
														"type": ""
													}
												],
												"src": "5148:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5570:433:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5616:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5618:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5618:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5618:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5591:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5600:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5587:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5583:32:7"
															},
															"nodeType": "YulIf",
															"src": "5580:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5709:287:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5724:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5755:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5766:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5751:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5751:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5738:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5738:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5728:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5816:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5818:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5818:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5818:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5788:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5796:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5785:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5785:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "5782:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5913:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5958:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5969:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5954:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5954:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5978:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5923:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5913:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5540:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5551:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5563:6:7",
														"type": ""
													}
												],
												"src": "5494:509:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6052:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6109:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6118:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6121:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6111:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6111:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6111:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6075:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6100:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6082:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6082:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6072:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6072:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:43:7"
															},
															"nodeType": "YulIf",
															"src": "6062:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6045:5:7",
														"type": ""
													}
												],
												"src": "6009:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6199:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6221:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6208:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6199:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6264:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6237:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6237:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6167:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6183:5:7",
														"type": ""
													}
												],
												"src": "6137:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6365:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6411:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6413:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6413:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6413:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6386:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6395:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6407:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6378:32:7"
															},
															"nodeType": "YulIf",
															"src": "6375:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6504:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6519:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6533:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6523:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6548:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6583:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6594:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6579:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6579:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6603:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6558:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6558:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6548:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6631:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6646:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6650:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6676:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6711:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6722:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6707:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6707:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6731:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6686:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6686:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6676:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6327:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6338:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6350:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6358:6:7",
														"type": ""
													}
												],
												"src": "6282:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6804:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6814:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6839:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6832:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6832:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6825:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6814:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6786:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6796:7:7",
														"type": ""
													}
												],
												"src": "6762:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6917:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6954:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6939:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6939:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6927:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6927:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6905:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6912:3:7",
														"type": ""
													}
												],
												"src": "6858:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7065:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7075:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7087:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7098:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7083:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7075:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7149:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7162:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7173:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7158:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7158:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7111:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7111:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7037:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7049:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7060:4:7",
														"type": ""
													}
												],
												"src": "6973:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7272:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7318:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7320:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7320:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7320:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7293:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7302:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7289:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7289:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7314:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:32:7"
															},
															"nodeType": "YulIf",
															"src": "7282:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7411:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7426:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7430:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7455:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7490:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7501:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7486:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7486:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7510:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7465:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7465:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7455:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7538:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7553:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7567:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7557:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7583:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7618:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7629:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7614:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7614:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7638:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7593:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7593:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7583:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7234:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7245:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7257:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7265:6:7",
														"type": ""
													}
												],
												"src": "7189:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7714:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7811:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7814:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7804:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7835:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7838:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7828:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7669:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7906:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7916:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7930:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7936:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7916:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7947:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7977:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7973:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7951:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8024:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8038:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8052:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8060:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8048:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8048:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8038:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8004:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7997:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7997:26:7"
															},
															"nodeType": "YulIf",
															"src": "7994:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8127:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8141:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8141:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8141:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8091:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8114:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8122:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8111:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8111:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8088:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8088:38:7"
															},
															"nodeType": "YulIf",
															"src": "8085:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7890:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7899:6:7",
														"type": ""
													}
												],
												"src": "7855:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8287:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8309:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8317:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8305:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:14:7"
																	},
																	{
																		"hexValue": "426f6f702053656e646572206164647265737320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8321:29:7",
																		"type": "",
																		"value": "Boop Sender address invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8298:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8298:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8279:6:7",
														"type": ""
													}
												],
												"src": "8181:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8510:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8520:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8586:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8591:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8527:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8520:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8692:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																	"nodeType": "YulIdentifier",
																	"src": "8603:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8603:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8603:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8705:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8716:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8721:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8712:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8705:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8498:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8506:3:7",
														"type": ""
													}
												],
												"src": "8364:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8917:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8925:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8925:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8917:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8964:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8975:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8960:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8960:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8983:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8989:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8979:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8979:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8953:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8953:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9009:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9143:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9017:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9009:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8887:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8902:4:7",
														"type": ""
													}
												],
												"src": "8736:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9267:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9289:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9297:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9285:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9285:14:7"
																	},
																	{
																		"hexValue": "426f6f70205265636569766572206164647265737320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9301:31:7",
																		"type": "",
																		"value": "Boop Receiver address invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9278:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9278:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9278:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9259:6:7",
														"type": ""
													}
												],
												"src": "9161:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9492:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9502:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9568:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9573:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9509:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9674:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																	"nodeType": "YulIdentifier",
																	"src": "9585:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9585:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9585:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9687:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9698:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9694:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9480:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9488:3:7",
														"type": ""
													}
												],
												"src": "9346:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9889:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9899:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9911:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9922:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9907:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9899:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9946:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9957:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9942:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9942:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9965:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9971:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9935:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9935:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9935:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9991:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10125:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9999:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9991:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9869:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9884:4:7",
														"type": ""
													}
												],
												"src": "9718:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10257:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10267:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10282:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10267:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10229:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10234:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10245:11:7",
														"type": ""
													}
												],
												"src": "10143:148:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10407:280:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10417:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10464:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10431:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10431:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10421:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10479:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10563:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10568:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10486:76:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:89:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10479:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10623:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10630:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10619:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10637:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10642:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10584:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10584:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10584:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10658:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10669:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10674:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10665:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10665:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10658:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10388:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10395:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10403:3:7",
														"type": ""
													}
												],
												"src": "10297:390:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10799:46:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10821:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10829:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10817:14:7"
																	},
																	{
																		"hexValue": "5f5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10833:4:7",
																		"type": "",
																		"value": "__"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10791:6:7",
														"type": ""
													}
												],
												"src": "10693:152:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11015:236:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11025:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11109:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11114:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11032:76:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11025:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11214:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																	"nodeType": "YulIdentifier",
																	"src": "11125:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11125:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11227:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11238:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11243:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11234:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11234:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11227:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11003:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11011:3:7",
														"type": ""
													}
												],
												"src": "10851:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11494:304:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11505:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11594:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11603:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11512:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11512:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11617:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11768:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11624:142:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11624:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11617:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11782:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11789:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11782:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11473:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11479:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11490:3:7",
														"type": ""
													}
												],
												"src": "11257:541:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11988:251:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11999:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12088:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12097:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12006:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12006:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11999:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12111:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12200:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12209:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12118:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12118:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12111:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12223:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12230:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12223:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11959:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11965:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11973:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11984:3:7",
														"type": ""
													}
												],
												"src": "11804:435:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12381:139:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12392:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12481:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12490:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12399:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12399:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12392:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12504:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12511:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12504:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12360:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12366:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12377:3:7",
														"type": ""
													}
												],
												"src": "12245:275:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12632:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12654:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12662:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12650:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12650:14:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12666:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12643:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12643:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12643:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12722:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12730:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12718:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12718:15:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12735:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12711:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12711:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12711:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12624:6:7",
														"type": ""
													}
												],
												"src": "12526:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12902:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12912:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12978:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12983:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12919:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12919:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12912:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13084:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "12995:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12995:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13097:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13108:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13104:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13104:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13097:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12890:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12898:3:7",
														"type": ""
													}
												],
												"src": "12756:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13299:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13309:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13321:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13332:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13317:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13317:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13309:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13356:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13367:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13352:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13375:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13381:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13371:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13345:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13345:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13345:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13401:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13535:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13409:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13409:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13401:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13279:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13294:4:7",
														"type": ""
													}
												],
												"src": "13128:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13659:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13681:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13689:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13677:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13677:14:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13693:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13670:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13670:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13670:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13749:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13757:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13745:15:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13762:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13738:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13738:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13651:6:7",
														"type": ""
													}
												],
												"src": "13553:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13927:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13937:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14003:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14008:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13944:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13944:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14109:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "14020:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14020:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14020:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14122:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14133:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14138:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14129:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14129:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14122:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13915:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13923:3:7",
														"type": ""
													}
												],
												"src": "13781:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14324:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14334:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14346:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14357:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14342:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14342:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14334:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14381:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14392:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14377:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14377:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14400:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14406:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14396:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14396:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14370:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14370:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14370:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14426:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14560:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14434:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14434:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14426:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14304:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14319:4:7",
														"type": ""
													}
												],
												"src": "14153:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14684:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14706:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14714:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14702:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14702:14:7"
																	},
																	{
																		"hexValue": "4865792120596f752063616e27742074727920746f20626f6f7020796f757273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14718:34:7",
																		"type": "",
																		"value": "Hey! You can't try to boop yours"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14695:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14774:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14782:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14770:15:7"
																	},
																	{
																		"hexValue": "656c6621203e3a63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14787:10:7",
																		"type": "",
																		"value": "elf! >:c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14763:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14763:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14763:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14676:6:7",
														"type": ""
													}
												],
												"src": "14578:227:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14957:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14967:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15033:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15038:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14974:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14974:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14967:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15139:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																	"nodeType": "YulIdentifier",
																	"src": "15050:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15050:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15050:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15152:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15163:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15168:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15159:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15159:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15152:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14945:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14953:3:7",
														"type": ""
													}
												],
												"src": "14811:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15354:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15364:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15376:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15387:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15372:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15372:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15364:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15411:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15422:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15407:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15407:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15430:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15436:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15426:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15426:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15400:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15400:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15400:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15456:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15590:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15464:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15464:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15456:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15334:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15349:4:7",
														"type": ""
													}
												],
												"src": "15183:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15714:135:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15736:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15744:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15732:14:7"
																	},
																	{
																		"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c756520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15748:34:7",
																		"type": "",
																		"value": "Calm your crazy paw! Boop Value "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15725:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15725:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15804:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15812:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15800:15:7"
																	},
																	{
																		"hexValue": "6d757374206265206265747765656e203120746f2033",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15817:24:7",
																		"type": "",
																		"value": "must be between 1 to 3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15793:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15793:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15793:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15706:6:7",
														"type": ""
													}
												],
												"src": "15608:241:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16001:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16011:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16077:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16082:2:7",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16018:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16018:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16011:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16183:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																	"nodeType": "YulIdentifier",
																	"src": "16094:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16094:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16094:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16196:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16207:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16212:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16203:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16203:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16196:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15989:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15997:3:7",
														"type": ""
													}
												],
												"src": "15855:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16398:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16408:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16420:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16431:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16416:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16416:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16408:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16455:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16466:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16451:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16451:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16474:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16480:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16470:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16470:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16444:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16444:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16444:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16500:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16634:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16508:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16508:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16500:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16378:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16393:4:7",
														"type": ""
													}
												],
												"src": "16227:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16680:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16697:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16700:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16690:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16690:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16690:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16794:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16797:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16787:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16787:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16818:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16821:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16811:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16811:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16811:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16652:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16886:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16896:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16919:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16901:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16901:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16896:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16930:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16953:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16935:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16935:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16930:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16964:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16987:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16990:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16983:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "16968:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17001:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "17030:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17012:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17012:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17001:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17219:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17221:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17221:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17221:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17152:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17145:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17145:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "17175:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "17182:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "17191:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "17178:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17178:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "17172:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17172:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "17125:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17125:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17105:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17105:113:7"
															},
															"nodeType": "YulIf",
															"src": "17102:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16869:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16872:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16878:7:7",
														"type": ""
													}
												],
												"src": "16838:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17298:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17308:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17331:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17313:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17313:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17308:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17342:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17365:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17347:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17347:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17342:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17376:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17387:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17390:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17383:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17383:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17376:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17416:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17418:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17418:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17418:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17408:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "17411:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17405:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17405:10:7"
															},
															"nodeType": "YulIf",
															"src": "17402:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17285:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17288:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17294:3:7",
														"type": ""
													}
												],
												"src": "17254:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17479:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17496:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17499:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17489:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17489:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17489:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17593:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17596:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17586:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17586:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17617:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17620:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17610:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17610:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17451:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17680:128:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17690:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17717:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17699:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17699:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17690:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17751:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17753:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17753:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17753:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17738:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17745:4:7",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17735:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17735:15:7"
															},
															"nodeType": "YulIf",
															"src": "17732:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17782:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17793:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17800:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17789:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17789:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17782:3:7"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17666:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17676:3:7",
														"type": ""
													}
												],
												"src": "17637:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17920:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17942:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17950:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17938:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17938:14:7"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17954:34:7",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17931:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17931:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17931:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17912:6:7",
														"type": ""
													}
												],
												"src": "17814:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18148:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18158:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18224:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18229:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18165:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18165:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18158:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18330:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "18241:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18241:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18241:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18343:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18354:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18359:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18350:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18350:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18343:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18136:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18144:3:7",
														"type": ""
													}
												],
												"src": "18002:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18545:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18555:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18578:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18563:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18563:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18555:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18602:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18613:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18598:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18598:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18621:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18627:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18617:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18617:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18591:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18591:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18591:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18647:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18781:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18655:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18655:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18647:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18540:4:7",
														"type": ""
													}
												],
												"src": "18374:419:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708(memPtr) {\n\n        mstore(add(memPtr, 0), \"Boop Sender address invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Boop Receiver address invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead(memPtr) {\n\n        mstore(add(memPtr, 0), \"__\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hey! You can't try to boop yours\")\n\n        mstore(add(memPtr, 32), \"elf! >:c\")\n\n    }\n\n    function abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209(memPtr) {\n\n        mstore(add(memPtr, 0), \"Calm your crazy paw! Boop Value \")\n\n        mstore(add(memPtr, 32), \"must be between 1 to 3\")\n\n    }\n\n    function abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806389de1f5f1161005b57806389de1f5f1461011757806395d89b4114610147578063a9059cbb14610165578063eb55bc6b1461019557610088565b806306fdde031461008d57806318160ddd146100ab578063313ce567146100c957806370a08231146100e7575b600080fd5b6100956101c5565b6040516100a29190610b2a565b60405180910390f35b6100b3610257565b6040516100c09190610b65565b60405180910390f35b6100d1610261565b6040516100de9190610b9c565b60405180910390f35b61010160048036038101906100fc9190610c29565b61026a565b60405161010e9190610b65565b60405180910390f35b610131600480360381019061012c9190610d8b565b6102b2565b60405161013e9190610b65565b60405180910390f35b61014f6102e0565b60405161015c9190610b2a565b60405180910390f35b61017f600480360381019061017a9190610e00565b610372565b60405161018c9190610e5b565b60405180910390f35b6101af60048036038101906101aa9190610e76565b610395565b6040516101bc9190610b65565b60405180910390f35b6060600380546101d490610ee5565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610ee5565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050905090565b6000600254905090565b60006001905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6060600480546102ef90610ee5565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90610ee5565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60008061037d6104ff565b905061038a818585610507565b600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fc90610f62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b90610fce565b60405180910390fd5b606080606061048286610831565b925061048d85610831565b9150826040516020016104a09190611076565b604051602081830303815290604052905080826040516020016104c4929190611098565b60405160208183030381529060405290506001816040516104e591906110bc565b908152602001604051809103902054935050505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90611145565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc906111d7565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611269565b60405180910390fd5b6001811015610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e906112fb565b60405180910390fd5b60038111156106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d2906112fb565b60405180910390fd5b60608060606106e933610831565b92506106f485610831565b9150826040516020016107079190611076565b6040516020818303038152906040529050808260405160200161072b929190611098565b604051602081830303815290604052905083600260008282540192505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550836001826040516107a991906110bc565b9081526020016040518091039020600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516108219190610b65565b60405180910390a3505050505050565b60606108578273ffffffffffffffffffffffffffffffffffffffff16601460ff1661085e565b9050919050565b606060006002836002610871919061134a565b61087b919061138c565b67ffffffffffffffff81111561089457610893610c60565b5b6040519080825280601f01601f1916602001820160405280156108c65781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106108fe576108fd6113c0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610962576109616113c0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026109a2919061134a565b6109ac919061138c565b90505b6001811115610a4c577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106109ee576109ed6113c0565b5b1a60f81b828281518110610a0557610a046113c0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610a45906113ef565b90506109af565b5060008414610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8790611464565b60405180910390fd5b8091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad4578082015181840152602081019050610ab9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610afc82610a9a565b610b068185610aa5565b9350610b16818560208601610ab6565b610b1f81610ae0565b840191505092915050565b60006020820190508181036000830152610b448184610af1565b905092915050565b6000819050919050565b610b5f81610b4c565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b600060ff82169050919050565b610b9681610b80565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf682610bcb565b9050919050565b610c0681610beb565b8114610c1157600080fd5b50565b600081359050610c2381610bfd565b92915050565b600060208284031215610c3f57610c3e610bc1565b5b6000610c4d84828501610c14565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c9882610ae0565b810181811067ffffffffffffffff82111715610cb757610cb6610c60565b5b80604052505050565b6000610cca610bb7565b9050610cd68282610c8f565b919050565b600067ffffffffffffffff821115610cf657610cf5610c60565b5b610cff82610ae0565b9050602081019050919050565b82818337600083830152505050565b6000610d2e610d2984610cdb565b610cc0565b905082815260208101848484011115610d4a57610d49610c5b565b5b610d55848285610d0c565b509392505050565b600082601f830112610d7257610d71610c56565b5b8135610d82848260208601610d1b565b91505092915050565b600060208284031215610da157610da0610bc1565b5b600082013567ffffffffffffffff811115610dbf57610dbe610bc6565b5b610dcb84828501610d5d565b91505092915050565b610ddd81610b4c565b8114610de857600080fd5b50565b600081359050610dfa81610dd4565b92915050565b60008060408385031215610e1757610e16610bc1565b5b6000610e2585828601610c14565b9250506020610e3685828601610deb565b9150509250929050565b60008115159050919050565b610e5581610e40565b82525050565b6000602082019050610e706000830184610e4c565b92915050565b60008060408385031215610e8d57610e8c610bc1565b5b6000610e9b85828601610c14565b9250506020610eac85828601610c14565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610efd57607f821691505b602082108103610f1057610f0f610eb6565b5b50919050565b7f426f6f702053656e646572206164647265737320696e76616c69640000000000600082015250565b6000610f4c601b83610aa5565b9150610f5782610f16565b602082019050919050565b60006020820190508181036000830152610f7b81610f3f565b9050919050565b7f426f6f70205265636569766572206164647265737320696e76616c6964000000600082015250565b6000610fb8601d83610aa5565b9150610fc382610f82565b602082019050919050565b60006020820190508181036000830152610fe781610fab565b9050919050565b600081905092915050565b600061100482610a9a565b61100e8185610fee565b935061101e818560208601610ab6565b80840191505092915050565b7f5f5f000000000000000000000000000000000000000000000000000000000000600082015250565b6000611060600283610fee565b915061106b8261102a565b600282019050919050565b60006110828284610ff9565b915061108d82611053565b915081905092915050565b60006110a48285610ff9565b91506110b08284610ff9565b91508190509392505050565b60006110c88284610ff9565b915081905092915050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061112f602583610aa5565b915061113a826110d3565b604082019050919050565b6000602082019050818103600083015261115e81611122565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006111c1602383610aa5565b91506111cc82611165565b604082019050919050565b600060208201905081810360008301526111f0816111b4565b9050919050565b7f4865792120596f752063616e27742074727920746f20626f6f7020796f75727360008201527f656c6621203e3a63000000000000000000000000000000000000000000000000602082015250565b6000611253602883610aa5565b915061125e826111f7565b604082019050919050565b6000602082019050818103600083015261128281611246565b9050919050565b7f43616c6d20796f7572206372617a79207061772120426f6f702056616c75652060008201527f6d757374206265206265747765656e203120746f203300000000000000000000602082015250565b60006112e5603683610aa5565b91506112f082611289565b604082019050919050565b60006020820190508181036000830152611314816112d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135582610b4c565b915061136083610b4c565b925082820261136e81610b4c565b915082820484148315176113855761138461131b565b5b5092915050565b600061139782610b4c565b91506113a283610b4c565b92508282019050808211156113ba576113b961131b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113fa82610b4c565b91506000820361140d5761140c61131b565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061144e602083610aa5565b915061145982611418565b602082019050919050565b6000602082019050818103600083015261147d81611441565b905091905056fea2646970667358221220e574f3b747ca233c4d159f4a8f446b4d552f839ecd9e7f3dd54cfefe3fd1455f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89DE1F5F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x89DE1F5F EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xEB55BC6B EQ PUSH2 0x195 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D4 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x200 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x222 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x230 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0xEE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x368 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x368 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37D PUSH2 0x4FF JUMP JUMPDEST SWAP1 POP PUSH2 0x38A DUP2 DUP6 DUP6 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP1 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46B SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x482 DUP7 PUSH2 0x831 JUMP JUMPDEST SWAP3 POP PUSH2 0x48D DUP6 PUSH2 0x831 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C4 SWAP3 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56D SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x6E9 CALLER PUSH2 0x831 JUMP JUMPDEST SWAP3 POP PUSH2 0x6F4 DUP6 PUSH2 0x831 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72B SWAP3 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x857 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x85E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0xC60 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x962 JUMPI PUSH2 0x961 PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA4C JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x13C0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xA45 SWAP1 PUSH2 0x13EF JUMP JUMPDEST SWAP1 POP PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0xB06 DUP2 DUP6 PUSH2 0xAA5 JUMP JUMPDEST SWAP4 POP PUSH2 0xB16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xAE0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB44 DUP2 DUP5 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5F DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xB80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF6 DUP3 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0xBEB JUMP JUMPDEST DUP2 EQ PUSH2 0xC11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC23 DUP2 PUSH2 0xBFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH2 0xC3E PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC4D DUP5 DUP3 DUP6 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC98 DUP3 PUSH2 0xAE0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCB7 JUMPI PUSH2 0xCB6 PUSH2 0xC60 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP PUSH2 0xCD6 DUP3 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF5 PUSH2 0xC60 JUMP JUMPDEST JUMPDEST PUSH2 0xCFF DUP3 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2E PUSH2 0xD29 DUP5 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0xC5B JUMP JUMPDEST JUMPDEST PUSH2 0xD55 DUP5 DUP3 DUP6 PUSH2 0xD0C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD72 JUMPI PUSH2 0xD71 PUSH2 0xC56 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD82 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xBC6 JUMP JUMPDEST JUMPDEST PUSH2 0xDCB DUP5 DUP3 DUP6 ADD PUSH2 0xD5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDD DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP2 EQ PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDFA DUP2 PUSH2 0xDD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE17 JUMPI PUSH2 0xE16 PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE25 DUP6 DUP3 DUP7 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE36 DUP6 DUP3 DUP7 ADD PUSH2 0xDEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE55 DUP2 PUSH2 0xE40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8C PUSH2 0xBC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9B DUP6 DUP3 DUP7 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEAC DUP6 DUP3 DUP7 ADD PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEFD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF10 JUMPI PUSH2 0xF0F PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F702053656E646572206164647265737320696E76616C69640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4C PUSH1 0x1B DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF57 DUP3 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF7B DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6F70205265636569766572206164647265737320696E76616C6964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB8 PUSH1 0x1D DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC3 DUP3 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFE7 DUP2 PUSH2 0xFAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1004 DUP3 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x100E DUP2 DUP6 PUSH2 0xFEE JUMP JUMPDEST SWAP4 POP PUSH2 0x101E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5F5F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1060 PUSH1 0x2 DUP4 PUSH2 0xFEE JUMP JUMPDEST SWAP2 POP PUSH2 0x106B DUP3 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 DUP3 DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x108D DUP3 PUSH2 0x1053 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A4 DUP3 DUP6 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B0 DUP3 DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C8 DUP3 DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112F PUSH1 0x25 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x113A DUP3 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x115E DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C1 PUSH1 0x23 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CC DUP3 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F0 DUP2 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865792120596F752063616E27742074727920746F20626F6F7020796F757273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656C6621203E3A63000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1253 PUSH1 0x28 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x125E DUP3 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1282 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6D20796F7572206372617A79207061772120426F6F702056616C756520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D757374206265206265747765656E203120746F203300000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E5 PUSH1 0x36 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F0 DUP3 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1314 DUP2 PUSH2 0x12D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x136E DUP2 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x131B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1397 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH2 0x13A2 DUP4 PUSH2 0xB4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13BA JUMPI PUSH2 0x13B9 PUSH2 0x131B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13FA DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x131B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144E PUSH1 0x20 DUP4 PUSH2 0xAA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1459 DUP3 PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147D DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH21 0xF3B747CA233C4D159F4A8F446B4D552F839ECD9E7F RETURNDATASIZE 0xD5 0x4C INVALID INVALID EXTCODEHASH 0xD1 GASLIMIT 0x5F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "660:3230:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1451:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1364:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2324:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1265:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2477:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1571:727;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1169:89;1214:13;1246:5;1239:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:89;:::o;1451:97::-;1503:7;1529:12;;1522:19;;1451:97;:::o;1364:81::-;1413:5;1437:1;1430:8;;1364:81;:::o;2324:116::-;2389:7;2415:9;:18;2425:7;2415:18;;;;;;;;;;;;;;;;2408:25;;2324:116;;;:::o;795:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1265:93::-;1312:13;1344:7;1337:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:93;:::o;2477:180::-;2547:4;2563:13;2579:12;:10;:12::i;:::-;2563:28;;2601;2611:5;2618:2;2622:6;2601:9;:28::i;:::-;2646:4;2639:11;;;2477:180;;;;:::o;1571:727::-;1651:7;1724:1;1706:20;;:6;:20;;;1698:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1796:1;1776:22;;:8;:22;;;1768:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1866:28;1904:24;1938:25;2020:27;2040:6;2020:19;:27::i;:::-;2003:44;;2070:29;2090:8;2070:19;:29::i;:::-;2057:42;;2148:14;2131:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;2110:59;;2217:11;2229:10;2200:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2179:62;;2259:14;2274:11;2259:27;;;;;;:::i;:::-;;;;;;;;;;;;;;2252:34;;;;;1571:727;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;2663:1224:6:-;2827:1;2811:18;;:4;:18;;;2803:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2903:1;2889:16;;:2;:16;;;2881:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3016:10;3002:25;;:2;:25;;;2994:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:1;3090:6;:11;;3082:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3188:1;3178:6;:11;;3170:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3282:28;3320:24;3354:25;3429:31;3449:10;3429:19;:31::i;:::-;3412:48;;3483:23;3503:2;3483:19;:23::i;:::-;3470:36;;3554:14;3537:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;3516:59;;3623:11;3635:10;3606:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3585:62;;3717:6;3701:12;;:22;;;;;;;;;;;3754:6;3737:9;:13;3747:2;3737:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3805:6;3774:14;3789:11;3774:27;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;3868:2;3853:26;;3862:4;3853:26;;;3872:6;3853:26;;;;;;:::i;:::-;;;;;;;;2771:1116;;;2663:1224;;;:::o;2407:149:3:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1784:86::-;1819:7;1859:4;1852:5;1848:16;1837:27;;1784:86;;;:::o;1876:112::-;1959:22;1975:5;1959:22;:::i;:::-;1954:3;1947:35;1876:112;;:::o;1994:214::-;2083:4;2121:2;2110:9;2106:18;2098:26;;2134:67;2198:1;2187:9;2183:17;2174:6;2134:67;:::i;:::-;1994:214;;;;:::o;2214:75::-;2247:6;2280:2;2274:9;2264:19;;2214:75;:::o;2295:117::-;2404:1;2401;2394:12;2418:117;2527:1;2524;2517:12;2541:126;2578:7;2618:42;2611:5;2607:54;2596:65;;2541:126;;;:::o;2673:96::-;2710:7;2739:24;2757:5;2739:24;:::i;:::-;2728:35;;2673:96;;;:::o;2775:122::-;2848:24;2866:5;2848:24;:::i;:::-;2841:5;2838:35;2828:63;;2887:1;2884;2877:12;2828:63;2775:122;:::o;2903:139::-;2949:5;2987:6;2974:20;2965:29;;3003:33;3030:5;3003:33;:::i;:::-;2903:139;;;;:::o;3048:329::-;3107:6;3156:2;3144:9;3135:7;3131:23;3127:32;3124:119;;;3162:79;;:::i;:::-;3124:119;3282:1;3307:53;3352:7;3343:6;3332:9;3328:22;3307:53;:::i;:::-;3297:63;;3253:117;3048:329;;;;:::o;3383:117::-;3492:1;3489;3482:12;3506:117;3615:1;3612;3605:12;3629:180;3677:77;3674:1;3667:88;3774:4;3771:1;3764:15;3798:4;3795:1;3788:15;3815:281;3898:27;3920:4;3898:27;:::i;:::-;3890:6;3886:40;4028:6;4016:10;4013:22;3992:18;3980:10;3977:34;3974:62;3971:88;;;4039:18;;:::i;:::-;3971:88;4079:10;4075:2;4068:22;3858:238;3815:281;;:::o;4102:129::-;4136:6;4163:20;;:::i;:::-;4153:30;;4192:33;4220:4;4212:6;4192:33;:::i;:::-;4102:129;;;:::o;4237:308::-;4299:4;4389:18;4381:6;4378:30;4375:56;;;4411:18;;:::i;:::-;4375:56;4449:29;4471:6;4449:29;:::i;:::-;4441:37;;4533:4;4527;4523:15;4515:23;;4237:308;;;:::o;4551:146::-;4648:6;4643:3;4638;4625:30;4689:1;4680:6;4675:3;4671:16;4664:27;4551:146;;;:::o;4703:425::-;4781:5;4806:66;4822:49;4864:6;4822:49;:::i;:::-;4806:66;:::i;:::-;4797:75;;4895:6;4888:5;4881:21;4933:4;4926:5;4922:16;4971:3;4962:6;4957:3;4953:16;4950:25;4947:112;;;4978:79;;:::i;:::-;4947:112;5068:54;5115:6;5110:3;5105;5068:54;:::i;:::-;4787:341;4703:425;;;;;:::o;5148:340::-;5204:5;5253:3;5246:4;5238:6;5234:17;5230:27;5220:122;;5261:79;;:::i;:::-;5220:122;5378:6;5365:20;5403:79;5478:3;5470:6;5463:4;5455:6;5451:17;5403:79;:::i;:::-;5394:88;;5210:278;5148:340;;;;:::o;5494:509::-;5563:6;5612:2;5600:9;5591:7;5587:23;5583:32;5580:119;;;5618:79;;:::i;:::-;5580:119;5766:1;5755:9;5751:17;5738:31;5796:18;5788:6;5785:30;5782:117;;;5818:79;;:::i;:::-;5782:117;5923:63;5978:7;5969:6;5958:9;5954:22;5923:63;:::i;:::-;5913:73;;5709:287;5494:509;;;;:::o;6009:122::-;6082:24;6100:5;6082:24;:::i;:::-;6075:5;6072:35;6062:63;;6121:1;6118;6111:12;6062:63;6009:122;:::o;6137:139::-;6183:5;6221:6;6208:20;6199:29;;6237:33;6264:5;6237:33;:::i;:::-;6137:139;;;;:::o;6282:474::-;6350:6;6358;6407:2;6395:9;6386:7;6382:23;6378:32;6375:119;;;6413:79;;:::i;:::-;6375:119;6533:1;6558:53;6603:7;6594:6;6583:9;6579:22;6558:53;:::i;:::-;6548:63;;6504:117;6660:2;6686:53;6731:7;6722:6;6711:9;6707:22;6686:53;:::i;:::-;6676:63;;6631:118;6282:474;;;;;:::o;6762:90::-;6796:7;6839:5;6832:13;6825:21;6814:32;;6762:90;;;:::o;6858:109::-;6939:21;6954:5;6939:21;:::i;:::-;6934:3;6927:34;6858:109;;:::o;6973:210::-;7060:4;7098:2;7087:9;7083:18;7075:26;;7111:65;7173:1;7162:9;7158:17;7149:6;7111:65;:::i;:::-;6973:210;;;;:::o;7189:474::-;7257:6;7265;7314:2;7302:9;7293:7;7289:23;7285:32;7282:119;;;7320:79;;:::i;:::-;7282:119;7440:1;7465:53;7510:7;7501:6;7490:9;7486:22;7465:53;:::i;:::-;7455:63;;7411:117;7567:2;7593:53;7638:7;7629:6;7618:9;7614:22;7593:53;:::i;:::-;7583:63;;7538:118;7189:474;;;;;:::o;7669:180::-;7717:77;7714:1;7707:88;7814:4;7811:1;7804:15;7838:4;7835:1;7828:15;7855:320;7899:6;7936:1;7930:4;7926:12;7916:22;;7983:1;7977:4;7973:12;8004:18;7994:81;;8060:4;8052:6;8048:17;8038:27;;7994:81;8122:2;8114:6;8111:14;8091:18;8088:38;8085:84;;8141:18;;:::i;:::-;8085:84;7906:269;7855:320;;;:::o;8181:177::-;8321:29;8317:1;8309:6;8305:14;8298:53;8181:177;:::o;8364:366::-;8506:3;8527:67;8591:2;8586:3;8527:67;:::i;:::-;8520:74;;8603:93;8692:3;8603:93;:::i;:::-;8721:2;8716:3;8712:12;8705:19;;8364:366;;;:::o;8736:419::-;8902:4;8940:2;8929:9;8925:18;8917:26;;8989:9;8983:4;8979:20;8975:1;8964:9;8960:17;8953:47;9017:131;9143:4;9017:131;:::i;:::-;9009:139;;8736:419;;;:::o;9161:179::-;9301:31;9297:1;9289:6;9285:14;9278:55;9161:179;:::o;9346:366::-;9488:3;9509:67;9573:2;9568:3;9509:67;:::i;:::-;9502:74;;9585:93;9674:3;9585:93;:::i;:::-;9703:2;9698:3;9694:12;9687:19;;9346:366;;;:::o;9718:419::-;9884:4;9922:2;9911:9;9907:18;9899:26;;9971:9;9965:4;9961:20;9957:1;9946:9;9942:17;9935:47;9999:131;10125:4;9999:131;:::i;:::-;9991:139;;9718:419;;;:::o;10143:148::-;10245:11;10282:3;10267:18;;10143:148;;;;:::o;10297:390::-;10403:3;10431:39;10464:5;10431:39;:::i;:::-;10486:89;10568:6;10563:3;10486:89;:::i;:::-;10479:96;;10584:65;10642:6;10637:3;10630:4;10623:5;10619:16;10584:65;:::i;:::-;10674:6;10669:3;10665:16;10658:23;;10407:280;10297:390;;;;:::o;10693:152::-;10833:4;10829:1;10821:6;10817:14;10810:28;10693:152;:::o;10851:400::-;11011:3;11032:84;11114:1;11109:3;11032:84;:::i;:::-;11025:91;;11125:93;11214:3;11125:93;:::i;:::-;11243:1;11238:3;11234:11;11227:18;;10851:400;;;:::o;11257:541::-;11490:3;11512:95;11603:3;11594:6;11512:95;:::i;:::-;11505:102;;11624:148;11768:3;11624:148;:::i;:::-;11617:155;;11789:3;11782:10;;11257:541;;;;:::o;11804:435::-;11984:3;12006:95;12097:3;12088:6;12006:95;:::i;:::-;11999:102;;12118:95;12209:3;12200:6;12118:95;:::i;:::-;12111:102;;12230:3;12223:10;;11804:435;;;;;:::o;12245:275::-;12377:3;12399:95;12490:3;12481:6;12399:95;:::i;:::-;12392:102;;12511:3;12504:10;;12245:275;;;;:::o;12526:224::-;12666:34;12662:1;12654:6;12650:14;12643:58;12735:7;12730:2;12722:6;12718:15;12711:32;12526:224;:::o;12756:366::-;12898:3;12919:67;12983:2;12978:3;12919:67;:::i;:::-;12912:74;;12995:93;13084:3;12995:93;:::i;:::-;13113:2;13108:3;13104:12;13097:19;;12756:366;;;:::o;13128:419::-;13294:4;13332:2;13321:9;13317:18;13309:26;;13381:9;13375:4;13371:20;13367:1;13356:9;13352:17;13345:47;13409:131;13535:4;13409:131;:::i;:::-;13401:139;;13128:419;;;:::o;13553:222::-;13693:34;13689:1;13681:6;13677:14;13670:58;13762:5;13757:2;13749:6;13745:15;13738:30;13553:222;:::o;13781:366::-;13923:3;13944:67;14008:2;14003:3;13944:67;:::i;:::-;13937:74;;14020:93;14109:3;14020:93;:::i;:::-;14138:2;14133:3;14129:12;14122:19;;13781:366;;;:::o;14153:419::-;14319:4;14357:2;14346:9;14342:18;14334:26;;14406:9;14400:4;14396:20;14392:1;14381:9;14377:17;14370:47;14434:131;14560:4;14434:131;:::i;:::-;14426:139;;14153:419;;;:::o;14578:227::-;14718:34;14714:1;14706:6;14702:14;14695:58;14787:10;14782:2;14774:6;14770:15;14763:35;14578:227;:::o;14811:366::-;14953:3;14974:67;15038:2;15033:3;14974:67;:::i;:::-;14967:74;;15050:93;15139:3;15050:93;:::i;:::-;15168:2;15163:3;15159:12;15152:19;;14811:366;;;:::o;15183:419::-;15349:4;15387:2;15376:9;15372:18;15364:26;;15436:9;15430:4;15426:20;15422:1;15411:9;15407:17;15400:47;15464:131;15590:4;15464:131;:::i;:::-;15456:139;;15183:419;;;:::o;15608:241::-;15748:34;15744:1;15736:6;15732:14;15725:58;15817:24;15812:2;15804:6;15800:15;15793:49;15608:241;:::o;15855:366::-;15997:3;16018:67;16082:2;16077:3;16018:67;:::i;:::-;16011:74;;16094:93;16183:3;16094:93;:::i;:::-;16212:2;16207:3;16203:12;16196:19;;15855:366;;;:::o;16227:419::-;16393:4;16431:2;16420:9;16416:18;16408:26;;16480:9;16474:4;16470:20;16466:1;16455:9;16451:17;16444:47;16508:131;16634:4;16508:131;:::i;:::-;16500:139;;16227:419;;;:::o;16652:180::-;16700:77;16697:1;16690:88;16797:4;16794:1;16787:15;16821:4;16818:1;16811:15;16838:410;16878:7;16901:20;16919:1;16901:20;:::i;:::-;16896:25;;16935:20;16953:1;16935:20;:::i;:::-;16930:25;;16990:1;16987;16983:9;17012:30;17030:11;17012:30;:::i;:::-;17001:41;;17191:1;17182:7;17178:15;17175:1;17172:22;17152:1;17145:9;17125:83;17102:139;;17221:18;;:::i;:::-;17102:139;16886:362;16838:410;;;;:::o;17254:191::-;17294:3;17313:20;17331:1;17313:20;:::i;:::-;17308:25;;17347:20;17365:1;17347:20;:::i;:::-;17342:25;;17390:1;17387;17383:9;17376:16;;17411:3;17408:1;17405:10;17402:36;;;17418:18;;:::i;:::-;17402:36;17254:191;;;;:::o;17451:180::-;17499:77;17496:1;17489:88;17596:4;17593:1;17586:15;17620:4;17617:1;17610:15;17637:171;17676:3;17699:24;17717:5;17699:24;:::i;:::-;17690:33;;17745:4;17738:5;17735:15;17732:41;;17753:18;;:::i;:::-;17732:41;17800:1;17793:5;17789:13;17782:20;;17637:171;;;:::o;17814:182::-;17954:34;17950:1;17942:6;17938:14;17931:58;17814:182;:::o;18002:366::-;18144:3;18165:67;18229:2;18224:3;18165:67;:::i;:::-;18158:74;;18241:93;18330:3;18241:93;:::i;:::-;18359:2;18354:3;18350:12;18343:19;;18002:366;;;:::o;18374:419::-;18540:4;18578:2;18567:9;18563:18;18555:26;;18627:9;18621:4;18617:20;18613:1;18602:9;18598:17;18591:47;18655:131;18781:4;18655:131;:::i;:::-;18647:139;;18374:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1061200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balances_pair(string)": "infinite",
								"balanceOf(address)": "2908",
								"balancePairOf(address,address)": "infinite",
								"decimals()": "388",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2460",
								"transfer(address,uint256)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1144,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "54696E7920426F6F700000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1092,
									"end": 1111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1111,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "426F6F7000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1128,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1121,
									"end": 1137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 3890,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e574f3b747ca233c4d159f4a8f446b4d552f839ecd9e7f3dd54cfefe3fd1455f64736f6c63430008120033",
									".code": [
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "89DE1F5F"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "89DE1F5F"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "EB55BC6B"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 660,
											"end": 3890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1169,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1169,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1451,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1451,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1364,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1364,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2324,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2324,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2324,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1265,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1265,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2477,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2477,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1571,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1571,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1571,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1239,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1239,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1325,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1344,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1337,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1337,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2579,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2579,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2601,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2629,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2601,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2650,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1651,
											"end": 1658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1698,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1698,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1768,
											"end": 1832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1768,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1894,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2020,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2020,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2047,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2020,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2047,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2090,
											"end": 2098,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2070,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2099,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2070,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2131,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2228,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2200,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2273,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2259,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 2298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 3887,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2663,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2815,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2803,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2881,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3026,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2994,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2994,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3101,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3101,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3082,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3082,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3189,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3178,
											"end": 3184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3170,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3170,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3320,
											"end": 3344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3429,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3449,
											"end": 3459,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3429,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3460,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3429,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3412,
											"end": 3460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3483,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3506,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3483,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3537,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3606,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3788,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3789,
											"end": 3800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3774,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3870,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3866,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3872,
											"end": 3878,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3853,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 3887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 3,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1537,
											"end": 1542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1519,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1700,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1959,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1947,
											"end": 1982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2134,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2214,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2529,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2660,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2661,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2739,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2848,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2846,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2873,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3003,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2903,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3142,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3154,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3159,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3162,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3352,
											"end": 3359,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3307,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3360,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3253,
											"end": 3370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3500,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3383,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3623,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3506,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3629,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3754,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3778,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3920,
											"end": 3924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3898,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4035,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 3990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4036,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4039,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4075,
											"end": 4077,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4163,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4192,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4299,
											"end": 4303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4381,
											"end": 4387,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4408,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4411,
											"end": 4429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4449,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4697,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4551,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4643,
											"end": 4646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4641,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 4655,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4822,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4822,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4871,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4822,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4806,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4872,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4806,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 4872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 4872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4881,
											"end": 4902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4922,
											"end": 4938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 4974,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 4968,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4960,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4953,
											"end": 4969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4975,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 5059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4947,
											"end": 5059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4978,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4978,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5057,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4978,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 5059,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4947,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5108,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 5068,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5122,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5068,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 5128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 5128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5488,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5148,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5238,
											"end": 5244,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5230,
											"end": 5257,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5220,
											"end": 5342,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5261,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 5261,
											"end": 5340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5340,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5261,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5342,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5220,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5385,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5403,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5403,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 6003,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5494,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5598,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5615,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5580,
											"end": 5699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5618,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5618,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5618,
											"end": 5697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5618,
											"end": 5697,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5618,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5699,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5580,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5769,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5788,
											"end": 5794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5785,
											"end": 5815,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5899,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5782,
											"end": 5899,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5818,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5818,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5899,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5782,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5978,
											"end": 5985,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5967,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5923,
											"end": 5986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5986,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5923,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 6003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 6003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 6003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 6003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 6003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6131,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6009,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6100,
											"end": 6105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6082,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6107,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6062,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6228,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6264,
											"end": 6269,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6237,
											"end": 6270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6270,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6237,
											"end": 6270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6395,
											"end": 6404,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6393,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6378,
											"end": 6410,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 6413,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6603,
											"end": 6610,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6592,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6558,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6548,
											"end": 6611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6504,
											"end": 6621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6731,
											"end": 6738,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6722,
											"end": 6728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6686,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6739,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6686,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6739,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6852,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6762,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6845,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6825,
											"end": 6846,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6967,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6858,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6954,
											"end": 6959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6939,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6960,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6939,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6858,
											"end": 6967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7183,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6973,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7101,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7173,
											"end": 7174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7175,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7155,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7111,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7176,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7111,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7183,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7317,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7401,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 7282,
											"end": 7401,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 7320,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7320,
											"end": 7399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7320,
											"end": 7399,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 7320,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7401,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 7282,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7510,
											"end": 7517,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7465,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7465,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7465,
											"end": 7518,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7465,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7411,
											"end": 7528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7569,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7618,
											"end": 7627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7593,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7646,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 7593,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7189,
											"end": 7663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7849,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7669,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7794,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7795,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7818,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7804,
											"end": 7819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7838,
											"end": 7842,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 8175,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 7855,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7937,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 7938,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7977,
											"end": 7981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 7985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7994,
											"end": 8075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8064,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8052,
											"end": 8058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8038,
											"end": 8065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 8075,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7994,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8122,
											"end": 8124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8111,
											"end": 8125,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8126,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8085,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8085,
											"end": 8169,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8141,
											"end": 8159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8085,
											"end": 8169,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8085,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 8175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 8175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 8175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 8175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8358,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8181,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8350,
											"name": "PUSH",
											"source": 7,
											"value": "426F6F702053656E646572206164647265737320696E76616C69640000000000"
										},
										{
											"begin": 8317,
											"end": 8318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8309,
											"end": 8315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8730,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 8364,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8527,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 8586,
											"end": 8589,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8527,
											"end": 8594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8527,
											"end": 8594,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 8527,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 8692,
											"end": 8695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8603,
											"end": 8696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8696,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 8603,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8723,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 8724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8730,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 9155,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 8736,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 8998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8983,
											"end": 8987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8953,
											"end": 9000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9143,
											"end": 9147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 9017,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9148,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9017,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 9155,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 9155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 9155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8736,
											"end": 9155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9340,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9161,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9332,
											"name": "PUSH",
											"source": 7,
											"value": "426F6F70205265636569766572206164647265737320696E76616C6964000000"
										},
										{
											"begin": 9297,
											"end": 9298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9289,
											"end": 9295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9278,
											"end": 9333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9161,
											"end": 9340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9712,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9346,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9573,
											"end": 9575,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 9568,
											"end": 9571,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 9509,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9576,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9509,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9502,
											"end": 9576,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9502,
											"end": 9576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9585,
											"end": 9678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9678,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9585,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9698,
											"end": 9701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9712,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 10137,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 9718,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9911,
											"end": 9920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9971,
											"end": 9980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9965,
											"end": 9969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 9981,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9957,
											"end": 9958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9946,
											"end": 9955,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10125,
											"end": 10129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9999,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10130,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9999,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9991,
											"end": 10130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9991,
											"end": 10130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 10137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 10137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 10137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 10137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10291,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 10143,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10245,
											"end": 10256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10687,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 10297,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10403,
											"end": 10406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 10464,
											"end": 10469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10431,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10470,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 10431,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 10568,
											"end": 10574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10566,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 10486,
											"end": 10575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10575,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 10486,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10575,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10642,
											"end": 10648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10640,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10630,
											"end": 10634,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10628,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10619,
											"end": 10635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 10584,
											"end": 10649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10649,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10584,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10669,
											"end": 10672,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10658,
											"end": 10681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10407,
											"end": 10687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10845,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10693,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10833,
											"end": 10837,
											"name": "PUSH",
											"source": 7,
											"value": "5F5F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10829,
											"end": 10830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10817,
											"end": 10831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10810,
											"end": 10838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11251,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10851,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11011,
											"end": 11014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 11114,
											"end": 11115,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11109,
											"end": 11112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 11032,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11116,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 11032,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11214,
											"end": 11217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 11125,
											"end": 11218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11218,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11125,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11243,
											"end": 11244,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11238,
											"end": 11241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11227,
											"end": 11245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11227,
											"end": 11245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11798,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11257,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11490,
											"end": 11493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11603,
											"end": 11606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11600,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11512,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 11512,
											"end": 11607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11512,
											"end": 11607,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11512,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11505,
											"end": 11607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11505,
											"end": 11607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 11768,
											"end": 11771,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 11624,
											"end": 11772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11772,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 11624,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11617,
											"end": 11772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11617,
											"end": 11772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11782,
											"end": 11792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11782,
											"end": 11792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11984,
											"end": 11987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12097,
											"end": 12100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12088,
											"end": 12094,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12006,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 12006,
											"end": 12101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12006,
											"end": 12101,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12006,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11999,
											"end": 12101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11999,
											"end": 12101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12209,
											"end": 12212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12206,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 12118,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12213,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12118,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12111,
											"end": 12213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12111,
											"end": 12213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 12239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12520,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12245,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 12490,
											"end": 12493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12481,
											"end": 12487,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12399,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 12399,
											"end": 12494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12399,
											"end": 12494,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 12399,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12392,
											"end": 12494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12392,
											"end": 12494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12511,
											"end": 12514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12520,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12750,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 12526,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 12700,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12662,
											"end": 12663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12654,
											"end": 12660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12650,
											"end": 12664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12643,
											"end": 12701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 7,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12730,
											"end": 12732,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12722,
											"end": 12728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12718,
											"end": 12733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12711,
											"end": 12743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12898,
											"end": 12901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 12983,
											"end": 12985,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 12978,
											"end": 12981,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 12919,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 13084,
											"end": 13087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 12995,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13104,
											"end": 13116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12756,
											"end": 13122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13294,
											"end": 13298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13334,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13317,
											"end": 13335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13309,
											"end": 13335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13309,
											"end": 13335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13381,
											"end": 13390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13379,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13371,
											"end": 13391,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13367,
											"end": 13368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13352,
											"end": 13369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 13535,
											"end": 13539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 13409,
											"end": 13540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13401,
											"end": 13540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13401,
											"end": 13540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13775,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 13553,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 13727,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13689,
											"end": 13690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13681,
											"end": 13687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 13691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13670,
											"end": 13728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13762,
											"end": 13767,
											"name": "PUSH",
											"source": 7,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13757,
											"end": 13759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13749,
											"end": 13755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13738,
											"end": 13768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 14147,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 13781,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13923,
											"end": 13926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 14008,
											"end": 14010,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 14003,
											"end": 14006,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 13944,
											"end": 14011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14011,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 13944,
											"end": 14011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 14011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 14011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 14020,
											"end": 14113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14020,
											"end": 14113,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 14020,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14138,
											"end": 14140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14129,
											"end": 14141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 14147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 14147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 14147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13781,
											"end": 14147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14572,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 14153,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14319,
											"end": 14323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14357,
											"end": 14359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14346,
											"end": 14355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14406,
											"end": 14415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14396,
											"end": 14416,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14392,
											"end": 14393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14390,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14377,
											"end": 14394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14370,
											"end": 14417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14434,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 14560,
											"end": 14564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14434,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 14434,
											"end": 14565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14434,
											"end": 14565,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 14434,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14426,
											"end": 14565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14426,
											"end": 14565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14578,
											"end": 14805,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 14578,
											"end": 14805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14718,
											"end": 14752,
											"name": "PUSH",
											"source": 7,
											"value": "4865792120596F752063616E27742074727920746F20626F6F7020796F757273"
										},
										{
											"begin": 14714,
											"end": 14715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14695,
											"end": 14753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14787,
											"end": 14797,
											"name": "PUSH",
											"source": 7,
											"value": "656C6621203E3A63000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14782,
											"end": 14784,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14774,
											"end": 14780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14770,
											"end": 14785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14763,
											"end": 14798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14578,
											"end": 14805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14578,
											"end": 14805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 15177,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 14811,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14953,
											"end": 14956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14974,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 15038,
											"end": 15040,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 15033,
											"end": 15036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14974,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 14974,
											"end": 15041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14974,
											"end": 15041,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 14974,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14967,
											"end": 15041,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14967,
											"end": 15041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 15139,
											"end": 15142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 15050,
											"end": 15143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15143,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 15050,
											"end": 15143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15168,
											"end": 15170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15163,
											"end": 15166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15159,
											"end": 15171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15152,
											"end": 15171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15152,
											"end": 15171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 15177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 15177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 15177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 15177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15602,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 15183,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15349,
											"end": 15353,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15387,
											"end": 15389,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15376,
											"end": 15385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15364,
											"end": 15390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15364,
											"end": 15390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15436,
											"end": 15445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15430,
											"end": 15434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15422,
											"end": 15423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15411,
											"end": 15420,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15407,
											"end": 15424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15464,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 15590,
											"end": 15594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15464,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 15464,
											"end": 15595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15464,
											"end": 15595,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 15464,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15456,
											"end": 15595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15456,
											"end": 15595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15608,
											"end": 15849,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 15608,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15748,
											"end": 15782,
											"name": "PUSH",
											"source": 7,
											"value": "43616C6D20796F7572206372617A79207061772120426F6F702056616C756520"
										},
										{
											"begin": 15744,
											"end": 15745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15736,
											"end": 15742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15732,
											"end": 15746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15725,
											"end": 15783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15817,
											"end": 15841,
											"name": "PUSH",
											"source": 7,
											"value": "6D757374206265206265747765656E203120746F203300000000000000000000"
										},
										{
											"begin": 15812,
											"end": 15814,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15804,
											"end": 15810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15800,
											"end": 15815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15793,
											"end": 15842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15608,
											"end": 15849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15608,
											"end": 15849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 16221,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 15855,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15997,
											"end": 16000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16018,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 16082,
											"end": 16084,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 16077,
											"end": 16080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 16018,
											"end": 16085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16085,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 16018,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16094,
											"end": 16187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 16183,
											"end": 16186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16094,
											"end": 16187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 16094,
											"end": 16187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16094,
											"end": 16187,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 16094,
											"end": 16187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16203,
											"end": 16215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16196,
											"end": 16215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16196,
											"end": 16215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 16221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 16221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 16221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15855,
											"end": 16221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16227,
											"end": 16646,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 16227,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16393,
											"end": 16397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16431,
											"end": 16433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16420,
											"end": 16429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16416,
											"end": 16434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16480,
											"end": 16489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16474,
											"end": 16478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16490,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16466,
											"end": 16467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16455,
											"end": 16464,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16451,
											"end": 16468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16444,
											"end": 16491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16508,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 16634,
											"end": 16638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16508,
											"end": 16639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 16508,
											"end": 16639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16508,
											"end": 16639,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 16508,
											"end": 16639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16500,
											"end": 16639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16500,
											"end": 16639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16227,
											"end": 16646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16227,
											"end": 16646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16227,
											"end": 16646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16227,
											"end": 16646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16652,
											"end": 16832,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 16652,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16777,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16697,
											"end": 16698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16797,
											"end": 16801,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 16794,
											"end": 16795,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16787,
											"end": 16802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16821,
											"end": 16825,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16818,
											"end": 16819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16811,
											"end": 16826,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 17248,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 16838,
											"end": 17248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16878,
											"end": 16885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 16921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 16919,
											"end": 16920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16901,
											"end": 16921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 16901,
											"end": 16921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16901,
											"end": 16921,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 16901,
											"end": 16921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16896,
											"end": 16921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16896,
											"end": 16921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 16953,
											"end": 16954,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 16935,
											"end": 16955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 16955,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 16955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16990,
											"end": 16991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16987,
											"end": 16988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16983,
											"end": 16992,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17012,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 17030,
											"end": 17041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17012,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 17012,
											"end": 17042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17012,
											"end": 17042,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 17012,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17001,
											"end": 17042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17001,
											"end": 17042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17191,
											"end": 17192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17182,
											"end": 17189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17178,
											"end": 17193,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 17175,
											"end": 17176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17172,
											"end": 17194,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17153,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17125,
											"end": 17208,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17102,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 17102,
											"end": 17241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 17221,
											"end": 17239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17102,
											"end": 17241,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 17102,
											"end": 17241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16886,
											"end": 17248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 17248,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 17248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 17248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 17248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16838,
											"end": 17248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17445,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 17254,
											"end": 17445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17313,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 17331,
											"end": 17332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 17313,
											"end": 17333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17333,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 17313,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17308,
											"end": 17333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17347,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 17365,
											"end": 17366,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17347,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 17347,
											"end": 17367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17347,
											"end": 17367,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 17347,
											"end": 17367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17342,
											"end": 17367,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17342,
											"end": 17367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17390,
											"end": 17391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17387,
											"end": 17388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17383,
											"end": 17392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17376,
											"end": 17392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17376,
											"end": 17392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17411,
											"end": 17414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17405,
											"end": 17415,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17402,
											"end": 17438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17402,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 17402,
											"end": 17438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17418,
											"end": 17436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 17418,
											"end": 17436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 17418,
											"end": 17436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17418,
											"end": 17436,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 17418,
											"end": 17436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17402,
											"end": 17438,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 17402,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17445,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17254,
											"end": 17445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17451,
											"end": 17631,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 17451,
											"end": 17631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17499,
											"end": 17576,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17496,
											"end": 17497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17489,
											"end": 17577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17596,
											"end": 17600,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 17593,
											"end": 17594,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17586,
											"end": 17601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17620,
											"end": 17624,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17617,
											"end": 17618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17610,
											"end": 17625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17637,
											"end": 17808,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 17637,
											"end": 17808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17676,
											"end": 17679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17699,
											"end": 17723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 17717,
											"end": 17722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17699,
											"end": 17723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 17699,
											"end": 17723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17699,
											"end": 17723,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 17699,
											"end": 17723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17690,
											"end": 17723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17690,
											"end": 17723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17745,
											"end": 17749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17738,
											"end": 17743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17735,
											"end": 17750,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17732,
											"end": 17773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 17732,
											"end": 17773,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 17753,
											"end": 17771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17732,
											"end": 17773,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 17732,
											"end": 17773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17800,
											"end": 17801,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17793,
											"end": 17798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17789,
											"end": 17802,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17782,
											"end": 17802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17782,
											"end": 17802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17637,
											"end": 17808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17637,
											"end": 17808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17637,
											"end": 17808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17637,
											"end": 17808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17814,
											"end": 17996,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 17814,
											"end": 17996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17954,
											"end": 17988,
											"name": "PUSH",
											"source": 7,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 17950,
											"end": 17951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17942,
											"end": 17948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17938,
											"end": 17952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 17989,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17814,
											"end": 17996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17814,
											"end": 17996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18002,
											"end": 18368,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 18002,
											"end": 18368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18144,
											"end": 18147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18165,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 18229,
											"end": 18231,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18227,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18165,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 18165,
											"end": 18232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18165,
											"end": 18232,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 18165,
											"end": 18232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18158,
											"end": 18232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18241,
											"end": 18334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 18330,
											"end": 18333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18241,
											"end": 18334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 18241,
											"end": 18334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18241,
											"end": 18334,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 18241,
											"end": 18334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18359,
											"end": 18361,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18350,
											"end": 18362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18343,
											"end": 18362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18343,
											"end": 18362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18002,
											"end": 18368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18002,
											"end": 18368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18002,
											"end": 18368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18002,
											"end": 18368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18374,
											"end": 18793,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 18374,
											"end": 18793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18540,
											"end": 18544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18578,
											"end": 18580,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18555,
											"end": 18581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18555,
											"end": 18581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18627,
											"end": 18636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18621,
											"end": 18625,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18617,
											"end": 18637,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18613,
											"end": 18614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18602,
											"end": 18611,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18598,
											"end": 18615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18591,
											"end": 18638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18655,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18781,
											"end": 18785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18655,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 18655,
											"end": 18786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18655,
											"end": 18786,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18655,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18647,
											"end": 18786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18647,
											"end": 18786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18374,
											"end": 18793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18374,
											"end": 18793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18374,
											"end": 18793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18374,
											"end": 18793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tiny_boop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_balances_pair(string)": "89de1f5f",
							"balanceOf(address)": "70a08231",
							"balancePairOf(address,address)": "eb55bc6b",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_balances_pair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"balancePairOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tiny_boop.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"tiny_boop.sol\":{\"keccak256\":\"0x3d6d888c46ef288089d57434be2029a87cad064856f2a71743637498d8161738\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dfa91e3e153ecc1075ce1e7b033a31328fefe4157542281de30b50c50dc4bb6\",\"dweb:/ipfs/QmQXSSVdJjdhvmbwkJUz6u5fJkTn4NniSdFuCTbdTMD8L7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1335,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1339,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_balances_pair",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 1341,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1343,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1345,
								"contract": "tiny_boop.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 78,
							"src": "135:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IERC20",
										"nameLocations": [
											"305:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "305:6:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:1"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:1",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 102,
							"linearizedBaseContracts": [
								102,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "416:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:1"
									},
									"scope": 102,
									"src": "377:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:1",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "539:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:1"
									},
									"scope": 102,
									"src": "498:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:1",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "673:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 98,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:1"
									},
									"scope": 102,
									"src": "630:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 103,
							"src": "277:405:1",
							"usedErrors": []
						}
					],
					"src": "110:573:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							124
						]
					},
					"id": 125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 105,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 110,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 112,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 124,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 119,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 118,
												"id": 121,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 124,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 125,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1219
						],
						"SignedMath": [
							1324
						],
						"Strings": [
							353
						]
					},
					"id": 354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 1220,
							"src": "126:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 1325,
							"src": "152:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353
							],
							"name": "Strings",
							"nameLocation": "228:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 132,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "242:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 130,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 135,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "302:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 133,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 134,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "518:625:3",
										"statements": [
											{
												"id": 181,
												"nodeType": "UncheckedBlock",
												"src": "528:609:3",
												"statements": [
													{
														"assignments": [
															144
														],
														"declarations": [
															{
																"constant": false,
																"id": 144,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 181,
																"src": "552:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 143,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 151,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 147,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 138,
																		"src": "580:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 145,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "569:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1219_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1056,
																	"src": "569:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:3"
													},
													{
														"assignments": [
															153
														],
														"declarations": [
															{
																"constant": false,
																"id": 153,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 181,
																"src": "604:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 152,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 158,
														"initialValue": {
															"arguments": [
																{
																	"id": 156,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "638:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 154,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:3"
													},
													{
														"assignments": [
															160
														],
														"declarations": [
															{
																"constant": false,
																"id": 160,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 181,
																"src": "659:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 159,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 161,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 153,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:3",
																"valueSize": 1
															},
															{
																"declaration": 144,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:3",
																"valueSize": 1
															},
															{
																"declaration": 160,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:3",
																"valueSize": 1
															}
														],
														"id": 162,
														"nodeType": "InlineAssembly",
														"src": "731:76:3"
													},
													{
														"body": {
															"id": 177,
															"nodeType": "Block",
															"src": "833:267:3",
															"statements": [
																{
																	"expression": {
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:3",
																		"subExpression": {
																			"id": 164,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "851:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 166,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:3"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:3"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 132,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 160,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 138,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 167,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:3"
																},
																{
																	"expression": {
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "1035:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 171,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 172,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "1068:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 176,
																	"nodeType": "IfStatement",
																	"src": "1064:21:3",
																	"trueBody": {
																		"id": 175,
																		"nodeType": "Break",
																		"src": "1080:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 178,
														"nodeType": "WhileStatement",
														"src": "820:280:3"
													},
													{
														"expression": {
															"id": 179,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1120:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 142,
														"id": 180,
														"nodeType": "Return",
														"src": "1113:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:3"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "503:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:3"
									},
									"scope": 353,
									"src": "447:696:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1313:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "1354:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:3",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 204,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 186,
																					"src": "1400:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 202,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "1385:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1324_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:3",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1323,
																				"src": "1385:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 201,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			183,
																			211
																		],
																		"referencedDeclaration": 183,
																		"src": "1376:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 193,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 191,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 209,
												"nodeType": "Return",
												"src": "1323:86:3"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1261:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 185,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:3"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1298:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:3"
									},
									"scope": 353,
									"src": "1243:173:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1595:100:3",
										"statements": [
											{
												"id": 229,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "1648:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 223,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 214,
																				"src": "1667:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 221,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1219,
																				"src": "1655:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1219_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1179,
																			"src": "1655:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 219,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	231,
																	307,
																	327
																],
																"referencedDeclaration": 307,
																"src": "1636:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 218,
														"id": 228,
														"nodeType": "Return",
														"src": "1629:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1542:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:3"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1580:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:3"
									},
									"scope": 353,
									"src": "1521:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1908:347:3",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "1918:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 241,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 246,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "1954:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 243,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:3"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 252,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "1975:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 254,
														"indexExpression": {
															"hexValue": "30",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:3"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 258,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2000:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 260,
														"indexExpression": {
															"hexValue": "31",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:3"
											},
											{
												"body": {
													"id": 292,
													"nodeType": "Block",
													"src": "2070:83:3",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 278,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2084:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"indexExpression": {
																		"id": 279,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "2091:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 281,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "2096:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 282,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "2105:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:3"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "2131:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2058:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"initializationExpression": {
													"assignments": [
														265
													],
													"declarations": [
														{
															"constant": false,
															"id": 265,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 293,
															"src": "2030:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 264,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 271,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 267,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2046:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:3",
														"subExpression": {
															"id": 275,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "2067:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 295,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "2241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 301,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 305,
												"nodeType": "Return",
												"src": "2227:21:3"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1839:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1893:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:3"
									},
									"scope": 353,
									"src": "1818:437:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2480:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 320,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2525:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 318,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 316,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 323,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "2533:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 315,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															307,
															327
														],
														"referencedDeclaration": 307,
														"src": "2497:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 314,
												"id": 325,
												"nodeType": "Return",
												"src": "2490:59:3"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2428:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"scope": 353,
									"src": "2407:149:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2711:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 340,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "2744:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 338,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 337,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 346,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "2767:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 344,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 343,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 336,
												"id": 350,
												"nodeType": "Return",
												"src": "2721:49:3"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2648:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2665:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2705:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:3"
									},
									"scope": 353,
									"src": "2633:144:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 354,
							"src": "220:2559:3",
							"usedErrors": []
						}
					],
					"src": "101:2679:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1219
						]
					},
					"id": 1220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1219,
							"linearizedBaseContracts": [
								1219
							],
							"name": "Math",
							"nameLocation": "210:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 360,
									"members": [
										{
											"id": 357,
											"name": "Down",
											"nameLocation": "245:4:4",
											"nodeType": "EnumValue",
											"src": "245:4:4"
										},
										{
											"id": 358,
											"name": "Up",
											"nameLocation": "287:2:4",
											"nodeType": "EnumValue",
											"src": "287:2:4"
										},
										{
											"id": 359,
											"name": "Zero",
											"nameLocation": "318:4:4",
											"nodeType": "EnumValue",
											"src": "318:4:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:4",
									"nodeType": "EnumDefinition",
									"src": "221:122:4"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "480:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 370,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "497:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 371,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "501:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 374,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "509:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:4",
													"trueExpression": {
														"id": 373,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "505:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 369,
												"id": 376,
												"nodeType": "Return",
												"src": "490:20:4"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "426:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "437:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "471:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:4"
									},
									"scope": 1219,
									"src": "413:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "655:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 388,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "672:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 389,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "676:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 392,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "684:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:4",
													"trueExpression": {
														"id": 391,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "680:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 394,
												"nodeType": "Return",
												"src": "665:20:4"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "646:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:4"
									},
									"scope": 1219,
									"src": "588:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "876:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 406,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 407,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "935:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 409,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 410,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "941:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 411,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "945:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 413,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 417,
												"nodeType": "Return",
												"src": "923:28:4"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "822:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "833:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:4"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "867:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:4"
									},
									"scope": 1219,
									"src": "805:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1228:123:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 429,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1316:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 433,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "1330:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1339:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 428,
												"id": 442,
												"nodeType": "Return",
												"src": "1309:35:4"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1174:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1185:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:4"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1219:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:4"
									},
									"scope": 1219,
									"src": "1157:194:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1765:4115:4",
										"statements": [
											{
												"id": 565,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:4",
												"statements": [
													{
														"assignments": [
															457
														],
														"declarations": [
															{
																"constant": false,
																"id": 457,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 565,
																"src": "2096:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 456,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 458,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:4"
													},
													{
														"assignments": [
															460
														],
														"declarations": [
															{
																"constant": false,
																"id": 460,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 565,
																"src": "2168:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 459,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 461,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:4",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:4",
																"valueSize": 1
															},
															{
																"declaration": 447,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:4",
																"valueSize": 1
															},
															{
																"declaration": 447,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:4",
																"valueSize": 1
															},
															{
																"declaration": 449,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:4",
																"valueSize": 1
															},
															{
																"declaration": 449,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:4",
																"valueSize": 1
															}
														],
														"id": 462,
														"nodeType": "InlineAssembly",
														"src": "2239:166:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2486:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 471,
														"nodeType": "IfStatement",
														"src": "2482:368:4",
														"trueBody": {
															"id": 470,
															"nodeType": "Block",
															"src": "2498:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 466,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "2816:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 467,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 451,
																			"src": "2824:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 455,
																	"id": 469,
																	"nodeType": "Return",
																	"src": "2809:26:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 473,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "2960:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 474,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "2974:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 472,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 478,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:4"
													},
													{
														"assignments": [
															480
														],
														"declarations": [
															{
																"constant": false,
																"id": 480,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 565,
																"src": "3261:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 479,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 481,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:4"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:4"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 451,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:4",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:4",
																"valueSize": 1
															},
															{
																"declaration": 460,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:4",
																"valueSize": 1
															},
															{
																"declaration": 480,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:4",
																"valueSize": 1
															},
															{
																"declaration": 480,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:4",
																"valueSize": 1
															},
															{
																"declaration": 480,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:4",
																"valueSize": 1
															},
															{
																"declaration": 447,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:4",
																"valueSize": 1
															},
															{
																"declaration": 449,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:4",
																"valueSize": 1
															}
														],
														"id": 482,
														"nodeType": "InlineAssembly",
														"src": "3292:300:4"
													},
													{
														"assignments": [
															484
														],
														"declarations": [
															{
																"constant": false,
																"id": 484,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 565,
																"src": "3899:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 483,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 492,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "3914:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:4",
																			"subExpression": {
																				"id": 486,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "3930:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 490,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:4"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 451,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:4",
																"valueSize": 1
															},
															{
																"declaration": 451,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:4",
																"valueSize": 1
															},
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:4",
																"valueSize": 1
															},
															{
																"declaration": 484,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:4",
																"valueSize": 1
															},
															{
																"declaration": 484,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:4",
																"valueSize": 1
															},
															{
																"declaration": 484,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:4",
																"valueSize": 1
															},
															{
																"declaration": 484,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:4",
																"valueSize": 1
															},
															{
																"declaration": 484,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:4",
																"valueSize": 1
															}
														],
														"id": 493,
														"nodeType": "InlineAssembly",
														"src": "3960:371:4"
													},
													{
														"expression": {
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 494,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "4397:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 495,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "4406:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 496,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "4414:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 499,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:4"
													},
													{
														"assignments": [
															501
														],
														"declarations": [
															{
																"constant": false,
																"id": 501,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 565,
																"src": "4736:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 508,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 503,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 451,
																			"src": "4759:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 505,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:4"
													},
													{
														"expression": {
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 509,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "4992:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 511,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5007:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 512,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5021:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 516,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:4"
													},
													{
														"expression": {
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 517,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "5061:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5076:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 520,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5090:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 524,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:4"
													},
													{
														"expression": {
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 525,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "5131:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 527,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5146:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 528,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5160:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:4"
													},
													{
														"expression": {
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 533,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "5201:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5216:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 536,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5230:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 540,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:4"
													},
													{
														"expression": {
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 541,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "5271:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 543,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5286:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 544,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5300:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 548,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:4"
													},
													{
														"expression": {
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 549,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "5342:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 551,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5357:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 552,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5371:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:4"
													},
													{
														"expression": {
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 557,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "5812:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 558,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "5821:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 559,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "5829:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 562,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:4"
													},
													{
														"expression": {
															"id": 563,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5857:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 455,
														"id": 564,
														"nodeType": "Return",
														"src": "5850:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1683:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1694:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1705:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1749:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:4"
									},
									"scope": 1219,
									"src": "1667:4213:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "6122:189:4",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 610,
														"src": "6132:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"arguments": [
														{
															"id": 585,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6156:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 586,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "6159:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 587,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "6162:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															611
														],
														"referencedDeclaration": 567,
														"src": "6149:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$360",
															"typeString": "enum Math.Rounding"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 590,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6188:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$360",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 591,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "6200:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$360_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:4",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "6200:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$360",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 595,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "6222:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 596,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "6225:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 597,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "6228:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 594,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "6184:98:4",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "6246:36:4",
													"statements": [
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 602,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "6260:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 608,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 583,
													"src": "6298:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 581,
												"id": 609,
												"nodeType": "Return",
												"src": "6291:13:4"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6028:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6039:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6050:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6071:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$360",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 360,
														"src": "6071:8:4"
													},
													"referencedDeclaration": 360,
													"src": "6071:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$360",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6113:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:4"
									},
									"scope": 1219,
									"src": "6012:299:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "6587:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "6601:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "6597:45:4",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "6609:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 618,
															"id": 623,
															"nodeType": "Return",
															"src": "6623:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "7321:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 630,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "7349:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 629,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			891,
																			927
																		],
																		"referencedDeclaration": 891,
																		"src": "7344:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 634,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:4"
											},
											{
												"id": 721,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:4",
												"statements": [
													{
														"expression": {
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "7782:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 638,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7792:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 639,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "7801:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 640,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "7805:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 647,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:4"
													},
													{
														"expression": {
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 648,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "7831:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 649,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7841:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 650,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "7850:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 651,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "7854:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 658,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:4"
													},
													{
														"expression": {
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 659,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "7880:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 660,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7890:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 661,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "7899:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 662,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "7903:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 669,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:4"
													},
													{
														"expression": {
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 670,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "7929:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 671,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7939:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 672,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "7948:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 673,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "7952:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 680,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:4"
													},
													{
														"expression": {
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 681,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "7978:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 682,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "7988:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 683,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "7997:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 684,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "8001:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 687,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 691,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:4"
													},
													{
														"expression": {
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 692,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "8027:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 693,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "8037:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 694,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "8046:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 695,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "8050:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 702,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:4"
													},
													{
														"expression": {
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 703,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "8076:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 704,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "8086:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 705,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "8095:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 706,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "8099:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 709,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 715,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "8136:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 716,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "8144:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 717,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "8148:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 714,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "8132:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 618,
														"id": 720,
														"nodeType": "Return",
														"src": "8125:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "6544:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:4"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "6578:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:4"
									},
									"scope": 1219,
									"src": "6530:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "8348:161:4",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:4",
												"statements": [
													{
														"assignments": [
															735
														],
														"declarations": [
															{
																"constant": false,
																"id": 735,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 757,
																"src": "8382:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 734,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 739,
														"initialValue": {
															"arguments": [
																{
																	"id": 737,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "8404:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 736,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	723,
																	759
																],
																"referencedDeclaration": 723,
																"src": "8399:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "8427:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$360",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 741,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "8437:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 742,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "8449:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$360_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "8449:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 745,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 735,
																						"src": "8464:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 746,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 735,
																						"src": "8473:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 748,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "8482:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 733,
														"id": 756,
														"nodeType": "Return",
														"src": "8420:72:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8286:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8297:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$360",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 727,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 360,
														"src": "8297:8:4"
													},
													"referencedDeclaration": 360,
													"src": "8297:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$360",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8339:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:4"
									},
									"scope": 1219,
									"src": "8272:237:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "8694:922:4",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 890,
														"src": "8704:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"hexValue": "30",
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:4"
											},
											{
												"id": 887,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 771,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "8760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 785,
														"nodeType": "IfStatement",
														"src": "8756:99:4",
														"trueBody": {
															"id": 784,
															"nodeType": "Block",
															"src": "8778:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 776,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "8796:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 779,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:4"
																},
																{
																	"expression": {
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 780,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "8827:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 783,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 786,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "8872:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 800,
														"nodeType": "IfStatement",
														"src": "8868:96:4",
														"trueBody": {
															"id": 799,
															"nodeType": "Block",
															"src": "8889:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 791,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "8907:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 794,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:4"
																},
																{
																	"expression": {
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 795,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "8937:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 798,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 801,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "8981:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 815,
														"nodeType": "IfStatement",
														"src": "8977:96:4",
														"trueBody": {
															"id": 814,
															"nodeType": "Block",
															"src": "8998:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 806,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "9016:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 809,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:4"
																},
																{
																	"expression": {
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 810,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "9046:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 813,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 816,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "9090:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 830,
														"nodeType": "IfStatement",
														"src": "9086:96:4",
														"trueBody": {
															"id": 829,
															"nodeType": "Block",
															"src": "9107:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 821,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "9125:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 824,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:4"
																},
																{
																	"expression": {
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 825,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "9155:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 828,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 831,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "9199:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 845,
														"nodeType": "IfStatement",
														"src": "9195:93:4",
														"trueBody": {
															"id": 844,
															"nodeType": "Block",
															"src": "9215:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "9233:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 839,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:4"
																},
																{
																	"expression": {
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 840,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "9262:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 843,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 846,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "9305:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 860,
														"nodeType": "IfStatement",
														"src": "9301:93:4",
														"trueBody": {
															"id": 859,
															"nodeType": "Block",
															"src": "9321:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 851,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "9339:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 854,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:4"
																},
																{
																	"expression": {
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "9368:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "9411:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 875,
														"nodeType": "IfStatement",
														"src": "9407:93:4",
														"trueBody": {
															"id": 874,
															"nodeType": "Block",
															"src": "9427:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "9445:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 869,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:4"
																},
																{
																	"expression": {
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 870,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "9474:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 873,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 876,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "9517:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 886,
														"nodeType": "IfStatement",
														"src": "9513:64:4",
														"trueBody": {
															"id": 885,
															"nodeType": "Block",
															"src": "9533:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "9551:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 884,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 888,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 768,
													"src": "9603:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 766,
												"id": 889,
												"nodeType": "Return",
												"src": "9596:13:4"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:4",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "8647:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "8685:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:4"
									},
									"scope": 1219,
									"src": "8633:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "9849:165:4",
										"statements": [
											{
												"id": 925,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:4",
												"statements": [
													{
														"assignments": [
															903
														],
														"declarations": [
															{
																"constant": false,
																"id": 903,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 925,
																"src": "9883:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 902,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 907,
														"initialValue": {
															"arguments": [
																{
																	"id": 905,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "9905:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 904,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	891,
																	927
																],
																"referencedDeclaration": 891,
																"src": "9900:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "9932:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$360",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 909,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "9942:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 910,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "9954:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$360_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 911,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "9954:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 915,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 913,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 914,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 903,
																						"src": "9974:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 916,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "9983:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 922,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 901,
														"id": 924,
														"nodeType": "Return",
														"src": "9925:72:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "9783:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "9798:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$360",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 895,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 360,
														"src": "9798:8:4"
													},
													"referencedDeclaration": 360,
													"src": "9798:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$360",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "9840:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:4"
									},
									"scope": 1219,
									"src": "9769:245:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "10201:854:4",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "10211:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"hexValue": "30",
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:4"
											},
											{
												"id": 1052,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10267:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 955,
														"nodeType": "IfStatement",
														"src": "10263:103:4",
														"trueBody": {
															"id": 954,
															"nodeType": "Block",
															"src": "10286:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "10304:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 949,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:4"
																},
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 950,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10339:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10383:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 972,
														"nodeType": "IfStatement",
														"src": "10379:103:4",
														"trueBody": {
															"id": 971,
															"nodeType": "Block",
															"src": "10402:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 961,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "10420:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:4"
																},
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 967,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10455:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10499:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 989,
														"nodeType": "IfStatement",
														"src": "10495:103:4",
														"trueBody": {
															"id": 988,
															"nodeType": "Block",
															"src": "10518:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 978,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "10536:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 983,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:4"
																},
																{
																	"expression": {
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 984,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10571:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 987,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10615:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1006,
														"nodeType": "IfStatement",
														"src": "10611:100:4",
														"trueBody": {
															"id": 1005,
															"nodeType": "Block",
															"src": "10633:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 995,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "10651:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:4"
																},
																{
																	"expression": {
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10685:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1004,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1007,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10728:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1023,
														"nodeType": "IfStatement",
														"src": "10724:100:4",
														"trueBody": {
															"id": 1022,
															"nodeType": "Block",
															"src": "10746:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1012,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "10764:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1017,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:4"
																},
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1018,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10798:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10841:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1040,
														"nodeType": "IfStatement",
														"src": "10837:100:4",
														"trueBody": {
															"id": 1039,
															"nodeType": "Block",
															"src": "10859:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1029,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "10877:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:4"
																},
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10911:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "10954:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1051,
														"nodeType": "IfStatement",
														"src": "10950:66:4",
														"trueBody": {
															"id": 1050,
															"nodeType": "Block",
															"src": "10972:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1046,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "10990:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1053,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 936,
													"src": "11042:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 934,
												"id": 1054,
												"nodeType": "Return",
												"src": "11035:13:4"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:4",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "10154:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:4"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "10192:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:4"
									},
									"scope": 1219,
									"src": "10139:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "11290:167:4",
										"statements": [
											{
												"id": 1090,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:4",
												"statements": [
													{
														"assignments": [
															1068
														],
														"declarations": [
															{
																"constant": false,
																"id": 1068,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1090,
																"src": "11324:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1067,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1072,
														"initialValue": {
															"arguments": [
																{
																	"id": 1070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "11347:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1069,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1056,
																	1092
																],
																"referencedDeclaration": 1056,
																"src": "11341:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "11374:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$360",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1074,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1062,
																					"src": "11384:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1075,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "11396:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$360_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "11396:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1079,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1068,
																						"src": "11417:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1081,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1059,
																					"src": "11426:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1087,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1066,
														"id": 1089,
														"nodeType": "Return",
														"src": "11367:73:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "11224:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "11239:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$360",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1060,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 360,
														"src": "11239:8:4"
													},
													"referencedDeclaration": 360,
													"src": "11239:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$360",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:4"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "11281:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:4"
									},
									"scope": 1219,
									"src": "11209:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "11771:600:4",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "11781:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:4"
											},
											{
												"id": 1175,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1104,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "11837:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1118,
														"nodeType": "IfStatement",
														"src": "11833:98:4",
														"trueBody": {
															"id": 1117,
															"nodeType": "Block",
															"src": "11855:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1109,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "11873:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1112,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:4"
																},
																{
																	"expression": {
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1113,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "11904:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1116,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "11948:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1133,
														"nodeType": "IfStatement",
														"src": "11944:95:4",
														"trueBody": {
															"id": 1132,
															"nodeType": "Block",
															"src": "11965:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1124,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "11983:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1127,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:4"
																},
																{
																	"expression": {
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1128,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "12013:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1131,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "12056:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1148,
														"nodeType": "IfStatement",
														"src": "12052:95:4",
														"trueBody": {
															"id": 1147,
															"nodeType": "Block",
															"src": "12073:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1139,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "12091:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1142,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:4"
																},
																{
																	"expression": {
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1143,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "12121:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1149,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "12164:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1163,
														"nodeType": "IfStatement",
														"src": "12160:95:4",
														"trueBody": {
															"id": 1162,
															"nodeType": "Block",
															"src": "12181:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1154,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "12199:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1157,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:4"
																},
																{
																	"expression": {
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1158,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "12229:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1161,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1164,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "12272:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1174,
														"nodeType": "IfStatement",
														"src": "12268:64:4",
														"trueBody": {
															"id": 1173,
															"nodeType": "Block",
															"src": "12288:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "12306:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1176,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1101,
													"src": "12358:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1177,
												"nodeType": "Return",
												"src": "12351:13:4"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:4",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "11724:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:4"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "11762:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:4"
									},
									"scope": 1219,
									"src": "11708:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "12608:174:4",
										"statements": [
											{
												"id": 1216,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:4",
												"statements": [
													{
														"assignments": [
															1191
														],
														"declarations": [
															{
																"constant": false,
																"id": 1191,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1216,
																"src": "12642:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1190,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1195,
														"initialValue": {
															"arguments": [
																{
																	"id": 1193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "12666:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1192,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1179,
																	1218
																],
																"referencedDeclaration": 1179,
																"src": "12659:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1196,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "12693:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$360",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1197,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1185,
																					"src": "12703:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1198,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "12715:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$360_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1199,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:4",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 358,
																					"src": "12715:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$360",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1201,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1204,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1202,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1191,
																									"src": "12736:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1203,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1205,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1207,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "12751:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1213,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1189,
														"id": 1215,
														"nodeType": "Return",
														"src": "12686:79:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12542:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12557:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$360",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1183,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 360,
														"src": "12557:8:4"
													},
													"referencedDeclaration": 360,
													"src": "12557:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$360",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:4"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12599:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:4"
									},
									"scope": 1219,
									"src": "12526:256:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1220,
							"src": "202:12582:4",
							"usedErrors": []
						}
					],
					"src": "103:12682:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1324
						]
					},
					"id": 1325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1222,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:5",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1324,
							"linearizedBaseContracts": [
								1324
							],
							"name": "SignedMath",
							"nameLocation": "223:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "375:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1232,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "392:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1233,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "396:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1236,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "404:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:5",
													"trueExpression": {
														"id": 1235,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "400:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1238,
												"nodeType": "Return",
												"src": "385:20:5"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:5",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "324:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1224,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "334:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1226,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:5"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "367:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1229,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:5"
									},
									"scope": 1324,
									"src": "311:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "554:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1250,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "571:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1251,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "575:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1254,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:5",
													"trueExpression": {
														"id": 1253,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "579:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1256,
												"nodeType": "Return",
												"src": "564:20:5"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:5",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "503:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "513:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1244,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:5"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "546:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1247,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:5"
									},
									"scope": 1324,
									"src": "490:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "796:162:5",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "858:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1268,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1270,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "870:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1271,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "874:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1273,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1274,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "881:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1275,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1263,
																				"src": "885:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1277,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1280,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1283,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1288,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1269,
																						"src": "930:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1286,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1284,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1293,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "944:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1294,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1263,
																				"src": "948:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1296,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1298,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1300,
												"nodeType": "Return",
												"src": "903:48:5"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:5",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "745:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1260,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "755:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1262,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:5"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "788:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1265,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:5"
									},
									"scope": 1324,
									"src": "728:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "1102:158:5",
										"statements": [
											{
												"id": 1321,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1312,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "1227:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:5",
																		"subExpression": {
																			"id": 1316,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "1241:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:5",
																	"trueExpression": {
																		"id": 1315,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "1236:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1309,
														"id": 1320,
														"nodeType": "Return",
														"src": "1212:31:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:5",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1060:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1304,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:5"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1093:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:5"
									},
									"scope": 1324,
									"src": "1047:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1325,
							"src": "215:1047:5",
							"usedErrors": []
						}
					],
					"src": "109:1154:5"
				},
				"id": 5
			},
			"tiny_boop.sol": {
				"ast": {
					"absolutePath": "tiny_boop.sol",
					"exportedSymbols": {
						"Context": [
							124
						],
						"ERC20": [
							1636
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							102
						],
						"Math": [
							1219
						],
						"SignedMath": [
							1324
						],
						"Strings": [
							353
						]
					},
					"id": 1637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "454:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 1327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 103,
							"src": "479:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 125,
							"src": "555:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 354,
							"src": "607:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1330,
										"name": "Context",
										"nameLocations": [
											"678:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "678:7:6"
									},
									"id": 1331,
									"nodeType": "InheritanceSpecifier",
									"src": "678:7:6"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1636,
							"linearizedBaseContracts": [
								1636,
								124
							],
							"name": "ERC20",
							"nameLocation": "669:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1335,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "754:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "718:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1334,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "718:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1333,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "737:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "89de1f5f",
									"id": 1339,
									"mutability": "mutable",
									"name": "_balances_pair",
									"nameLocation": "830:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "795:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 1338,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1336,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "804:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "795:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "814:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1341,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "884:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "868:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "868:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1343,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "918:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "903:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1342,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "903:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1345,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "944:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "929:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1344,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "929:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1353,
									"name": "Transfer",
									"nameLocation": "977:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1002:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "986:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1024:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1008:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1036:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "1028:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:57:6"
									},
									"src": "971:72:6"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "1082:62:6",
										"statements": [
											{
												"expression": {
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "1092:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54696e7920426f6f70",
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1100:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c956f90c4d064d9cbc007e2ba1fd01201eadf23364c22e920fffcbd5105fb39b",
															"typeString": "literal_string \"Tiny Boop\""
														},
														"value": "Tiny Boop"
													},
													"src": "1092:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "1092:19:6"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1360,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "1121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "426f6f70",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_231adb773b657a6e5c7feb999129cc566a88d23ec391cc5a92ec77dc3483ed67",
															"typeString": "literal_string \"Boop\""
														},
														"value": "Boop"
													},
													"src": "1121:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "1121:16:6"
											}
										]
									},
									"id": 1365,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:6"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:6"
									},
									"scope": 1636,
									"src": "1068:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "1229:29:6",
										"statements": [
											{
												"expression": {
													"id": 1370,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1343,
													"src": "1246:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1371,
												"nodeType": "Return",
												"src": "1239:12:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1178:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:2:6"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1214:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1214:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:15:6"
									},
									"scope": 1636,
									"src": "1169:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "1327:31:6",
										"statements": [
											{
												"expression": {
													"id": 1378,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1345,
													"src": "1344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1379,
												"nodeType": "Return",
												"src": "1337:14:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1274:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:2:6"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1312:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:15:6"
									},
									"scope": 1636,
									"src": "1265:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "1420:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1437:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 1385,
												"id": 1387,
												"nodeType": "Return",
												"src": "1430:8:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1373:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:6"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "1413:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1383,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:7:6"
									},
									"scope": 1636,
									"src": "1364:81:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "1512:36:6",
										"statements": [
											{
												"expression": {
													"id": 1394,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1341,
													"src": "1529:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1393,
												"id": 1395,
												"nodeType": "Return",
												"src": "1522:19:6"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1460:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:2:6"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1503:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:6"
									},
									"scope": 1636,
									"src": "1451:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "1660:638:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1407,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "1706:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1724:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1716:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1716:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1716:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1706:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6f702053656e646572206164647265737320696e76616c6964",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																"typeString": "literal_string \"Boop Sender address invalid\""
															},
															"value": "Boop Sender address invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64a66bfec6bb9db2a367ce1907eaaf61bae26cbf797247b3d2ca7271a46a4708",
																"typeString": "literal_string \"Boop Sender address invalid\""
															}
														],
														"id": 1406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1698:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1698:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "1698:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "1776:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1796:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1788:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1788:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1788:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1776:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6f70205265636569766572206164647265737320696e76616c6964",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1800:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																"typeString": "literal_string \"Boop Receiver address invalid\""
															},
															"value": "Boop Receiver address invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f67f761809cddf8af78d6360329e5a8a1f5b4df55d8e6dcc8789b0f99a085e2c",
																"typeString": "literal_string \"Boop Receiver address invalid\""
															}
														],
														"id": 1416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1768:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "1768:64:6"
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "_string_sender",
														"nameLocation": "1880:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "1866:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1426,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1866:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1428,
												"nodeType": "VariableDeclarationStatement",
												"src": "1866:28:6"
											},
											{
												"assignments": [
													1430
												],
												"declarations": [
													{
														"constant": false,
														"id": 1430,
														"mutability": "mutable",
														"name": "_string_to",
														"nameLocation": "1918:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "1904:24:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1429,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1904:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"nodeType": "VariableDeclarationStatement",
												"src": "1904:24:6"
											},
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "_pair_value",
														"nameLocation": "1952:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "1938:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1432,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1938:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"nodeType": "VariableDeclarationStatement",
												"src": "1938:25:6"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1435,
														"name": "_string_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "2003:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1438,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "2040:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1436,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "2020:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$353_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2028:11:6",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 327,
															"src": "2020:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2020:27:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2003:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "2003:44:6"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1442,
														"name": "_string_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "2057:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1445,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "2090:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1443,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "2070:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$353_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2078:11:6",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 327,
															"src": "2070:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2070:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2057:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "2057:42:6"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "2110:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1454,
																		"name": "_string_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "2148:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "5f5f",
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2163:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		},
																		"value": "__"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		}
																	],
																	"expression": {
																		"id": 1452,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2131:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2135:12:6",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2131:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2131:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2124:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1450,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2124:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2124:45:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2110:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "2110:59:6"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1460,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "2179:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1465,
																		"name": "_pair_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "2217:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1466,
																		"name": "_string_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "2229:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1463,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2200:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2204:12:6",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2200:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2200:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2193:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1461,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2193:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2193:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2179:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "2179:62:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1471,
														"name": "_balances_pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "2259:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
															"typeString": "mapping(string memory => uint256)"
														}
													},
													"id": 1473,
													"indexExpression": {
														"id": 1472,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "2274:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2259:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1405,
												"id": 1474,
												"nodeType": "Return",
												"src": "2252:34:6"
											}
										]
									},
									"functionSelector": "eb55bc6b",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balancePairOf",
									"nameLocation": "1580:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1602:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "1594:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1618:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "1610:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:34:6"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "1651:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:9:6"
									},
									"scope": 1636,
									"src": "1571:727:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "2398:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1483,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "2415:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1485,
													"indexExpression": {
														"id": 1484,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "2425:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2415:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1486,
												"nodeType": "Return",
												"src": "2408:25:6"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2333:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "2343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:17:6"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "2389:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:9:6"
									},
									"scope": 1636,
									"src": "2324:116:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "2553:104:6",
										"statements": [
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2571:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "2563:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2563:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1499,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2579:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2579:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2563:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "2611:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2618:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "2622:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "2601:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2601:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "2601:28:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2646:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1496,
												"id": 1509,
												"nodeType": "Return",
												"src": "2639:11:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2486:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2503:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2495:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2515:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2507:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:28:6"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2547:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2547:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:6:6"
									},
									"scope": 1636,
									"src": "2477:180:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "2771:1116:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1521,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "2811:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2827:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2819:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1522,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2819:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2819:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2811:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2831:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2803:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2803:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "2803:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1531,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "2889:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2903:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2895:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2895:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2895:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2889:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2907:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2881:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2881:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "2881:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1541,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "3002:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1544,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3016:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3020:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3016:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3008:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1542,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3008:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3008:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3002:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865792120596f752063616e27742074727920746f20626f6f7020796f757273656c6621203e3a63",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3029:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																"typeString": "literal_string \"Hey! You can't try to boop yourself! >:c\""
															},
															"value": "Hey! You can't try to boop yourself! >:c"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a854c9db47d7a4c87d80d4a7e9abd921b4fbd591430dc4baeba491c461436217",
																"typeString": "literal_string \"Hey! You can't try to boop yourself! >:c\""
															}
														],
														"id": 1540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2994:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "2994:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1552,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "3090:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3100:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3090:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206d757374206265206265747765656e203120746f2033",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3103:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															},
															"value": "Calm your crazy paw! Boop Value must be between 1 to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															}
														],
														"id": 1551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3082:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "3082:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1559,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "3178:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "33",
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3188:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3178:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6d20796f7572206372617a79207061772120426f6f702056616c7565206d757374206265206265747765656e203120746f2033",
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3191:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															},
															"value": "Calm your crazy paw! Boop Value must be between 1 to 3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ca5b847b82a400d137ec58d85972108f244f0600b2106b2b64ad0ca1ea0209",
																"typeString": "literal_string \"Calm your crazy paw! Boop Value must be between 1 to 3\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3170:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "3170:78:6"
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "_string_sender",
														"nameLocation": "3296:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3282:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1565,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3282:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1567,
												"nodeType": "VariableDeclarationStatement",
												"src": "3282:28:6"
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "_string_to",
														"nameLocation": "3334:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3320:24:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1568,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3320:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"nodeType": "VariableDeclarationStatement",
												"src": "3320:24:6"
											},
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "_pair_value",
														"nameLocation": "3368:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3354:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1571,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3354:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"nodeType": "VariableDeclarationStatement",
												"src": "3354:25:6"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1574,
														"name": "_string_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "3412:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1577,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3449:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3453:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3449:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1575,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "3429:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$353_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3437:11:6",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 327,
															"src": "3429:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3429:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3412:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "3412:48:6"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "_string_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "3470:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1585,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "3503:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1583,
																"name": "Strings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "3483:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Strings_$353_$",
																	"typeString": "type(library Strings)"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3491:11:6",
															"memberName": "toHexString",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 327,
															"src": "3483:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3483:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3470:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "3470:36:6"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1589,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "3516:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1594,
																		"name": "_string_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "3554:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "5f5f",
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3569:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		},
																		"value": "__"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_fe163b8f54c682a0f5ccdb71eab2c310022e80b5c51bbfa56b69666bc7a4eead",
																			"typeString": "literal_string \"__\""
																		}
																	],
																	"expression": {
																		"id": 1592,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3537:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3541:12:6",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3537:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3537:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3530:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1590,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3530:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3530:45:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3516:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "3516:59:6"
											},
											{
												"expression": {
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1600,
														"name": "_pair_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "3585:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1605,
																		"name": "_pair_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "3623:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1606,
																		"name": "_string_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "3635:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1603,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3606:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3610:12:6",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3606:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3606:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3599:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1601,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3599:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3599:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3585:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "3585:62:6"
											},
											{
												"id": 1627,
												"nodeType": "UncheckedBlock",
												"src": "3677:145:6",
												"statements": [
													{
														"expression": {
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1611,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "3701:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1612,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "3717:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3701:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1614,
														"nodeType": "ExpressionStatement",
														"src": "3701:22:6"
													},
													{
														"expression": {
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1615,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "3737:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1617,
																"indexExpression": {
																	"id": 1616,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "3747:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3737:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1618,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "3754:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3737:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1620,
														"nodeType": "ExpressionStatement",
														"src": "3737:23:6"
													},
													{
														"expression": {
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1621,
																	"name": "_balances_pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "3774:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																		"typeString": "mapping(string memory => uint256)"
																	}
																},
																"id": 1623,
																"indexExpression": {
																	"id": 1622,
																	"name": "_pair_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "3789:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3774:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1624,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "3805:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3774:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1626,
														"nodeType": "ExpressionStatement",
														"src": "3774:37:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1629,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3862:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1630,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "3868:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1631,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "3872:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1628,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "3853:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3853:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "EmitStatement",
												"src": "3848:31:6"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2672:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2699:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2691:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2721:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2713:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2741:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2733:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:72:6"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:0:6"
									},
									"scope": 1636,
									"src": "2663:1224:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1637,
							"src": "660:3230:6",
							"usedErrors": []
						}
					],
					"src": "454:3437:6"
				},
				"id": 6
			}
		}
	}
}